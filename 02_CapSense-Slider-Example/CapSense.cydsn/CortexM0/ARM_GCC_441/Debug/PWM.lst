ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"PWM.c"
  13              		.section	.debug_abbrev,"",%progbits
  14              	.Ldebug_abbrev0:
  15              		.section	.debug_info,"",%progbits
  16              	.Ldebug_info0:
  17              		.section	.debug_line,"",%progbits
  18              	.Ldebug_line0:
  19 0000 85030000 		.text
  19      02005C00 
  19      00000201 
  19      FB0E0D00 
  19      01010101 
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.global	PWM_initVar
  23              		.bss
  24              		.type	PWM_initVar, %object
  25              		.size	PWM_initVar, 1
  26              	PWM_initVar:
  27 0000 00       		.space	1
  28              		.section	.text.PWM_Init,"ax",%progbits
  29              		.align	2
  30              		.global	PWM_Init
  31              		.code	16
  32              		.thumb_func
  33              		.type	PWM_Init, %function
  34              	PWM_Init:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 2


  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "cyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  37              		.loc 1 40 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  47              		.loc 1 50 0
  48 0004 0E4A     		ldr	r2, .L3
  49 0006 8023     		mov	r3, #128
  50 0008 DB04     		lsl	r3, r3, #19
  51 000a 1360     		str	r3, [r2]
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 3


  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  52              		.loc 1 62 0
  53 000c 0C4B     		ldr	r3, .L3
  54 000e 0C4A     		ldr	r2, .L3
  55 0010 1268     		ldr	r2, [r2]
  56 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  57              		.loc 1 73 0
  58 0014 0A4B     		ldr	r3, .L3
  59 0016 0A4A     		ldr	r2, .L3
  60 0018 1268     		ldr	r2, [r2]
  61 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  62              		.loc 1 96 0
  63 001c 094A     		ldr	r2, .L3+4
  64 001e C323     		mov	r3, #195
  65 0020 9B00     		lsl	r3, r3, #2
  66 0022 1360     		str	r3, [r2]
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 4


 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  67              		.loc 1 119 0
  68 0024 0020     		mov	r0, #0
  69 0026 FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 130:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 134:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 135:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 136:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 137:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 138:.\Generated_Source\PSoC4/PWM.c **** 
 139:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 140:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  70              		.loc 1 140 0
  71 002a 6420     		mov	r0, #100
  72 002c FFF7FEFF 		bl	PWM_WritePeriod
 141:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  73              		.loc 1 141 0
  74 0030 0020     		mov	r0, #0
  75 0032 FFF7FEFF 		bl	PWM_WriteCompare
 142:.\Generated_Source\PSoC4/PWM.c **** 
 143:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 144:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 145:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 146:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 147:.\Generated_Source\PSoC4/PWM.c **** 
 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 5


 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 156:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 157:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 158:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 159:.\Generated_Source\PSoC4/PWM.c ****         #else
 160:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 161:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  76              		.loc 1 161 0
  77 0036 044B     		ldr	r3, .L3+8
  78 0038 3122     		mov	r2, #49
  79 003a 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 163:.\Generated_Source\PSoC4/PWM.c **** 
 164:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 165:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 166:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 167:.\Generated_Source\PSoC4/PWM.c **** 
 168:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 169:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 170:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 171:.\Generated_Source\PSoC4/PWM.c **** 
 172:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 173:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 174:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 175:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 176:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 177:.\Generated_Source\PSoC4/PWM.c **** }
  80              		.loc 1 177 0
  81 003c BD46     		mov	sp, r7
  82              		@ sp needed for prologue
  83 003e 80BD     		pop	{r7, pc}
  84              	.L4:
  85              		.align	2
  86              	.L3:
  87 0040 00010540 		.word	1074069760
  88 0044 24010540 		.word	1074069796
  89 0048 28010540 		.word	1074069800
  90              		.cfi_endproc
  91              	.LFE0:
  92              		.size	PWM_Init, .-PWM_Init
  93              		.section	.text.PWM_Enable,"ax",%progbits
  94              		.align	2
  95              		.global	PWM_Enable
  96              		.code	16
  97              		.thumb_func
  98              		.type	PWM_Enable, %function
  99              	PWM_Enable:
 100              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM.c **** 
 179:.\Generated_Source\PSoC4/PWM.c **** 
 180:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 181:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 6


 182:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 183:.\Generated_Source\PSoC4/PWM.c **** *
 184:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 185:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 186:.\Generated_Source\PSoC4/PWM.c **** *
 187:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 188:.\Generated_Source\PSoC4/PWM.c **** *  None
 189:.\Generated_Source\PSoC4/PWM.c **** *
 190:.\Generated_Source\PSoC4/PWM.c **** * Return:
 191:.\Generated_Source\PSoC4/PWM.c **** *  None
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 195:.\Generated_Source\PSoC4/PWM.c **** {
 101              		.loc 1 195 0
 102              		.cfi_startproc
 103 0000 80B5     		push	{r7, lr}
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 82B0     		sub	sp, sp, #8
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 16
 111 0004 00AF     		add	r7, sp, #0
 112              	.LCFI4:
 113              		.cfi_def_cfa_register 7
 196:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 197:.\Generated_Source\PSoC4/PWM.c **** 
 198:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 198 0
 115 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 116 000a 031C     		mov	r3, r0
 117 000c 1A1C     		mov	r2, r3
 118 000e FB1D     		add	r3, r7, #7
 119 0010 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 120              		.loc 1 199 0
 121 0012 074B     		ldr	r3, .L7
 122 0014 064A     		ldr	r2, .L7
 123 0016 1168     		ldr	r1, [r2]
 124 0018 0122     		mov	r2, #1
 125 001a 0A43     		orr	r2, r2, r1
 126 001c 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 127              		.loc 1 200 0
 128 001e FB1D     		add	r3, r7, #7
 129 0020 1B78     		ldrb	r3, [r3]
 130 0022 181C     		mov	r0, r3
 131 0024 FFF7FEFF 		bl	CyExitCriticalSection
 201:.\Generated_Source\PSoC4/PWM.c **** 
 202:.\Generated_Source\PSoC4/PWM.c ****     /* Statr Timer or PWM if start input is absent */
 203:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 204:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 205:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 206:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 207:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 7


 208:.\Generated_Source\PSoC4/PWM.c **** 
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** }
 132              		.loc 1 214 0
 133 0028 BD46     		mov	sp, r7
 134 002a 02B0     		add	sp, sp, #8
 135              		@ sp needed for prologue
 136 002c 80BD     		pop	{r7, pc}
 137              	.L8:
 138 002e C046     		.align	2
 139              	.L7:
 140 0030 00000540 		.word	1074069504
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	PWM_Enable, .-PWM_Enable
 144              		.section	.text.PWM_Start,"ax",%progbits
 145              		.align	2
 146              		.global	PWM_Start
 147              		.code	16
 148              		.thumb_func
 149              		.type	PWM_Start, %function
 150              	PWM_Start:
 151              	.LFB2:
 215:.\Generated_Source\PSoC4/PWM.c **** 
 216:.\Generated_Source\PSoC4/PWM.c **** 
 217:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 218:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 219:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 220:.\Generated_Source\PSoC4/PWM.c **** *
 221:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 222:.\Generated_Source\PSoC4/PWM.c **** *  Initialize the PWM with default customizer
 223:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 224:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 225:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 228:.\Generated_Source\PSoC4/PWM.c **** *  None
 229:.\Generated_Source\PSoC4/PWM.c **** *
 230:.\Generated_Source\PSoC4/PWM.c **** * Return:
 231:.\Generated_Source\PSoC4/PWM.c **** *  None
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 234:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 235:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 236:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 237:.\Generated_Source\PSoC4/PWM.c **** *  enable/disable component without re-initialization in all subsequent calls
 238:.\Generated_Source\PSoC4/PWM.c **** *  to the PWM_Start() routine.
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 241:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 242:.\Generated_Source\PSoC4/PWM.c **** {
 152              		.loc 1 242 0
 153              		.cfi_startproc
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 8


 154 0000 80B5     		push	{r7, lr}
 155              	.LCFI5:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 00AF     		add	r7, sp, #0
 160              	.LCFI6:
 161              		.cfi_def_cfa_register 7
 243:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 162              		.loc 1 243 0
 163 0004 064B     		ldr	r3, .L12
 164 0006 1B78     		ldrb	r3, [r3]
 165 0008 002B     		cmp	r3, #0
 166 000a 04D1     		bne	.L10
 244:.\Generated_Source\PSoC4/PWM.c ****     {
 245:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 167              		.loc 1 245 0
 168 000c FFF7FEFF 		bl	PWM_Init
 246:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 169              		.loc 1 246 0
 170 0010 034B     		ldr	r3, .L12
 171 0012 0122     		mov	r2, #1
 172 0014 1A70     		strb	r2, [r3]
 173              	.L10:
 247:.\Generated_Source\PSoC4/PWM.c ****     }
 248:.\Generated_Source\PSoC4/PWM.c **** 
 249:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 174              		.loc 1 249 0
 175 0016 FFF7FEFF 		bl	PWM_Enable
 250:.\Generated_Source\PSoC4/PWM.c **** }
 176              		.loc 1 250 0
 177 001a BD46     		mov	sp, r7
 178              		@ sp needed for prologue
 179 001c 80BD     		pop	{r7, pc}
 180              	.L13:
 181 001e C046     		.align	2
 182              	.L12:
 183 0020 00000000 		.word	PWM_initVar
 184              		.cfi_endproc
 185              	.LFE2:
 186              		.size	PWM_Start, .-PWM_Start
 187              		.section	.text.PWM_Stop,"ax",%progbits
 188              		.align	2
 189              		.global	PWM_Stop
 190              		.code	16
 191              		.thumb_func
 192              		.type	PWM_Stop, %function
 193              	PWM_Stop:
 194              	.LFB3:
 251:.\Generated_Source\PSoC4/PWM.c **** 
 252:.\Generated_Source\PSoC4/PWM.c **** 
 253:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 254:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 255:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 256:.\Generated_Source\PSoC4/PWM.c **** *
 257:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 258:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 9


 259:.\Generated_Source\PSoC4/PWM.c **** *
 260:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 261:.\Generated_Source\PSoC4/PWM.c **** *  None
 262:.\Generated_Source\PSoC4/PWM.c **** *
 263:.\Generated_Source\PSoC4/PWM.c **** * Return:
 264:.\Generated_Source\PSoC4/PWM.c **** *  None
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 268:.\Generated_Source\PSoC4/PWM.c **** {
 195              		.loc 1 268 0
 196              		.cfi_startproc
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI7:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 82B0     		sub	sp, sp, #8
 203              	.LCFI8:
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI9:
 207              		.cfi_def_cfa_register 7
 269:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 270:.\Generated_Source\PSoC4/PWM.c **** 
 271:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 208              		.loc 1 271 0
 209 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 210 000a 031C     		mov	r3, r0
 211 000c 1A1C     		mov	r2, r3
 212 000e FB1D     		add	r3, r7, #7
 213 0010 1A70     		strb	r2, [r3]
 272:.\Generated_Source\PSoC4/PWM.c **** 
 273:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 214              		.loc 1 273 0
 215 0012 074B     		ldr	r3, .L16
 216 0014 064A     		ldr	r2, .L16
 217 0016 1268     		ldr	r2, [r2]
 218 0018 0121     		mov	r1, #1
 219 001a 8A43     		bic	r2, r2, r1
 220 001c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/PWM.c **** 
 275:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 221              		.loc 1 275 0
 222 001e FB1D     		add	r3, r7, #7
 223 0020 1B78     		ldrb	r3, [r3]
 224 0022 181C     		mov	r0, r3
 225 0024 FFF7FEFF 		bl	CyExitCriticalSection
 276:.\Generated_Source\PSoC4/PWM.c **** }
 226              		.loc 1 276 0
 227 0028 BD46     		mov	sp, r7
 228 002a 02B0     		add	sp, sp, #8
 229              		@ sp needed for prologue
 230 002c 80BD     		pop	{r7, pc}
 231              	.L17:
 232 002e C046     		.align	2
 233              	.L16:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 10


 234 0030 00000540 		.word	1074069504
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	PWM_Stop, .-PWM_Stop
 238              		.section	.text.PWM_SetMode,"ax",%progbits
 239              		.align	2
 240              		.global	PWM_SetMode
 241              		.code	16
 242              		.thumb_func
 243              		.type	PWM_SetMode, %function
 244              	PWM_SetMode:
 245              	.LFB4:
 277:.\Generated_Source\PSoC4/PWM.c **** 
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 281:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 284:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 285:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 286:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 287:.\Generated_Source\PSoC4/PWM.c **** *
 288:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 289:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 290:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 291:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 292:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 293:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 294:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 295:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 296:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 297:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 298:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 299:.\Generated_Source\PSoC4/PWM.c **** *
 300:.\Generated_Source\PSoC4/PWM.c **** * Return:
 301:.\Generated_Source\PSoC4/PWM.c **** *  None
 302:.\Generated_Source\PSoC4/PWM.c **** *
 303:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 305:.\Generated_Source\PSoC4/PWM.c **** {
 246              		.loc 1 305 0
 247              		.cfi_startproc
 248 0000 80B5     		push	{r7, lr}
 249              	.LCFI10:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 84B0     		sub	sp, sp, #16
 254              	.LCFI11:
 255              		.cfi_def_cfa_offset 24
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI12:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 306:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 307:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 11


 308:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 260              		.loc 1 308 0
 261 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 262 000c 031C     		mov	r3, r0
 263 000e 1A1C     		mov	r2, r3
 264 0010 3B1C     		mov	r3, r7
 265 0012 0F33     		add	r3, r3, #15
 266 0014 1A70     		strb	r2, [r3]
 309:.\Generated_Source\PSoC4/PWM.c **** 
 310:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 267              		.loc 1 310 0
 268 0016 0A4B     		ldr	r3, .L20
 269 0018 094A     		ldr	r2, .L20
 270 001a 1168     		ldr	r1, [r2]
 271 001c 094A     		ldr	r2, .L20+4
 272 001e 0A40     		and	r2, r2, r1
 273 0020 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 274              		.loc 1 311 0
 275 0022 074B     		ldr	r3, .L20
 276 0024 064A     		ldr	r2, .L20
 277 0026 1168     		ldr	r1, [r2]
 278 0028 7A68     		ldr	r2, [r7, #4]
 279 002a 0A43     		orr	r2, r2, r1
 280 002c 1A60     		str	r2, [r3]
 312:.\Generated_Source\PSoC4/PWM.c **** 
 313:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 281              		.loc 1 313 0
 282 002e 3B1C     		mov	r3, r7
 283 0030 0F33     		add	r3, r3, #15
 284 0032 1B78     		ldrb	r3, [r3]
 285 0034 181C     		mov	r0, r3
 286 0036 FFF7FEFF 		bl	CyExitCriticalSection
 314:.\Generated_Source\PSoC4/PWM.c **** }
 287              		.loc 1 314 0
 288 003a BD46     		mov	sp, r7
 289 003c 04B0     		add	sp, sp, #16
 290              		@ sp needed for prologue
 291 003e 80BD     		pop	{r7, pc}
 292              	.L21:
 293              		.align	2
 294              	.L20:
 295 0040 00010540 		.word	1074069760
 296 0044 FFFFFFF8 		.word	-117440513
 297              		.cfi_endproc
 298              	.LFE4:
 299              		.size	PWM_SetMode, .-PWM_SetMode
 300              		.section	.text.PWM_SetQDMode,"ax",%progbits
 301              		.align	2
 302              		.global	PWM_SetQDMode
 303              		.code	16
 304              		.thumb_func
 305              		.type	PWM_SetQDMode, %function
 306              	PWM_SetQDMode:
 307              	.LFB5:
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 12


 317:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 319:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/PWM.c **** *
 321:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 322:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of 3 supported modes.
 323:.\Generated_Source\PSoC4/PWM.c **** *  Is functionality is only applicable to Quadrature Decoder operation.
 324:.\Generated_Source\PSoC4/PWM.c **** *
 325:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 326:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 327:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 328:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 329:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 330:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 331:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 332:.\Generated_Source\PSoC4/PWM.c **** *
 333:.\Generated_Source\PSoC4/PWM.c **** * Return:
 334:.\Generated_Source\PSoC4/PWM.c **** *  None
 335:.\Generated_Source\PSoC4/PWM.c **** *
 336:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 337:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 338:.\Generated_Source\PSoC4/PWM.c **** {
 308              		.loc 1 338 0
 309              		.cfi_startproc
 310 0000 80B5     		push	{r7, lr}
 311              	.LCFI13:
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 84B0     		sub	sp, sp, #16
 316              	.LCFI14:
 317              		.cfi_def_cfa_offset 24
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI15:
 320              		.cfi_def_cfa_register 7
 321 0006 7860     		str	r0, [r7, #4]
 339:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 340:.\Generated_Source\PSoC4/PWM.c **** 
 341:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 341 0
 323 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 324 000c 031C     		mov	r3, r0
 325 000e 1A1C     		mov	r2, r3
 326 0010 3B1C     		mov	r3, r7
 327 0012 0F33     		add	r3, r3, #15
 328 0014 1A70     		strb	r2, [r3]
 342:.\Generated_Source\PSoC4/PWM.c **** 
 343:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 329              		.loc 1 343 0
 330 0016 0A4B     		ldr	r3, .L24
 331 0018 094A     		ldr	r2, .L24
 332 001a 1168     		ldr	r1, [r2]
 333 001c 094A     		ldr	r2, .L24+4
 334 001e 0A40     		and	r2, r2, r1
 335 0020 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 336              		.loc 1 344 0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 13


 337 0022 074B     		ldr	r3, .L24
 338 0024 064A     		ldr	r2, .L24
 339 0026 1168     		ldr	r1, [r2]
 340 0028 7A68     		ldr	r2, [r7, #4]
 341 002a 0A43     		orr	r2, r2, r1
 342 002c 1A60     		str	r2, [r3]
 345:.\Generated_Source\PSoC4/PWM.c **** 
 346:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 343              		.loc 1 346 0
 344 002e 3B1C     		mov	r3, r7
 345 0030 0F33     		add	r3, r3, #15
 346 0032 1B78     		ldrb	r3, [r3]
 347 0034 181C     		mov	r0, r3
 348 0036 FFF7FEFF 		bl	CyExitCriticalSection
 347:.\Generated_Source\PSoC4/PWM.c **** }
 349              		.loc 1 347 0
 350 003a BD46     		mov	sp, r7
 351 003c 04B0     		add	sp, sp, #16
 352              		@ sp needed for prologue
 353 003e 80BD     		pop	{r7, pc}
 354              	.L25:
 355              		.align	2
 356              	.L24:
 357 0040 00010540 		.word	1074069760
 358 0044 FFFF8FFF 		.word	-7340033
 359              		.cfi_endproc
 360              	.LFE5:
 361              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 362              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 363              		.align	2
 364              		.global	PWM_SetPrescaler
 365              		.code	16
 366              		.thumb_func
 367              		.type	PWM_SetPrescaler, %function
 368              	PWM_SetPrescaler:
 369              	.LFB6:
 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c **** 
 350:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 352:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/PWM.c **** *
 354:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 355:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 356:.\Generated_Source\PSoC4/PWM.c **** *  to PWM with dead time mode or Quadrature Decoder mode.
 357:.\Generated_Source\PSoC4/PWM.c **** *
 358:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 359:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 360:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 361:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 362:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 363:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 364:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 365:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 366:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 14


 369:.\Generated_Source\PSoC4/PWM.c **** *
 370:.\Generated_Source\PSoC4/PWM.c **** * Return:
 371:.\Generated_Source\PSoC4/PWM.c **** *  None
 372:.\Generated_Source\PSoC4/PWM.c **** *
 373:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 374:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 375:.\Generated_Source\PSoC4/PWM.c **** {
 370              		.loc 1 375 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              	.LCFI16:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 84B0     		sub	sp, sp, #16
 378              	.LCFI17:
 379              		.cfi_def_cfa_offset 24
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI18:
 382              		.cfi_def_cfa_register 7
 383 0006 7860     		str	r0, [r7, #4]
 376:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 377:.\Generated_Source\PSoC4/PWM.c **** 
 378:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 384              		.loc 1 378 0
 385 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 386 000c 031C     		mov	r3, r0
 387 000e 1A1C     		mov	r2, r3
 388 0010 3B1C     		mov	r3, r7
 389 0012 0F33     		add	r3, r3, #15
 390 0014 1A70     		strb	r2, [r3]
 379:.\Generated_Source\PSoC4/PWM.c **** 
 380:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 391              		.loc 1 380 0
 392 0016 0A4B     		ldr	r3, .L28
 393 0018 094A     		ldr	r2, .L28
 394 001a 1168     		ldr	r1, [r2]
 395 001c 094A     		ldr	r2, .L28+4
 396 001e 0A40     		and	r2, r2, r1
 397 0020 1A60     		str	r2, [r3]
 381:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 398              		.loc 1 381 0
 399 0022 074B     		ldr	r3, .L28
 400 0024 064A     		ldr	r2, .L28
 401 0026 1168     		ldr	r1, [r2]
 402 0028 7A68     		ldr	r2, [r7, #4]
 403 002a 0A43     		orr	r2, r2, r1
 404 002c 1A60     		str	r2, [r3]
 382:.\Generated_Source\PSoC4/PWM.c **** 
 383:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 405              		.loc 1 383 0
 406 002e 3B1C     		mov	r3, r7
 407 0030 0F33     		add	r3, r3, #15
 408 0032 1B78     		ldrb	r3, [r3]
 409 0034 181C     		mov	r0, r3
 410 0036 FFF7FEFF 		bl	CyExitCriticalSection
 384:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 15


 411              		.loc 1 384 0
 412 003a BD46     		mov	sp, r7
 413 003c 04B0     		add	sp, sp, #16
 414              		@ sp needed for prologue
 415 003e 80BD     		pop	{r7, pc}
 416              	.L29:
 417              		.align	2
 418              	.L28:
 419 0040 00010540 		.word	1074069760
 420 0044 FF00FFFF 		.word	-65281
 421              		.cfi_endproc
 422              	.LFE6:
 423              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 424              		.section	.text.PWM_SetOneShot,"ax",%progbits
 425              		.align	2
 426              		.global	PWM_SetOneShot
 427              		.code	16
 428              		.thumb_func
 429              		.type	PWM_SetOneShot, %function
 430              	PWM_SetOneShot:
 431              	.LFB7:
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c **** 
 387:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 388:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 389:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 390:.\Generated_Source\PSoC4/PWM.c **** *
 391:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 392:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 393:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 394:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in continuous mode.
 395:.\Generated_Source\PSoC4/PWM.c **** *
 396:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 397:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 398:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 399:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 400:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Return:
 403:.\Generated_Source\PSoC4/PWM.c **** *  None
 404:.\Generated_Source\PSoC4/PWM.c **** *
 405:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 406:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 407:.\Generated_Source\PSoC4/PWM.c **** {
 432              		.loc 1 407 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              	.LCFI19:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 84B0     		sub	sp, sp, #16
 440              	.LCFI20:
 441              		.cfi_def_cfa_offset 24
 442 0004 00AF     		add	r7, sp, #0
 443              	.LCFI21:
 444              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 16


 445 0006 7860     		str	r0, [r7, #4]
 408:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 409:.\Generated_Source\PSoC4/PWM.c **** 
 410:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 446              		.loc 1 410 0
 447 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 448 000c 031C     		mov	r3, r0
 449 000e 1A1C     		mov	r2, r3
 450 0010 3B1C     		mov	r3, r7
 451 0012 0F33     		add	r3, r3, #15
 452 0014 1A70     		strb	r2, [r3]
 411:.\Generated_Source\PSoC4/PWM.c **** 
 412:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 453              		.loc 1 412 0
 454 0016 0C4B     		ldr	r3, .L32
 455 0018 0B4A     		ldr	r2, .L32
 456 001a 1168     		ldr	r1, [r2]
 457 001c 0B4A     		ldr	r2, .L32+4
 458 001e 0A40     		and	r2, r2, r1
 459 0020 1A60     		str	r2, [r3]
 413:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 460              		.loc 1 413 0
 461 0022 094B     		ldr	r3, .L32
 462 0024 084A     		ldr	r2, .L32
 463 0026 1168     		ldr	r1, [r2]
 464 0028 7868     		ldr	r0, [r7, #4]
 465 002a 0122     		mov	r2, #1
 466 002c 0240     		and	r2, r2, r0
 467 002e 9204     		lsl	r2, r2, #18
 468 0030 0A43     		orr	r2, r2, r1
 469 0032 1A60     		str	r2, [r3]
 414:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 470              		.loc 1 416 0
 471 0034 3B1C     		mov	r3, r7
 472 0036 0F33     		add	r3, r3, #15
 473 0038 1B78     		ldrb	r3, [r3]
 474 003a 181C     		mov	r0, r3
 475 003c FFF7FEFF 		bl	CyExitCriticalSection
 417:.\Generated_Source\PSoC4/PWM.c **** }
 476              		.loc 1 417 0
 477 0040 BD46     		mov	sp, r7
 478 0042 04B0     		add	sp, sp, #16
 479              		@ sp needed for prologue
 480 0044 80BD     		pop	{r7, pc}
 481              	.L33:
 482 0046 C046     		.align	2
 483              	.L32:
 484 0048 00010540 		.word	1074069760
 485 004c FFFFFBFF 		.word	-262145
 486              		.cfi_endproc
 487              	.LFE7:
 488              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 489              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 490              		.align	2
 491              		.global	PWM_SetPWMMode
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 17


 492              		.code	16
 493              		.thumb_func
 494              		.type	PWM_SetPWMMode, %function
 495              	PWM_SetPWMMode:
 496              	.LFB8:
 418:.\Generated_Source\PSoC4/PWM.c **** 
 419:.\Generated_Source\PSoC4/PWM.c **** 
 420:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 421:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 422:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 423:.\Generated_Source\PSoC4/PWM.c **** *
 424:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 425:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 426:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 427:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the 3 must be ORed together to form the
 429:.\Generated_Source\PSoC4/PWM.c **** *  mode.
 430:.\Generated_Source\PSoC4/PWM.c **** *
 431:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 432:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: Combination of the 3 mode settings.  Mask must include a value for
 433:.\Generated_Source\PSoC4/PWM.c **** *  each of the 3 or use one of the preconfigured PWM settings.
 434:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 435:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 436:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 437:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 438:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 439:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 440:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on overflow
 441:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 442:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 443:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 444:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 445:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 448:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 449:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 450:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 451:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be 
 452:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 455:.\Generated_Source\PSoC4/PWM.c **** *
 456:.\Generated_Source\PSoC4/PWM.c **** * Return:
 457:.\Generated_Source\PSoC4/PWM.c **** *  None
 458:.\Generated_Source\PSoC4/PWM.c **** *
 459:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 460:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 461:.\Generated_Source\PSoC4/PWM.c **** {
 497              		.loc 1 461 0
 498              		.cfi_startproc
 499 0000 80B5     		push	{r7, lr}
 500              	.LCFI22:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 7, -8
 503              		.cfi_offset 14, -4
 504 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 18


 505              	.LCFI23:
 506              		.cfi_def_cfa_offset 16
 507 0004 00AF     		add	r7, sp, #0
 508              	.LCFI24:
 509              		.cfi_def_cfa_register 7
 510 0006 7860     		str	r0, [r7, #4]
 462:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 511              		.loc 1 462 0
 512 0008 034B     		ldr	r3, .L36
 513 000a 7968     		ldr	r1, [r7, #4]
 514 000c 3F22     		mov	r2, #63
 515 000e 0A40     		and	r2, r2, r1
 516 0010 1A60     		str	r2, [r3]
 463:.\Generated_Source\PSoC4/PWM.c **** }
 517              		.loc 1 463 0
 518 0012 BD46     		mov	sp, r7
 519 0014 02B0     		add	sp, sp, #8
 520              		@ sp needed for prologue
 521 0016 80BD     		pop	{r7, pc}
 522              	.L37:
 523              		.align	2
 524              	.L36:
 525 0018 28010540 		.word	1074069800
 526              		.cfi_endproc
 527              	.LFE8:
 528              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 529              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 530              		.align	2
 531              		.global	PWM_SetPWMSyncKill
 532              		.code	16
 533              		.thumb_func
 534              		.type	PWM_SetPWMSyncKill, %function
 535              	PWM_SetPWMSyncKill:
 536              	.LFB9:
 464:.\Generated_Source\PSoC4/PWM.c **** 
 465:.\Generated_Source\PSoC4/PWM.c **** 
 466:.\Generated_Source\PSoC4/PWM.c **** 
 467:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 468:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 469:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 470:.\Generated_Source\PSoC4/PWM.c **** *
 471:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 472:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 473:.\Generated_Source\PSoC4/PWM.c **** *  causes an asynchronous or synchronous kill operation.  By default the kill
 474:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to PWM and
 475:.\Generated_Source\PSoC4/PWM.c **** *  PWM with dead time modes.
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 478:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 479:.\Generated_Source\PSoC4/PWM.c **** *
 480:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 481:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 482:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in pass through mode
 483:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 19


 487:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 488:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 489:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 490:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Return:
 493:.\Generated_Source\PSoC4/PWM.c **** *  None
 494:.\Generated_Source\PSoC4/PWM.c **** *
 495:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 497:.\Generated_Source\PSoC4/PWM.c **** {
 537              		.loc 1 497 0
 538              		.cfi_startproc
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI25:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 84B0     		sub	sp, sp, #16
 545              	.LCFI26:
 546              		.cfi_def_cfa_offset 24
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI27:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 498:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 499:.\Generated_Source\PSoC4/PWM.c **** 
 500:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 551              		.loc 1 500 0
 552 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 553 000c 031C     		mov	r3, r0
 554 000e 1A1C     		mov	r2, r3
 555 0010 3B1C     		mov	r3, r7
 556 0012 0F33     		add	r3, r3, #15
 557 0014 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/PWM.c **** 
 502:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 558              		.loc 1 502 0
 559 0016 0C4B     		ldr	r3, .L40
 560 0018 0B4A     		ldr	r2, .L40
 561 001a 1268     		ldr	r2, [r2]
 562 001c 0421     		mov	r1, #4
 563 001e 8A43     		bic	r2, r2, r1
 564 0020 1A60     		str	r2, [r3]
 503:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 565              		.loc 1 503 0
 566 0022 094B     		ldr	r3, .L40
 567 0024 084A     		ldr	r2, .L40
 568 0026 1168     		ldr	r1, [r2]
 569 0028 7868     		ldr	r0, [r7, #4]
 570 002a 0122     		mov	r2, #1
 571 002c 0240     		and	r2, r2, r0
 572 002e 9200     		lsl	r2, r2, #2
 573 0030 0A43     		orr	r2, r2, r1
 574 0032 1A60     		str	r2, [r3]
 504:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 505:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 20


 506:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 575              		.loc 1 506 0
 576 0034 3B1C     		mov	r3, r7
 577 0036 0F33     		add	r3, r3, #15
 578 0038 1B78     		ldrb	r3, [r3]
 579 003a 181C     		mov	r0, r3
 580 003c FFF7FEFF 		bl	CyExitCriticalSection
 507:.\Generated_Source\PSoC4/PWM.c **** }
 581              		.loc 1 507 0
 582 0040 BD46     		mov	sp, r7
 583 0042 04B0     		add	sp, sp, #16
 584              		@ sp needed for prologue
 585 0044 80BD     		pop	{r7, pc}
 586              	.L41:
 587 0046 C046     		.align	2
 588              	.L40:
 589 0048 00010540 		.word	1074069760
 590              		.cfi_endproc
 591              	.LFE9:
 592              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 593              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 594              		.align	2
 595              		.global	PWM_SetPWMStopOnKill
 596              		.code	16
 597              		.thumb_func
 598              		.type	PWM_SetPWMStopOnKill, %function
 599              	PWM_SetPWMStopOnKill:
 600              	.LFB10:
 508:.\Generated_Source\PSoC4/PWM.c **** 
 509:.\Generated_Source\PSoC4/PWM.c **** 
 510:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 512:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/PWM.c **** *
 514:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 515:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 516:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 517:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 518:.\Generated_Source\PSoC4/PWM.c **** *
 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 521:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 522:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 523:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 524:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 525:.\Generated_Source\PSoC4/PWM.c **** *
 526:.\Generated_Source\PSoC4/PWM.c **** * Return:
 527:.\Generated_Source\PSoC4/PWM.c **** *  None
 528:.\Generated_Source\PSoC4/PWM.c **** *
 529:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 531:.\Generated_Source\PSoC4/PWM.c **** {
 601              		.loc 1 531 0
 602              		.cfi_startproc
 603 0000 80B5     		push	{r7, lr}
 604              	.LCFI28:
 605              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 21


 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 84B0     		sub	sp, sp, #16
 609              	.LCFI29:
 610              		.cfi_def_cfa_offset 24
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI30:
 613              		.cfi_def_cfa_register 7
 614 0006 7860     		str	r0, [r7, #4]
 532:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 533:.\Generated_Source\PSoC4/PWM.c **** 
 534:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 615              		.loc 1 534 0
 616 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 617 000c 031C     		mov	r3, r0
 618 000e 1A1C     		mov	r2, r3
 619 0010 3B1C     		mov	r3, r7
 620 0012 0F33     		add	r3, r3, #15
 621 0014 1A70     		strb	r2, [r3]
 535:.\Generated_Source\PSoC4/PWM.c **** 
 536:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 622              		.loc 1 536 0
 623 0016 0C4B     		ldr	r3, .L44
 624 0018 0B4A     		ldr	r2, .L44
 625 001a 1268     		ldr	r2, [r2]
 626 001c 0821     		mov	r1, #8
 627 001e 8A43     		bic	r2, r2, r1
 628 0020 1A60     		str	r2, [r3]
 537:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 629              		.loc 1 537 0
 630 0022 094B     		ldr	r3, .L44
 631 0024 084A     		ldr	r2, .L44
 632 0026 1168     		ldr	r1, [r2]
 633 0028 7868     		ldr	r0, [r7, #4]
 634 002a 0122     		mov	r2, #1
 635 002c 0240     		and	r2, r2, r0
 636 002e D200     		lsl	r2, r2, #3
 637 0030 0A43     		orr	r2, r2, r1
 638 0032 1A60     		str	r2, [r3]
 538:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 639              		.loc 1 540 0
 640 0034 3B1C     		mov	r3, r7
 641 0036 0F33     		add	r3, r3, #15
 642 0038 1B78     		ldrb	r3, [r3]
 643 003a 181C     		mov	r0, r3
 644 003c FFF7FEFF 		bl	CyExitCriticalSection
 541:.\Generated_Source\PSoC4/PWM.c **** }
 645              		.loc 1 541 0
 646 0040 BD46     		mov	sp, r7
 647 0042 04B0     		add	sp, sp, #16
 648              		@ sp needed for prologue
 649 0044 80BD     		pop	{r7, pc}
 650              	.L45:
 651 0046 C046     		.align	2
 652              	.L44:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 22


 653 0048 00010540 		.word	1074069760
 654              		.cfi_endproc
 655              	.LFE10:
 656              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 657              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 658              		.align	2
 659              		.global	PWM_SetPWMDeadTime
 660              		.code	16
 661              		.thumb_func
 662              		.type	PWM_SetPWMDeadTime, %function
 663              	PWM_SetPWMDeadTime:
 664              	.LFB11:
 542:.\Generated_Source\PSoC4/PWM.c **** 
 543:.\Generated_Source\PSoC4/PWM.c **** 
 544:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 546:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/PWM.c **** *
 548:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 549:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 550:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 551:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 552:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in dead time mode.
 553:.\Generated_Source\PSoC4/PWM.c **** 
 554:.\Generated_Source\PSoC4/PWM.c **** *
 555:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 556:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 557:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 558:.\Generated_Source\PSoC4/PWM.c **** *
 559:.\Generated_Source\PSoC4/PWM.c **** * Return:
 560:.\Generated_Source\PSoC4/PWM.c **** *  None
 561:.\Generated_Source\PSoC4/PWM.c **** *
 562:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 563:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 564:.\Generated_Source\PSoC4/PWM.c **** {
 665              		.loc 1 564 0
 666              		.cfi_startproc
 667 0000 80B5     		push	{r7, lr}
 668              	.LCFI31:
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 84B0     		sub	sp, sp, #16
 673              	.LCFI32:
 674              		.cfi_def_cfa_offset 24
 675 0004 00AF     		add	r7, sp, #0
 676              	.LCFI33:
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 565:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 566:.\Generated_Source\PSoC4/PWM.c **** 
 567:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 679              		.loc 1 567 0
 680 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 681 000c 031C     		mov	r3, r0
 682 000e 1A1C     		mov	r2, r3
 683 0010 3B1C     		mov	r3, r7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 23


 684 0012 0F33     		add	r3, r3, #15
 685 0014 1A70     		strb	r2, [r3]
 568:.\Generated_Source\PSoC4/PWM.c **** 
 569:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 686              		.loc 1 569 0
 687 0016 0C4B     		ldr	r3, .L48
 688 0018 0B4A     		ldr	r2, .L48
 689 001a 1168     		ldr	r1, [r2]
 690 001c 0B4A     		ldr	r2, .L48+4
 691 001e 0A40     		and	r2, r2, r1
 692 0020 1A60     		str	r2, [r3]
 570:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 693              		.loc 1 570 0
 694 0022 094B     		ldr	r3, .L48
 695 0024 084A     		ldr	r2, .L48
 696 0026 1168     		ldr	r1, [r2]
 697 0028 7A68     		ldr	r2, [r7, #4]
 698 002a 1202     		lsl	r2, r2, #8
 699 002c 1204     		lsl	r2, r2, #16
 700 002e 120C     		lsr	r2, r2, #16
 701 0030 0A43     		orr	r2, r2, r1
 702 0032 1A60     		str	r2, [r3]
 571:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 703              		.loc 1 573 0
 704 0034 3B1C     		mov	r3, r7
 705 0036 0F33     		add	r3, r3, #15
 706 0038 1B78     		ldrb	r3, [r3]
 707 003a 181C     		mov	r0, r3
 708 003c FFF7FEFF 		bl	CyExitCriticalSection
 574:.\Generated_Source\PSoC4/PWM.c **** }
 709              		.loc 1 574 0
 710 0040 BD46     		mov	sp, r7
 711 0042 04B0     		add	sp, sp, #16
 712              		@ sp needed for prologue
 713 0044 80BD     		pop	{r7, pc}
 714              	.L49:
 715 0046 C046     		.align	2
 716              	.L48:
 717 0048 00010540 		.word	1074069760
 718 004c FF00FFFF 		.word	-65281
 719              		.cfi_endproc
 720              	.LFE11:
 721              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 722              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 723              		.align	2
 724              		.global	PWM_SetPWMInvert
 725              		.code	16
 726              		.thumb_func
 727              		.type	PWM_SetPWMInvert, %function
 728              	PWM_SetPWMInvert:
 729              	.LFB12:
 575:.\Generated_Source\PSoC4/PWM.c **** 
 576:.\Generated_Source\PSoC4/PWM.c **** 
 577:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 578:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 24


 579:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 580:.\Generated_Source\PSoC4/PWM.c **** *
 581:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 582:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 583:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 584:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 585:.\Generated_Source\PSoC4/PWM.c **** *
 586:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 587:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 588:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 589:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 590:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Return:
 593:.\Generated_Source\PSoC4/PWM.c **** *  None
 594:.\Generated_Source\PSoC4/PWM.c **** *
 595:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 597:.\Generated_Source\PSoC4/PWM.c **** {
 730              		.loc 1 597 0
 731              		.cfi_startproc
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI34:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 84B0     		sub	sp, sp, #16
 738              	.LCFI35:
 739              		.cfi_def_cfa_offset 24
 740 0004 00AF     		add	r7, sp, #0
 741              	.LCFI36:
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 599:.\Generated_Source\PSoC4/PWM.c **** 
 600:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 744              		.loc 1 600 0
 745 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 746 000c 031C     		mov	r3, r0
 747 000e 1A1C     		mov	r2, r3
 748 0010 3B1C     		mov	r3, r7
 749 0012 0F33     		add	r3, r3, #15
 750 0014 1A70     		strb	r2, [r3]
 601:.\Generated_Source\PSoC4/PWM.c **** 
 602:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 751              		.loc 1 602 0
 752 0016 0A4B     		ldr	r3, .L52
 753 0018 094A     		ldr	r2, .L52
 754 001a 1168     		ldr	r1, [r2]
 755 001c 094A     		ldr	r2, .L52+4
 756 001e 0A40     		and	r2, r2, r1
 757 0020 1A60     		str	r2, [r3]
 603:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 758              		.loc 1 603 0
 759 0022 074B     		ldr	r3, .L52
 760 0024 064A     		ldr	r2, .L52
 761 0026 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 25


 762 0028 7A68     		ldr	r2, [r7, #4]
 763 002a 0A43     		orr	r2, r2, r1
 764 002c 1A60     		str	r2, [r3]
 604:.\Generated_Source\PSoC4/PWM.c **** 
 605:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 765              		.loc 1 605 0
 766 002e 3B1C     		mov	r3, r7
 767 0030 0F33     		add	r3, r3, #15
 768 0032 1B78     		ldrb	r3, [r3]
 769 0034 181C     		mov	r0, r3
 770 0036 FFF7FEFF 		bl	CyExitCriticalSection
 606:.\Generated_Source\PSoC4/PWM.c **** }
 771              		.loc 1 606 0
 772 003a BD46     		mov	sp, r7
 773 003c 04B0     		add	sp, sp, #16
 774              		@ sp needed for prologue
 775 003e 80BD     		pop	{r7, pc}
 776              	.L53:
 777              		.align	2
 778              	.L52:
 779 0040 00010540 		.word	1074069760
 780 0044 FFFFCFFF 		.word	-3145729
 781              		.cfi_endproc
 782              	.LFE12:
 783              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 784              		.section	.text.PWM_WriteCounter,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCounter
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCounter, %function
 790              	PWM_WriteCounter:
 791              	.LFB13:
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c **** 
 609:.\Generated_Source\PSoC4/PWM.c **** 
 610:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 612:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/PWM.c **** *
 614:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 615:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 616:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 617:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 620:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Return:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 627:.\Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 627 0
 793              		.cfi_startproc
 794 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 26


 795              	.LCFI37:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              	.LCFI38:
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              	.LCFI39:
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 628:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 806              		.loc 1 628 0
 807 0008 034B     		ldr	r3, .L56
 808 000a 7A68     		ldr	r2, [r7, #4]
 809 000c 1204     		lsl	r2, r2, #16
 810 000e 120C     		lsr	r2, r2, #16
 811 0010 1A60     		str	r2, [r3]
 629:.\Generated_Source\PSoC4/PWM.c **** }
 812              		.loc 1 629 0
 813 0012 BD46     		mov	sp, r7
 814 0014 02B0     		add	sp, sp, #8
 815              		@ sp needed for prologue
 816 0016 80BD     		pop	{r7, pc}
 817              	.L57:
 818              		.align	2
 819              	.L56:
 820 0018 08010540 		.word	1074069768
 821              		.cfi_endproc
 822              	.LFE13:
 823              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 824              		.section	.text.PWM_ReadCounter,"ax",%progbits
 825              		.align	2
 826              		.global	PWM_ReadCounter
 827              		.code	16
 828              		.thumb_func
 829              		.type	PWM_ReadCounter, %function
 830              	PWM_ReadCounter:
 831              	.LFB14:
 630:.\Generated_Source\PSoC4/PWM.c **** 
 631:.\Generated_Source\PSoC4/PWM.c **** 
 632:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 634:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/PWM.c **** *
 636:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 637:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 640:.\Generated_Source\PSoC4/PWM.c **** *  None
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Return:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 646:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 647:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 27


 832              		.loc 1 647 0
 833              		.cfi_startproc
 834 0000 80B5     		push	{r7, lr}
 835              	.LCFI40:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 00AF     		add	r7, sp, #0
 840              	.LCFI41:
 841              		.cfi_def_cfa_register 7
 648:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 842              		.loc 1 648 0
 843 0004 034B     		ldr	r3, .L60
 844 0006 1B68     		ldr	r3, [r3]
 845 0008 1B04     		lsl	r3, r3, #16
 846 000a 1B0C     		lsr	r3, r3, #16
 649:.\Generated_Source\PSoC4/PWM.c **** }
 847              		.loc 1 649 0
 848 000c 181C     		mov	r0, r3
 849 000e BD46     		mov	sp, r7
 850              		@ sp needed for prologue
 851 0010 80BD     		pop	{r7, pc}
 852              	.L61:
 853 0012 C046     		.align	2
 854              	.L60:
 855 0014 08010540 		.word	1074069768
 856              		.cfi_endproc
 857              	.LFE14:
 858              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 859              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 860              		.align	2
 861              		.global	PWM_SetCounterMode
 862              		.code	16
 863              		.thumb_func
 864              		.type	PWM_SetCounterMode, %function
 865              	PWM_SetCounterMode:
 866              	.LFB15:
 650:.\Generated_Source\PSoC4/PWM.c **** 
 651:.\Generated_Source\PSoC4/PWM.c **** 
 652:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 654:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 655:.\Generated_Source\PSoC4/PWM.c **** *
 656:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 657:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 658:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with pseudo random output.
 659:.\Generated_Source\PSoC4/PWM.c **** *
 660:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 661:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated couner type values
 662:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 663:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 664:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 665:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 666:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 667:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 668:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 669:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 28


 670:.\Generated_Source\PSoC4/PWM.c **** *
 671:.\Generated_Source\PSoC4/PWM.c **** * Return:
 672:.\Generated_Source\PSoC4/PWM.c **** *  None
 673:.\Generated_Source\PSoC4/PWM.c **** *
 674:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 675:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 676:.\Generated_Source\PSoC4/PWM.c **** {
 867              		.loc 1 676 0
 868              		.cfi_startproc
 869 0000 80B5     		push	{r7, lr}
 870              	.LCFI42:
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 84B0     		sub	sp, sp, #16
 875              	.LCFI43:
 876              		.cfi_def_cfa_offset 24
 877 0004 00AF     		add	r7, sp, #0
 878              	.LCFI44:
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 677:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 678:.\Generated_Source\PSoC4/PWM.c **** 
 679:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 881              		.loc 1 679 0
 882 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 883 000c 031C     		mov	r3, r0
 884 000e 1A1C     		mov	r2, r3
 885 0010 3B1C     		mov	r3, r7
 886 0012 0F33     		add	r3, r3, #15
 887 0014 1A70     		strb	r2, [r3]
 680:.\Generated_Source\PSoC4/PWM.c **** 
 681:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 888              		.loc 1 681 0
 889 0016 0A4B     		ldr	r3, .L64
 890 0018 094A     		ldr	r2, .L64
 891 001a 1168     		ldr	r1, [r2]
 892 001c 094A     		ldr	r2, .L64+4
 893 001e 0A40     		and	r2, r2, r1
 894 0020 1A60     		str	r2, [r3]
 682:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 895              		.loc 1 682 0
 896 0022 074B     		ldr	r3, .L64
 897 0024 064A     		ldr	r2, .L64
 898 0026 1168     		ldr	r1, [r2]
 899 0028 7A68     		ldr	r2, [r7, #4]
 900 002a 0A43     		orr	r2, r2, r1
 901 002c 1A60     		str	r2, [r3]
 683:.\Generated_Source\PSoC4/PWM.c **** 
 684:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 902              		.loc 1 684 0
 903 002e 3B1C     		mov	r3, r7
 904 0030 0F33     		add	r3, r3, #15
 905 0032 1B78     		ldrb	r3, [r3]
 906 0034 181C     		mov	r0, r3
 907 0036 FFF7FEFF 		bl	CyExitCriticalSection
 685:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 29


 908              		.loc 1 685 0
 909 003a BD46     		mov	sp, r7
 910 003c 04B0     		add	sp, sp, #16
 911              		@ sp needed for prologue
 912 003e 80BD     		pop	{r7, pc}
 913              	.L65:
 914              		.align	2
 915              	.L64:
 916 0040 00010540 		.word	1074069760
 917 0044 FFFFFCFF 		.word	-196609
 918              		.cfi_endproc
 919              	.LFE15:
 920              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 921              		.section	.text.PWM_WritePeriod,"ax",%progbits
 922              		.align	2
 923              		.global	PWM_WritePeriod
 924              		.code	16
 925              		.thumb_func
 926              		.type	PWM_WritePeriod, %function
 927              	PWM_WritePeriod:
 928              	.LFB16:
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c **** 
 688:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 689:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 690:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 691:.\Generated_Source\PSoC4/PWM.c **** *
 692:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 693:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 694:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 695:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 698:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Return:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 704:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 705:.\Generated_Source\PSoC4/PWM.c **** {
 929              		.loc 1 705 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI45:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              	.LCFI46:
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              	.LCFI47:
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 943              		.loc 1 706 0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 30


 944 0008 034B     		ldr	r3, .L68
 945 000a 7A68     		ldr	r2, [r7, #4]
 946 000c 1204     		lsl	r2, r2, #16
 947 000e 120C     		lsr	r2, r2, #16
 948 0010 1A60     		str	r2, [r3]
 707:.\Generated_Source\PSoC4/PWM.c **** }
 949              		.loc 1 707 0
 950 0012 BD46     		mov	sp, r7
 951 0014 02B0     		add	sp, sp, #8
 952              		@ sp needed for prologue
 953 0016 80BD     		pop	{r7, pc}
 954              	.L69:
 955              		.align	2
 956              	.L68:
 957 0018 14010540 		.word	1074069780
 958              		.cfi_endproc
 959              	.LFE16:
 960              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 961              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 962              		.align	2
 963              		.global	PWM_ReadPeriod
 964              		.code	16
 965              		.thumb_func
 966              		.type	PWM_ReadPeriod, %function
 967              	PWM_ReadPeriod:
 968              	.LFB17:
 708:.\Generated_Source\PSoC4/PWM.c **** 
 709:.\Generated_Source\PSoC4/PWM.c **** 
 710:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 711:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 712:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 713:.\Generated_Source\PSoC4/PWM.c **** *
 714:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 715:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 718:.\Generated_Source\PSoC4/PWM.c **** *  None
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Return:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 725:.\Generated_Source\PSoC4/PWM.c **** {
 969              		.loc 1 725 0
 970              		.cfi_startproc
 971 0000 80B5     		push	{r7, lr}
 972              	.LCFI48:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 00AF     		add	r7, sp, #0
 977              	.LCFI49:
 978              		.cfi_def_cfa_register 7
 726:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 979              		.loc 1 726 0
 980 0004 034B     		ldr	r3, .L72
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 31


 981 0006 1B68     		ldr	r3, [r3]
 982 0008 1B04     		lsl	r3, r3, #16
 983 000a 1B0C     		lsr	r3, r3, #16
 727:.\Generated_Source\PSoC4/PWM.c **** }
 984              		.loc 1 727 0
 985 000c 181C     		mov	r0, r3
 986 000e BD46     		mov	sp, r7
 987              		@ sp needed for prologue
 988 0010 80BD     		pop	{r7, pc}
 989              	.L73:
 990 0012 C046     		.align	2
 991              	.L72:
 992 0014 14010540 		.word	1074069780
 993              		.cfi_endproc
 994              	.LFE17:
 995              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 996              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 997              		.align	2
 998              		.global	PWM_SetCompareSwap
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	PWM_SetCompareSwap, %function
 1002              	PWM_SetCompareSwap:
 1003              	.LFB18:
 728:.\Generated_Source\PSoC4/PWM.c **** 
 729:.\Generated_Source\PSoC4/PWM.c **** 
 730:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 731:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 732:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 733:.\Generated_Source\PSoC4/PWM.c **** *
 734:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 735:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 736:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode(without capture) the swap occurs
 737:.\Generated_Source\PSoC4/PWM.c **** *  at a TC event. In PWM mode the swap occurs at the next TC event following
 738:.\Generated_Source\PSoC4/PWM.c **** *  a hardware switch event.
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 741:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 742:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 743:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 744:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Return:
 747:.\Generated_Source\PSoC4/PWM.c **** *  None
 748:.\Generated_Source\PSoC4/PWM.c **** *
 749:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 750:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 751:.\Generated_Source\PSoC4/PWM.c **** {
 1004              		.loc 1 751 0
 1005              		.cfi_startproc
 1006 0000 80B5     		push	{r7, lr}
 1007              	.LCFI50:
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 7, -8
 1010              		.cfi_offset 14, -4
 1011 0002 84B0     		sub	sp, sp, #16
 1012              	.LCFI51:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 32


 1013              		.cfi_def_cfa_offset 24
 1014 0004 00AF     		add	r7, sp, #0
 1015              	.LCFI52:
 1016              		.cfi_def_cfa_register 7
 1017 0006 7860     		str	r0, [r7, #4]
 752:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 753:.\Generated_Source\PSoC4/PWM.c **** 
 754:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1018              		.loc 1 754 0
 1019 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1020 000c 031C     		mov	r3, r0
 1021 000e 1A1C     		mov	r2, r3
 1022 0010 3B1C     		mov	r3, r7
 1023 0012 0F33     		add	r3, r3, #15
 1024 0014 1A70     		strb	r2, [r3]
 755:.\Generated_Source\PSoC4/PWM.c **** 
 756:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1025              		.loc 1 756 0
 1026 0016 0B4B     		ldr	r3, .L76
 1027 0018 0A4A     		ldr	r2, .L76
 1028 001a 1268     		ldr	r2, [r2]
 1029 001c 0121     		mov	r1, #1
 1030 001e 8A43     		bic	r2, r2, r1
 1031 0020 1A60     		str	r2, [r3]
 757:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1032              		.loc 1 757 0
 1033 0022 084B     		ldr	r3, .L76
 1034 0024 074A     		ldr	r2, .L76
 1035 0026 1168     		ldr	r1, [r2]
 1036 0028 7868     		ldr	r0, [r7, #4]
 1037 002a 0122     		mov	r2, #1
 1038 002c 0240     		and	r2, r2, r0
 1039 002e 0A43     		orr	r2, r2, r1
 1040 0030 1A60     		str	r2, [r3]
 758:.\Generated_Source\PSoC4/PWM.c **** 
 759:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1041              		.loc 1 759 0
 1042 0032 3B1C     		mov	r3, r7
 1043 0034 0F33     		add	r3, r3, #15
 1044 0036 1B78     		ldrb	r3, [r3]
 1045 0038 181C     		mov	r0, r3
 1046 003a FFF7FEFF 		bl	CyExitCriticalSection
 760:.\Generated_Source\PSoC4/PWM.c **** }
 1047              		.loc 1 760 0
 1048 003e BD46     		mov	sp, r7
 1049 0040 04B0     		add	sp, sp, #16
 1050              		@ sp needed for prologue
 1051 0042 80BD     		pop	{r7, pc}
 1052              	.L77:
 1053              		.align	2
 1054              	.L76:
 1055 0044 00010540 		.word	1074069760
 1056              		.cfi_endproc
 1057              	.LFE18:
 1058              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1059              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1060              		.align	2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 33


 1061              		.global	PWM_WritePeriodBuf
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	PWM_WritePeriodBuf, %function
 1065              	PWM_WritePeriodBuf:
 1066              	.LFB19:
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c **** 
 763:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 765:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 766:.\Generated_Source\PSoC4/PWM.c **** *
 767:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 768:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 771:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Return:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 777:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 778:.\Generated_Source\PSoC4/PWM.c **** {
 1067              		.loc 1 778 0
 1068              		.cfi_startproc
 1069 0000 80B5     		push	{r7, lr}
 1070              	.LCFI53:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 82B0     		sub	sp, sp, #8
 1075              	.LCFI54:
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              	.LCFI55:
 1079              		.cfi_def_cfa_register 7
 1080 0006 7860     		str	r0, [r7, #4]
 779:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1081              		.loc 1 779 0
 1082 0008 034B     		ldr	r3, .L80
 1083 000a 7A68     		ldr	r2, [r7, #4]
 1084 000c 1204     		lsl	r2, r2, #16
 1085 000e 120C     		lsr	r2, r2, #16
 1086 0010 1A60     		str	r2, [r3]
 780:.\Generated_Source\PSoC4/PWM.c **** }
 1087              		.loc 1 780 0
 1088 0012 BD46     		mov	sp, r7
 1089 0014 02B0     		add	sp, sp, #8
 1090              		@ sp needed for prologue
 1091 0016 80BD     		pop	{r7, pc}
 1092              	.L81:
 1093              		.align	2
 1094              	.L80:
 1095 0018 18010540 		.word	1074069784
 1096              		.cfi_endproc
 1097              	.LFE19:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 34


 1098              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1099              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1100              		.align	2
 1101              		.global	PWM_ReadPeriodBuf
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	PWM_ReadPeriodBuf, %function
 1105              	PWM_ReadPeriodBuf:
 1106              	.LFB20:
 781:.\Generated_Source\PSoC4/PWM.c **** 
 782:.\Generated_Source\PSoC4/PWM.c **** 
 783:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 784:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 785:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 786:.\Generated_Source\PSoC4/PWM.c **** *
 787:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 788:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 791:.\Generated_Source\PSoC4/PWM.c **** *  None
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Return:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 798:.\Generated_Source\PSoC4/PWM.c **** {
 1107              		.loc 1 798 0
 1108              		.cfi_startproc
 1109 0000 80B5     		push	{r7, lr}
 1110              	.LCFI56:
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 00AF     		add	r7, sp, #0
 1115              	.LCFI57:
 1116              		.cfi_def_cfa_register 7
 799:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1117              		.loc 1 799 0
 1118 0004 034B     		ldr	r3, .L84
 1119 0006 1B68     		ldr	r3, [r3]
 1120 0008 1B04     		lsl	r3, r3, #16
 1121 000a 1B0C     		lsr	r3, r3, #16
 800:.\Generated_Source\PSoC4/PWM.c **** }
 1122              		.loc 1 800 0
 1123 000c 181C     		mov	r0, r3
 1124 000e BD46     		mov	sp, r7
 1125              		@ sp needed for prologue
 1126 0010 80BD     		pop	{r7, pc}
 1127              	.L85:
 1128 0012 C046     		.align	2
 1129              	.L84:
 1130 0014 18010540 		.word	1074069784
 1131              		.cfi_endproc
 1132              	.LFE20:
 1133              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1134              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 35


 1135              		.align	2
 1136              		.global	PWM_SetPeriodSwap
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	PWM_SetPeriodSwap, %function
 1140              	PWM_SetPeriodSwap:
 1141              	.LFB21:
 801:.\Generated_Source\PSoC4/PWM.c **** 
 802:.\Generated_Source\PSoC4/PWM.c **** 
 803:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 805:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/PWM.c **** *
 807:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 808:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 809:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 810:.\Generated_Source\PSoC4/PWM.c **** *  In PWM mode the swap occurs at the next TC event following a hardware switch
 811:.\Generated_Source\PSoC4/PWM.c **** *  event.
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 814:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 815:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 816:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 817:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Return:
 820:.\Generated_Source\PSoC4/PWM.c **** *  None
 821:.\Generated_Source\PSoC4/PWM.c **** *
 822:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 824:.\Generated_Source\PSoC4/PWM.c **** {
 1142              		.loc 1 824 0
 1143              		.cfi_startproc
 1144 0000 80B5     		push	{r7, lr}
 1145              	.LCFI58:
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 84B0     		sub	sp, sp, #16
 1150              	.LCFI59:
 1151              		.cfi_def_cfa_offset 24
 1152 0004 00AF     		add	r7, sp, #0
 1153              	.LCFI60:
 1154              		.cfi_def_cfa_register 7
 1155 0006 7860     		str	r0, [r7, #4]
 825:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 826:.\Generated_Source\PSoC4/PWM.c **** 
 827:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1156              		.loc 1 827 0
 1157 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1158 000c 031C     		mov	r3, r0
 1159 000e 1A1C     		mov	r2, r3
 1160 0010 3B1C     		mov	r3, r7
 1161 0012 0F33     		add	r3, r3, #15
 1162 0014 1A70     		strb	r2, [r3]
 828:.\Generated_Source\PSoC4/PWM.c **** 
 829:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 36


 1163              		.loc 1 829 0
 1164 0016 0C4B     		ldr	r3, .L88
 1165 0018 0B4A     		ldr	r2, .L88
 1166 001a 1268     		ldr	r2, [r2]
 1167 001c 0221     		mov	r1, #2
 1168 001e 8A43     		bic	r2, r2, r1
 1169 0020 1A60     		str	r2, [r3]
 830:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1170              		.loc 1 830 0
 1171 0022 094B     		ldr	r3, .L88
 1172 0024 084A     		ldr	r2, .L88
 1173 0026 1168     		ldr	r1, [r2]
 1174 0028 7868     		ldr	r0, [r7, #4]
 1175 002a 0122     		mov	r2, #1
 1176 002c 0240     		and	r2, r2, r0
 1177 002e 5200     		lsl	r2, r2, #1
 1178 0030 0A43     		orr	r2, r2, r1
 1179 0032 1A60     		str	r2, [r3]
 831:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 832:.\Generated_Source\PSoC4/PWM.c **** 
 833:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1180              		.loc 1 833 0
 1181 0034 3B1C     		mov	r3, r7
 1182 0036 0F33     		add	r3, r3, #15
 1183 0038 1B78     		ldrb	r3, [r3]
 1184 003a 181C     		mov	r0, r3
 1185 003c FFF7FEFF 		bl	CyExitCriticalSection
 834:.\Generated_Source\PSoC4/PWM.c **** }
 1186              		.loc 1 834 0
 1187 0040 BD46     		mov	sp, r7
 1188 0042 04B0     		add	sp, sp, #16
 1189              		@ sp needed for prologue
 1190 0044 80BD     		pop	{r7, pc}
 1191              	.L89:
 1192 0046 C046     		.align	2
 1193              	.L88:
 1194 0048 00010540 		.word	1074069760
 1195              		.cfi_endproc
 1196              	.LFE21:
 1197              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1198              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1199              		.align	2
 1200              		.global	PWM_WriteCompare
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	PWM_WriteCompare, %function
 1204              	PWM_WriteCompare:
 1205              	.LFB22:
 835:.\Generated_Source\PSoC4/PWM.c **** 
 836:.\Generated_Source\PSoC4/PWM.c **** 
 837:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 838:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 839:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 840:.\Generated_Source\PSoC4/PWM.c **** *
 841:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 842:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 843:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 37


 844:.\Generated_Source\PSoC4/PWM.c **** *
 845:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 846:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 847:.\Generated_Source\PSoC4/PWM.c **** *
 848:.\Generated_Source\PSoC4/PWM.c **** * Return:
 849:.\Generated_Source\PSoC4/PWM.c **** *  None
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 853:.\Generated_Source\PSoC4/PWM.c **** {
 1206              		.loc 1 853 0
 1207              		.cfi_startproc
 1208 0000 80B5     		push	{r7, lr}
 1209              	.LCFI61:
 1210              		.cfi_def_cfa_offset 8
 1211              		.cfi_offset 7, -8
 1212              		.cfi_offset 14, -4
 1213 0002 82B0     		sub	sp, sp, #8
 1214              	.LCFI62:
 1215              		.cfi_def_cfa_offset 16
 1216 0004 00AF     		add	r7, sp, #0
 1217              	.LCFI63:
 1218              		.cfi_def_cfa_register 7
 1219 0006 7860     		str	r0, [r7, #4]
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1220              		.loc 1 854 0
 1221 0008 034B     		ldr	r3, .L92
 1222 000a 7A68     		ldr	r2, [r7, #4]
 1223 000c 1204     		lsl	r2, r2, #16
 1224 000e 120C     		lsr	r2, r2, #16
 1225 0010 1A60     		str	r2, [r3]
 855:.\Generated_Source\PSoC4/PWM.c **** }
 1226              		.loc 1 855 0
 1227 0012 BD46     		mov	sp, r7
 1228 0014 02B0     		add	sp, sp, #8
 1229              		@ sp needed for prologue
 1230 0016 80BD     		pop	{r7, pc}
 1231              	.L93:
 1232              		.align	2
 1233              	.L92:
 1234 0018 0C010540 		.word	1074069772
 1235              		.cfi_endproc
 1236              	.LFE22:
 1237              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1238              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1239              		.align	2
 1240              		.global	PWM_ReadCompare
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	PWM_ReadCompare, %function
 1244              	PWM_ReadCompare:
 1245              	.LFB23:
 856:.\Generated_Source\PSoC4/PWM.c **** 
 857:.\Generated_Source\PSoC4/PWM.c **** 
 858:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 860:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 38


 861:.\Generated_Source\PSoC4/PWM.c **** *
 862:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 863:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 864:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 865:.\Generated_Source\PSoC4/PWM.c **** *
 866:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 867:.\Generated_Source\PSoC4/PWM.c **** *  None
 868:.\Generated_Source\PSoC4/PWM.c **** *
 869:.\Generated_Source\PSoC4/PWM.c **** * Return:
 870:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 871:.\Generated_Source\PSoC4/PWM.c **** *
 872:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 874:.\Generated_Source\PSoC4/PWM.c **** {
 1246              		.loc 1 874 0
 1247              		.cfi_startproc
 1248 0000 80B5     		push	{r7, lr}
 1249              	.LCFI64:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 00AF     		add	r7, sp, #0
 1254              	.LCFI65:
 1255              		.cfi_def_cfa_register 7
 875:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1256              		.loc 1 875 0
 1257 0004 034B     		ldr	r3, .L96
 1258 0006 1B68     		ldr	r3, [r3]
 1259 0008 1B04     		lsl	r3, r3, #16
 1260 000a 1B0C     		lsr	r3, r3, #16
 876:.\Generated_Source\PSoC4/PWM.c **** }
 1261              		.loc 1 876 0
 1262 000c 181C     		mov	r0, r3
 1263 000e BD46     		mov	sp, r7
 1264              		@ sp needed for prologue
 1265 0010 80BD     		pop	{r7, pc}
 1266              	.L97:
 1267 0012 C046     		.align	2
 1268              	.L96:
 1269 0014 0C010540 		.word	1074069772
 1270              		.cfi_endproc
 1271              	.LFE23:
 1272              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1273              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1274              		.align	2
 1275              		.global	PWM_WriteCompareBuf
 1276              		.code	16
 1277              		.thumb_func
 1278              		.type	PWM_WriteCompareBuf, %function
 1279              	PWM_WriteCompareBuf:
 1280              	.LFB24:
 877:.\Generated_Source\PSoC4/PWM.c **** 
 878:.\Generated_Source\PSoC4/PWM.c **** 
 879:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 881:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 39


 883:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 884:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 885:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 886:.\Generated_Source\PSoC4/PWM.c **** *
 887:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 888:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 889:.\Generated_Source\PSoC4/PWM.c **** *
 890:.\Generated_Source\PSoC4/PWM.c **** * Return:
 891:.\Generated_Source\PSoC4/PWM.c **** *  None
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 894:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 895:.\Generated_Source\PSoC4/PWM.c **** {
 1281              		.loc 1 895 0
 1282              		.cfi_startproc
 1283 0000 80B5     		push	{r7, lr}
 1284              	.LCFI66:
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 82B0     		sub	sp, sp, #8
 1289              	.LCFI67:
 1290              		.cfi_def_cfa_offset 16
 1291 0004 00AF     		add	r7, sp, #0
 1292              	.LCFI68:
 1293              		.cfi_def_cfa_register 7
 1294 0006 7860     		str	r0, [r7, #4]
 896:.\Generated_Source\PSoC4/PWM.c ****    PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1295              		.loc 1 896 0
 1296 0008 034B     		ldr	r3, .L100
 1297 000a 7A68     		ldr	r2, [r7, #4]
 1298 000c 1204     		lsl	r2, r2, #16
 1299 000e 120C     		lsr	r2, r2, #16
 1300 0010 1A60     		str	r2, [r3]
 897:.\Generated_Source\PSoC4/PWM.c **** }
 1301              		.loc 1 897 0
 1302 0012 BD46     		mov	sp, r7
 1303 0014 02B0     		add	sp, sp, #8
 1304              		@ sp needed for prologue
 1305 0016 80BD     		pop	{r7, pc}
 1306              	.L101:
 1307              		.align	2
 1308              	.L100:
 1309 0018 10010540 		.word	1074069776
 1310              		.cfi_endproc
 1311              	.LFE24:
 1312              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1313              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1314              		.align	2
 1315              		.global	PWM_ReadCompareBuf
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	PWM_ReadCompareBuf, %function
 1319              	PWM_ReadCompareBuf:
 1320              	.LFB25:
 898:.\Generated_Source\PSoC4/PWM.c **** 
 899:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 40


 900:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 901:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 902:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 903:.\Generated_Source\PSoC4/PWM.c **** *
 904:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 905:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 906:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 907:.\Generated_Source\PSoC4/PWM.c **** *
 908:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 909:.\Generated_Source\PSoC4/PWM.c **** *  None
 910:.\Generated_Source\PSoC4/PWM.c **** *
 911:.\Generated_Source\PSoC4/PWM.c **** * Return:
 912:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 913:.\Generated_Source\PSoC4/PWM.c **** *
 914:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 915:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 916:.\Generated_Source\PSoC4/PWM.c **** {
 1321              		.loc 1 916 0
 1322              		.cfi_startproc
 1323 0000 80B5     		push	{r7, lr}
 1324              	.LCFI69:
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 00AF     		add	r7, sp, #0
 1329              	.LCFI70:
 1330              		.cfi_def_cfa_register 7
 917:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1331              		.loc 1 917 0
 1332 0004 034B     		ldr	r3, .L104
 1333 0006 1B68     		ldr	r3, [r3]
 1334 0008 1B04     		lsl	r3, r3, #16
 1335 000a 1B0C     		lsr	r3, r3, #16
 918:.\Generated_Source\PSoC4/PWM.c **** }
 1336              		.loc 1 918 0
 1337 000c 181C     		mov	r0, r3
 1338 000e BD46     		mov	sp, r7
 1339              		@ sp needed for prologue
 1340 0010 80BD     		pop	{r7, pc}
 1341              	.L105:
 1342 0012 C046     		.align	2
 1343              	.L104:
 1344 0014 10010540 		.word	1074069776
 1345              		.cfi_endproc
 1346              	.LFE25:
 1347              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1348              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1349              		.align	2
 1350              		.global	PWM_ReadCapture
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	PWM_ReadCapture, %function
 1354              	PWM_ReadCapture:
 1355              	.LFB26:
 919:.\Generated_Source\PSoC4/PWM.c **** 
 920:.\Generated_Source\PSoC4/PWM.c **** 
 921:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 41


 922:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 923:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 924:.\Generated_Source\PSoC4/PWM.c **** *
 925:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 926:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
 927:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 928:.\Generated_Source\PSoC4/PWM.c **** *
 929:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 930:.\Generated_Source\PSoC4/PWM.c **** *  None
 931:.\Generated_Source\PSoC4/PWM.c **** *
 932:.\Generated_Source\PSoC4/PWM.c **** * Return:
 933:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
 934:.\Generated_Source\PSoC4/PWM.c **** *
 935:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 936:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
 937:.\Generated_Source\PSoC4/PWM.c **** {
 1356              		.loc 1 937 0
 1357              		.cfi_startproc
 1358 0000 80B5     		push	{r7, lr}
 1359              	.LCFI71:
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 00AF     		add	r7, sp, #0
 1364              	.LCFI72:
 1365              		.cfi_def_cfa_register 7
 938:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1366              		.loc 1 938 0
 1367 0004 034B     		ldr	r3, .L108
 1368 0006 1B68     		ldr	r3, [r3]
 1369 0008 1B04     		lsl	r3, r3, #16
 1370 000a 1B0C     		lsr	r3, r3, #16
 939:.\Generated_Source\PSoC4/PWM.c **** }
 1371              		.loc 1 939 0
 1372 000c 181C     		mov	r0, r3
 1373 000e BD46     		mov	sp, r7
 1374              		@ sp needed for prologue
 1375 0010 80BD     		pop	{r7, pc}
 1376              	.L109:
 1377 0012 C046     		.align	2
 1378              	.L108:
 1379 0014 0C010540 		.word	1074069772
 1380              		.cfi_endproc
 1381              	.LFE26:
 1382              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1383              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1384              		.align	2
 1385              		.global	PWM_ReadCaptureBuf
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	PWM_ReadCaptureBuf, %function
 1389              	PWM_ReadCaptureBuf:
 1390              	.LFB27:
 940:.\Generated_Source\PSoC4/PWM.c **** 
 941:.\Generated_Source\PSoC4/PWM.c **** 
 942:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 943:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 42


 944:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 945:.\Generated_Source\PSoC4/PWM.c **** *
 946:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 947:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
 948:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 949:.\Generated_Source\PSoC4/PWM.c **** *
 950:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 951:.\Generated_Source\PSoC4/PWM.c **** *  None
 952:.\Generated_Source\PSoC4/PWM.c **** *
 953:.\Generated_Source\PSoC4/PWM.c **** * Return:
 954:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
 955:.\Generated_Source\PSoC4/PWM.c **** *
 956:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 957:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
 958:.\Generated_Source\PSoC4/PWM.c **** {
 1391              		.loc 1 958 0
 1392              		.cfi_startproc
 1393 0000 80B5     		push	{r7, lr}
 1394              	.LCFI73:
 1395              		.cfi_def_cfa_offset 8
 1396              		.cfi_offset 7, -8
 1397              		.cfi_offset 14, -4
 1398 0002 00AF     		add	r7, sp, #0
 1399              	.LCFI74:
 1400              		.cfi_def_cfa_register 7
 959:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1401              		.loc 1 959 0
 1402 0004 034B     		ldr	r3, .L112
 1403 0006 1B68     		ldr	r3, [r3]
 1404 0008 1B04     		lsl	r3, r3, #16
 1405 000a 1B0C     		lsr	r3, r3, #16
 960:.\Generated_Source\PSoC4/PWM.c **** }
 1406              		.loc 1 960 0
 1407 000c 181C     		mov	r0, r3
 1408 000e BD46     		mov	sp, r7
 1409              		@ sp needed for prologue
 1410 0010 80BD     		pop	{r7, pc}
 1411              	.L113:
 1412 0012 C046     		.align	2
 1413              	.L112:
 1414 0014 10010540 		.word	1074069776
 1415              		.cfi_endproc
 1416              	.LFE27:
 1417              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1418              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1419              		.align	2
 1420              		.global	PWM_SetCaptureMode
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	PWM_SetCaptureMode, %function
 1424              	PWM_SetCaptureMode:
 1425              	.LFB28:
 961:.\Generated_Source\PSoC4/PWM.c **** 
 962:.\Generated_Source\PSoC4/PWM.c **** 
 963:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 964:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
 965:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 43


 966:.\Generated_Source\PSoC4/PWM.c **** *
 967:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 968:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
 969:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
 970:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
 971:.\Generated_Source\PSoC4/PWM.c **** *
 972:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 973:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
 974:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 975:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
 976:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
 977:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
 978:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
 979:.\Generated_Source\PSoC4/PWM.c **** *
 980:.\Generated_Source\PSoC4/PWM.c **** * Return:
 981:.\Generated_Source\PSoC4/PWM.c **** *  None
 982:.\Generated_Source\PSoC4/PWM.c **** *
 983:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 984:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
 985:.\Generated_Source\PSoC4/PWM.c **** {
 1426              		.loc 1 985 0
 1427              		.cfi_startproc
 1428 0000 80B5     		push	{r7, lr}
 1429              	.LCFI75:
 1430              		.cfi_def_cfa_offset 8
 1431              		.cfi_offset 7, -8
 1432              		.cfi_offset 14, -4
 1433 0002 84B0     		sub	sp, sp, #16
 1434              	.LCFI76:
 1435              		.cfi_def_cfa_offset 24
 1436 0004 00AF     		add	r7, sp, #0
 1437              	.LCFI77:
 1438              		.cfi_def_cfa_register 7
 1439 0006 7860     		str	r0, [r7, #4]
 986:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 987:.\Generated_Source\PSoC4/PWM.c **** 
 988:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1440              		.loc 1 988 0
 1441 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1442 000c 031C     		mov	r3, r0
 1443 000e 1A1C     		mov	r2, r3
 1444 0010 3B1C     		mov	r3, r7
 1445 0012 0F33     		add	r3, r3, #15
 1446 0014 1A70     		strb	r2, [r3]
 989:.\Generated_Source\PSoC4/PWM.c **** 
 990:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1447              		.loc 1 990 0
 1448 0016 0A4B     		ldr	r3, .L116
 1449 0018 094A     		ldr	r2, .L116
 1450 001a 1268     		ldr	r2, [r2]
 1451 001c 0321     		mov	r1, #3
 1452 001e 8A43     		bic	r2, r2, r1
 1453 0020 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1454              		.loc 1 991 0
 1455 0022 074B     		ldr	r3, .L116
 1456 0024 064A     		ldr	r2, .L116
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 44


 1457 0026 1168     		ldr	r1, [r2]
 1458 0028 7A68     		ldr	r2, [r7, #4]
 1459 002a 0A43     		orr	r2, r2, r1
 1460 002c 1A60     		str	r2, [r3]
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1461              		.loc 1 993 0
 1462 002e 3B1C     		mov	r3, r7
 1463 0030 0F33     		add	r3, r3, #15
 1464 0032 1B78     		ldrb	r3, [r3]
 1465 0034 181C     		mov	r0, r3
 1466 0036 FFF7FEFF 		bl	CyExitCriticalSection
 994:.\Generated_Source\PSoC4/PWM.c **** }
 1467              		.loc 1 994 0
 1468 003a BD46     		mov	sp, r7
 1469 003c 04B0     		add	sp, sp, #16
 1470              		@ sp needed for prologue
 1471 003e 80BD     		pop	{r7, pc}
 1472              	.L117:
 1473              		.align	2
 1474              	.L116:
 1475 0040 24010540 		.word	1074069796
 1476              		.cfi_endproc
 1477              	.LFE28:
 1478              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1479              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1480              		.align	2
 1481              		.global	PWM_SetReloadMode
 1482              		.code	16
 1483              		.thumb_func
 1484              		.type	PWM_SetReloadMode, %function
 1485              	PWM_SetReloadMode:
 1486              	.LFB29:
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** 
 997:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 998:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
 999:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1000:.\Generated_Source\PSoC4/PWM.c **** *
1001:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1002:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1003:.\Generated_Source\PSoC4/PWM.c **** *  input.
1004:.\Generated_Source\PSoC4/PWM.c **** *
1005:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1006:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1007:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1008:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1009:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1010:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1011:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1012:.\Generated_Source\PSoC4/PWM.c **** *
1013:.\Generated_Source\PSoC4/PWM.c **** * Return:
1014:.\Generated_Source\PSoC4/PWM.c **** *  None
1015:.\Generated_Source\PSoC4/PWM.c **** *
1016:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1017:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1018:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 45


 1487              		.loc 1 1018 0
 1488              		.cfi_startproc
 1489 0000 80B5     		push	{r7, lr}
 1490              	.LCFI78:
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 84B0     		sub	sp, sp, #16
 1495              	.LCFI79:
 1496              		.cfi_def_cfa_offset 24
 1497 0004 00AF     		add	r7, sp, #0
 1498              	.LCFI80:
 1499              		.cfi_def_cfa_register 7
 1500 0006 7860     		str	r0, [r7, #4]
1019:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1020:.\Generated_Source\PSoC4/PWM.c **** 
1021:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1501              		.loc 1 1021 0
 1502 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1503 000c 031C     		mov	r3, r0
 1504 000e 1A1C     		mov	r2, r3
 1505 0010 3B1C     		mov	r3, r7
 1506 0012 0F33     		add	r3, r3, #15
 1507 0014 1A70     		strb	r2, [r3]
1022:.\Generated_Source\PSoC4/PWM.c **** 
1023:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1508              		.loc 1 1023 0
 1509 0016 0B4B     		ldr	r3, .L120
 1510 0018 0A4A     		ldr	r2, .L120
 1511 001a 1268     		ldr	r2, [r2]
 1512 001c 3021     		mov	r1, #48
 1513 001e 8A43     		bic	r2, r2, r1
 1514 0020 1A60     		str	r2, [r3]
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1515              		.loc 1 1024 0
 1516 0022 084B     		ldr	r3, .L120
 1517 0024 074A     		ldr	r2, .L120
 1518 0026 1168     		ldr	r1, [r2]
 1519 0028 7A68     		ldr	r2, [r7, #4]
 1520 002a 1201     		lsl	r2, r2, #4
 1521 002c 0A43     		orr	r2, r2, r1
 1522 002e 1A60     		str	r2, [r3]
1025:.\Generated_Source\PSoC4/PWM.c **** 
1026:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1523              		.loc 1 1026 0
 1524 0030 3B1C     		mov	r3, r7
 1525 0032 0F33     		add	r3, r3, #15
 1526 0034 1B78     		ldrb	r3, [r3]
 1527 0036 181C     		mov	r0, r3
 1528 0038 FFF7FEFF 		bl	CyExitCriticalSection
1027:.\Generated_Source\PSoC4/PWM.c **** }
 1529              		.loc 1 1027 0
 1530 003c BD46     		mov	sp, r7
 1531 003e 04B0     		add	sp, sp, #16
 1532              		@ sp needed for prologue
 1533 0040 80BD     		pop	{r7, pc}
 1534              	.L121:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 46


 1535 0042 C046     		.align	2
 1536              	.L120:
 1537 0044 24010540 		.word	1074069796
 1538              		.cfi_endproc
 1539              	.LFE29:
 1540              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1541              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1542              		.align	2
 1543              		.global	PWM_SetStartMode
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	PWM_SetStartMode, %function
 1547              	PWM_SetStartMode:
 1548              	.LFB30:
1028:.\Generated_Source\PSoC4/PWM.c **** 
1029:.\Generated_Source\PSoC4/PWM.c **** 
1030:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1031:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1032:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1033:.\Generated_Source\PSoC4/PWM.c **** *
1034:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1035:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1036:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1037:.\Generated_Source\PSoC4/PWM.c **** *
1038:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1039:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1040:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1041:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1042:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1043:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1044:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1045:.\Generated_Source\PSoC4/PWM.c **** *
1046:.\Generated_Source\PSoC4/PWM.c **** * Return:
1047:.\Generated_Source\PSoC4/PWM.c **** *  None
1048:.\Generated_Source\PSoC4/PWM.c **** *
1049:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1050:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1051:.\Generated_Source\PSoC4/PWM.c **** {
 1549              		.loc 1 1051 0
 1550              		.cfi_startproc
 1551 0000 80B5     		push	{r7, lr}
 1552              	.LCFI81:
 1553              		.cfi_def_cfa_offset 8
 1554              		.cfi_offset 7, -8
 1555              		.cfi_offset 14, -4
 1556 0002 84B0     		sub	sp, sp, #16
 1557              	.LCFI82:
 1558              		.cfi_def_cfa_offset 24
 1559 0004 00AF     		add	r7, sp, #0
 1560              	.LCFI83:
 1561              		.cfi_def_cfa_register 7
 1562 0006 7860     		str	r0, [r7, #4]
1052:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1053:.\Generated_Source\PSoC4/PWM.c **** 
1054:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1563              		.loc 1 1054 0
 1564 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 47


 1565 000c 031C     		mov	r3, r0
 1566 000e 1A1C     		mov	r2, r3
 1567 0010 3B1C     		mov	r3, r7
 1568 0012 0F33     		add	r3, r3, #15
 1569 0014 1A70     		strb	r2, [r3]
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1570              		.loc 1 1056 0
 1571 0016 0B4B     		ldr	r3, .L124
 1572 0018 0A4A     		ldr	r2, .L124
 1573 001a 1168     		ldr	r1, [r2]
 1574 001c 0A4A     		ldr	r2, .L124+4
 1575 001e 0A40     		and	r2, r2, r1
 1576 0020 1A60     		str	r2, [r3]
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1577              		.loc 1 1057 0
 1578 0022 084B     		ldr	r3, .L124
 1579 0024 074A     		ldr	r2, .L124
 1580 0026 1168     		ldr	r1, [r2]
 1581 0028 7A68     		ldr	r2, [r7, #4]
 1582 002a 1202     		lsl	r2, r2, #8
 1583 002c 0A43     		orr	r2, r2, r1
 1584 002e 1A60     		str	r2, [r3]
1058:.\Generated_Source\PSoC4/PWM.c **** 
1059:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1585              		.loc 1 1059 0
 1586 0030 3B1C     		mov	r3, r7
 1587 0032 0F33     		add	r3, r3, #15
 1588 0034 1B78     		ldrb	r3, [r3]
 1589 0036 181C     		mov	r0, r3
 1590 0038 FFF7FEFF 		bl	CyExitCriticalSection
1060:.\Generated_Source\PSoC4/PWM.c **** }
 1591              		.loc 1 1060 0
 1592 003c BD46     		mov	sp, r7
 1593 003e 04B0     		add	sp, sp, #16
 1594              		@ sp needed for prologue
 1595 0040 80BD     		pop	{r7, pc}
 1596              	.L125:
 1597 0042 C046     		.align	2
 1598              	.L124:
 1599 0044 24010540 		.word	1074069796
 1600 0048 FFFCFFFF 		.word	-769
 1601              		.cfi_endproc
 1602              	.LFE30:
 1603              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1604              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1605              		.align	2
 1606              		.global	PWM_SetStopMode
 1607              		.code	16
 1608              		.thumb_func
 1609              		.type	PWM_SetStopMode, %function
 1610              	PWM_SetStopMode:
 1611              	.LFB31:
1061:.\Generated_Source\PSoC4/PWM.c **** 
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1064:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 48


1065:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1066:.\Generated_Source\PSoC4/PWM.c **** *
1067:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1068:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1069:.\Generated_Source\PSoC4/PWM.c **** *
1070:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1071:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1072:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1073:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1074:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1075:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1076:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1077:.\Generated_Source\PSoC4/PWM.c **** *
1078:.\Generated_Source\PSoC4/PWM.c **** * Return:
1079:.\Generated_Source\PSoC4/PWM.c **** *  None
1080:.\Generated_Source\PSoC4/PWM.c **** *
1081:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1082:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1083:.\Generated_Source\PSoC4/PWM.c **** {
 1612              		.loc 1 1083 0
 1613              		.cfi_startproc
 1614 0000 80B5     		push	{r7, lr}
 1615              	.LCFI84:
 1616              		.cfi_def_cfa_offset 8
 1617              		.cfi_offset 7, -8
 1618              		.cfi_offset 14, -4
 1619 0002 84B0     		sub	sp, sp, #16
 1620              	.LCFI85:
 1621              		.cfi_def_cfa_offset 24
 1622 0004 00AF     		add	r7, sp, #0
 1623              	.LCFI86:
 1624              		.cfi_def_cfa_register 7
 1625 0006 7860     		str	r0, [r7, #4]
1084:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1085:.\Generated_Source\PSoC4/PWM.c **** 
1086:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1626              		.loc 1 1086 0
 1627 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1628 000c 031C     		mov	r3, r0
 1629 000e 1A1C     		mov	r2, r3
 1630 0010 3B1C     		mov	r3, r7
 1631 0012 0F33     		add	r3, r3, #15
 1632 0014 1A70     		strb	r2, [r3]
1087:.\Generated_Source\PSoC4/PWM.c **** 
1088:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1633              		.loc 1 1088 0
 1634 0016 0B4B     		ldr	r3, .L128
 1635 0018 0A4A     		ldr	r2, .L128
 1636 001a 1268     		ldr	r2, [r2]
 1637 001c C021     		mov	r1, #192
 1638 001e 8A43     		bic	r2, r2, r1
 1639 0020 1A60     		str	r2, [r3]
1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1640              		.loc 1 1089 0
 1641 0022 084B     		ldr	r3, .L128
 1642 0024 074A     		ldr	r2, .L128
 1643 0026 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 49


 1644 0028 7A68     		ldr	r2, [r7, #4]
 1645 002a 9201     		lsl	r2, r2, #6
 1646 002c 0A43     		orr	r2, r2, r1
 1647 002e 1A60     		str	r2, [r3]
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1648              		.loc 1 1091 0
 1649 0030 3B1C     		mov	r3, r7
 1650 0032 0F33     		add	r3, r3, #15
 1651 0034 1B78     		ldrb	r3, [r3]
 1652 0036 181C     		mov	r0, r3
 1653 0038 FFF7FEFF 		bl	CyExitCriticalSection
1092:.\Generated_Source\PSoC4/PWM.c **** }
 1654              		.loc 1 1092 0
 1655 003c BD46     		mov	sp, r7
 1656 003e 04B0     		add	sp, sp, #16
 1657              		@ sp needed for prologue
 1658 0040 80BD     		pop	{r7, pc}
 1659              	.L129:
 1660 0042 C046     		.align	2
 1661              	.L128:
 1662 0044 24010540 		.word	1074069796
 1663              		.cfi_endproc
 1664              	.LFE31:
 1665              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1666              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1667              		.align	2
 1668              		.global	PWM_SetCountMode
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	PWM_SetCountMode, %function
 1672              	PWM_SetCountMode:
 1673              	.LFB32:
1093:.\Generated_Source\PSoC4/PWM.c **** 
1094:.\Generated_Source\PSoC4/PWM.c **** 
1095:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1096:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1097:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1100:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1101:.\Generated_Source\PSoC4/PWM.c **** *  input.
1102:.\Generated_Source\PSoC4/PWM.c **** *
1103:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1104:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1105:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1106:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1107:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1108:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1109:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1110:.\Generated_Source\PSoC4/PWM.c **** *
1111:.\Generated_Source\PSoC4/PWM.c **** * Return:
1112:.\Generated_Source\PSoC4/PWM.c **** *  None
1113:.\Generated_Source\PSoC4/PWM.c **** *
1114:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1116:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 50


 1674              		.loc 1 1116 0
 1675              		.cfi_startproc
 1676 0000 80B5     		push	{r7, lr}
 1677              	.LCFI87:
 1678              		.cfi_def_cfa_offset 8
 1679              		.cfi_offset 7, -8
 1680              		.cfi_offset 14, -4
 1681 0002 84B0     		sub	sp, sp, #16
 1682              	.LCFI88:
 1683              		.cfi_def_cfa_offset 24
 1684 0004 00AF     		add	r7, sp, #0
 1685              	.LCFI89:
 1686              		.cfi_def_cfa_register 7
 1687 0006 7860     		str	r0, [r7, #4]
1117:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1118:.\Generated_Source\PSoC4/PWM.c **** 
1119:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1688              		.loc 1 1119 0
 1689 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1690 000c 031C     		mov	r3, r0
 1691 000e 1A1C     		mov	r2, r3
 1692 0010 3B1C     		mov	r3, r7
 1693 0012 0F33     		add	r3, r3, #15
 1694 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/PWM.c **** 
1121:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1695              		.loc 1 1121 0
 1696 0016 0B4B     		ldr	r3, .L132
 1697 0018 0A4A     		ldr	r2, .L132
 1698 001a 1268     		ldr	r2, [r2]
 1699 001c 0C21     		mov	r1, #12
 1700 001e 8A43     		bic	r2, r2, r1
 1701 0020 1A60     		str	r2, [r3]
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1702              		.loc 1 1122 0
 1703 0022 084B     		ldr	r3, .L132
 1704 0024 074A     		ldr	r2, .L132
 1705 0026 1168     		ldr	r1, [r2]
 1706 0028 7A68     		ldr	r2, [r7, #4]
 1707 002a 9200     		lsl	r2, r2, #2
 1708 002c 0A43     		orr	r2, r2, r1
 1709 002e 1A60     		str	r2, [r3]
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1710              		.loc 1 1124 0
 1711 0030 3B1C     		mov	r3, r7
 1712 0032 0F33     		add	r3, r3, #15
 1713 0034 1B78     		ldrb	r3, [r3]
 1714 0036 181C     		mov	r0, r3
 1715 0038 FFF7FEFF 		bl	CyExitCriticalSection
1125:.\Generated_Source\PSoC4/PWM.c **** }
 1716              		.loc 1 1125 0
 1717 003c BD46     		mov	sp, r7
 1718 003e 04B0     		add	sp, sp, #16
 1719              		@ sp needed for prologue
 1720 0040 80BD     		pop	{r7, pc}
 1721              	.L133:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 51


 1722 0042 C046     		.align	2
 1723              	.L132:
 1724 0044 24010540 		.word	1074069796
 1725              		.cfi_endproc
 1726              	.LFE32:
 1727              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1728              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1729              		.align	2
 1730              		.global	PWM_TriggerCommand
 1731              		.code	16
 1732              		.thumb_func
 1733              		.type	PWM_TriggerCommand, %function
 1734              	PWM_TriggerCommand:
 1735              	.LFB33:
1126:.\Generated_Source\PSoC4/PWM.c **** 
1127:.\Generated_Source\PSoC4/PWM.c **** 
1128:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1129:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1130:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1131:.\Generated_Source\PSoC4/PWM.c **** *
1132:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1133:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1134:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1135:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1136:.\Generated_Source\PSoC4/PWM.c **** *
1137:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1138:.\Generated_Source\PSoC4/PWM.c **** *  mask: Combination of mask bits for each instance of the TCPWM that the
1139:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1140:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1141:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1142:.\Generated_Source\PSoC4/PWM.c **** *        define.
1143:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1144:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1145:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1146:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1147:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1150:.\Generated_Source\PSoC4/PWM.c **** *
1151:.\Generated_Source\PSoC4/PWM.c **** * Return:
1152:.\Generated_Source\PSoC4/PWM.c **** *  None
1153:.\Generated_Source\PSoC4/PWM.c **** *
1154:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1156:.\Generated_Source\PSoC4/PWM.c **** {
 1736              		.loc 1 1156 0
 1737              		.cfi_startproc
 1738 0000 80B5     		push	{r7, lr}
 1739              	.LCFI90:
 1740              		.cfi_def_cfa_offset 8
 1741              		.cfi_offset 7, -8
 1742              		.cfi_offset 14, -4
 1743 0002 84B0     		sub	sp, sp, #16
 1744              	.LCFI91:
 1745              		.cfi_def_cfa_offset 24
 1746 0004 00AF     		add	r7, sp, #0
 1747              	.LCFI92:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 52


 1748              		.cfi_def_cfa_register 7
 1749 0006 7860     		str	r0, [r7, #4]
 1750 0008 3960     		str	r1, [r7]
1157:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1158:.\Generated_Source\PSoC4/PWM.c **** 
1159:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1751              		.loc 1 1159 0
 1752 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1753 000e 031C     		mov	r3, r0
 1754 0010 1A1C     		mov	r2, r3
 1755 0012 3B1C     		mov	r3, r7
 1756 0014 0F33     		add	r3, r3, #15
 1757 0016 1A70     		strb	r2, [r3]
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1758              		.loc 1 1161 0
 1759 0018 074B     		ldr	r3, .L136
 1760 001a 3A68     		ldr	r2, [r7]
 1761 001c 7968     		ldr	r1, [r7, #4]
 1762 001e 081C     		mov	r0, r1
 1763 0020 9040     		lsl	r0, r0, r2
 1764 0022 021C     		mov	r2, r0
 1765 0024 1A60     		str	r2, [r3]
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1766              		.loc 1 1163 0
 1767 0026 3B1C     		mov	r3, r7
 1768 0028 0F33     		add	r3, r3, #15
 1769 002a 1B78     		ldrb	r3, [r3]
 1770 002c 181C     		mov	r0, r3
 1771 002e FFF7FEFF 		bl	CyExitCriticalSection
1164:.\Generated_Source\PSoC4/PWM.c **** }
 1772              		.loc 1 1164 0
 1773 0032 BD46     		mov	sp, r7
 1774 0034 04B0     		add	sp, sp, #16
 1775              		@ sp needed for prologue
 1776 0036 80BD     		pop	{r7, pc}
 1777              	.L137:
 1778              		.align	2
 1779              	.L136:
 1780 0038 08000540 		.word	1074069512
 1781              		.cfi_endproc
 1782              	.LFE33:
 1783              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1784              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1785              		.align	2
 1786              		.global	PWM_ReadStatus
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	PWM_ReadStatus, %function
 1790              	PWM_ReadStatus:
 1791              	.LFB34:
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c **** 
1167:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1168:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1169:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 53


1170:.\Generated_Source\PSoC4/PWM.c **** *
1171:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1172:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1175:.\Generated_Source\PSoC4/PWM.c **** *  None
1176:.\Generated_Source\PSoC4/PWM.c **** *
1177:.\Generated_Source\PSoC4/PWM.c **** * Return:
1178:.\Generated_Source\PSoC4/PWM.c **** *  Status
1179:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1180:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1182:.\Generated_Source\PSoC4/PWM.c **** *
1183:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1184:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1185:.\Generated_Source\PSoC4/PWM.c **** {
 1792              		.loc 1 1185 0
 1793              		.cfi_startproc
 1794 0000 80B5     		push	{r7, lr}
 1795              	.LCFI93:
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 00AF     		add	r7, sp, #0
 1800              	.LCFI94:
 1801              		.cfi_def_cfa_register 7
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1802              		.loc 1 1186 0
 1803 0004 054B     		ldr	r3, .L140
 1804 0006 1B68     		ldr	r3, [r3]
 1805 0008 9A0F     		lsr	r2, r3, #30
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1806              		.loc 1 1187 0
 1807 000a 044B     		ldr	r3, .L140
 1808 000c 1968     		ldr	r1, [r3]
 1809 000e 0123     		mov	r3, #1
 1810 0010 0B40     		and	r3, r3, r1
 1811              		.loc 1 1186 0
 1812 0012 1343     		orr	r3, r3, r2
1188:.\Generated_Source\PSoC4/PWM.c **** }
 1813              		.loc 1 1188 0
 1814 0014 181C     		mov	r0, r3
 1815 0016 BD46     		mov	sp, r7
 1816              		@ sp needed for prologue
 1817 0018 80BD     		pop	{r7, pc}
 1818              	.L141:
 1819 001a C046     		.align	2
 1820              	.L140:
 1821 001c 04010540 		.word	1074069764
 1822              		.cfi_endproc
 1823              	.LFE34:
 1824              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1825              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1826              		.align	2
 1827              		.global	PWM_SetInterruptMode
 1828              		.code	16
 1829              		.thumb_func
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 54


 1830              		.type	PWM_SetInterruptMode, %function
 1831              	PWM_SetInterruptMode:
 1832              	.LFB35:
1189:.\Generated_Source\PSoC4/PWM.c **** 
1190:.\Generated_Source\PSoC4/PWM.c **** 
1191:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1193:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1194:.\Generated_Source\PSoC4/PWM.c **** *
1195:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1196:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1197:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1198:.\Generated_Source\PSoC4/PWM.c **** *
1199:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1200:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1201:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1210:.\Generated_Source\PSoC4/PWM.c **** {
 1833              		.loc 1 1210 0
 1834              		.cfi_startproc
 1835 0000 80B5     		push	{r7, lr}
 1836              	.LCFI95:
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
 1840 0002 82B0     		sub	sp, sp, #8
 1841              	.LCFI96:
 1842              		.cfi_def_cfa_offset 16
 1843 0004 00AF     		add	r7, sp, #0
 1844              	.LCFI97:
 1845              		.cfi_def_cfa_register 7
 1846 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1847              		.loc 1 1211 0
 1848 0008 024B     		ldr	r3, .L144
 1849 000a 7A68     		ldr	r2, [r7, #4]
 1850 000c 1A60     		str	r2, [r3]
1212:.\Generated_Source\PSoC4/PWM.c **** }
 1851              		.loc 1 1212 0
 1852 000e BD46     		mov	sp, r7
 1853 0010 02B0     		add	sp, sp, #8
 1854              		@ sp needed for prologue
 1855 0012 80BD     		pop	{r7, pc}
 1856              	.L145:
 1857              		.align	2
 1858              	.L144:
 1859 0014 38010540 		.word	1074069816
 1860              		.cfi_endproc
 1861              	.LFE35:
 1862              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 55


 1863              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1864              		.align	2
 1865              		.global	PWM_GetInterruptSourceMasked
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	PWM_GetInterruptSourceMasked, %function
 1869              	PWM_GetInterruptSourceMasked:
 1870              	.LFB36:
1213:.\Generated_Source\PSoC4/PWM.c **** 
1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1217:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/PWM.c **** *
1219:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1220:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1221:.\Generated_Source\PSoC4/PWM.c **** *
1222:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1223:.\Generated_Source\PSoC4/PWM.c **** *   None
1224:.\Generated_Source\PSoC4/PWM.c **** *
1225:.\Generated_Source\PSoC4/PWM.c **** * Return:
1226:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1227:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1228:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1229:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1232:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1233:.\Generated_Source\PSoC4/PWM.c **** {
 1871              		.loc 1 1233 0
 1872              		.cfi_startproc
 1873 0000 80B5     		push	{r7, lr}
 1874              	.LCFI98:
 1875              		.cfi_def_cfa_offset 8
 1876              		.cfi_offset 7, -8
 1877              		.cfi_offset 14, -4
 1878 0002 00AF     		add	r7, sp, #0
 1879              	.LCFI99:
 1880              		.cfi_def_cfa_register 7
1234:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1881              		.loc 1 1234 0
 1882 0004 024B     		ldr	r3, .L148
 1883 0006 1B68     		ldr	r3, [r3]
1235:.\Generated_Source\PSoC4/PWM.c **** }
 1884              		.loc 1 1235 0
 1885 0008 181C     		mov	r0, r3
 1886 000a BD46     		mov	sp, r7
 1887              		@ sp needed for prologue
 1888 000c 80BD     		pop	{r7, pc}
 1889              	.L149:
 1890 000e C046     		.align	2
 1891              	.L148:
 1892 0010 3C010540 		.word	1074069820
 1893              		.cfi_endproc
 1894              	.LFE36:
 1895              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1896              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 56


 1897              		.align	2
 1898              		.global	PWM_GetInterruptSource
 1899              		.code	16
 1900              		.thumb_func
 1901              		.type	PWM_GetInterruptSource, %function
 1902              	PWM_GetInterruptSource:
 1903              	.LFB37:
1236:.\Generated_Source\PSoC4/PWM.c **** 
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1240:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM.c **** *
1242:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** * Return:
1249:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1250:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1251:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1252:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1253:.\Generated_Source\PSoC4/PWM.c **** *
1254:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1255:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1256:.\Generated_Source\PSoC4/PWM.c **** {
 1904              		.loc 1 1256 0
 1905              		.cfi_startproc
 1906 0000 80B5     		push	{r7, lr}
 1907              	.LCFI100:
 1908              		.cfi_def_cfa_offset 8
 1909              		.cfi_offset 7, -8
 1910              		.cfi_offset 14, -4
 1911 0002 00AF     		add	r7, sp, #0
 1912              	.LCFI101:
 1913              		.cfi_def_cfa_register 7
1257:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1914              		.loc 1 1257 0
 1915 0004 024B     		ldr	r3, .L152
 1916 0006 1B68     		ldr	r3, [r3]
1258:.\Generated_Source\PSoC4/PWM.c **** }
 1917              		.loc 1 1258 0
 1918 0008 181C     		mov	r0, r3
 1919 000a BD46     		mov	sp, r7
 1920              		@ sp needed for prologue
 1921 000c 80BD     		pop	{r7, pc}
 1922              	.L153:
 1923 000e C046     		.align	2
 1924              	.L152:
 1925 0010 30010540 		.word	1074069808
 1926              		.cfi_endproc
 1927              	.LFE37:
 1928              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1929              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1930              		.align	2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 57


 1931              		.global	PWM_ClearInterrupt
 1932              		.code	16
 1933              		.thumb_func
 1934              		.type	PWM_ClearInterrupt, %function
 1935              	PWM_ClearInterrupt:
 1936              	.LFB38:
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1270:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1271:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1272:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Return:
1275:.\Generated_Source\PSoC4/PWM.c **** *  None
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1279:.\Generated_Source\PSoC4/PWM.c **** {
 1937              		.loc 1 1279 0
 1938              		.cfi_startproc
 1939 0000 80B5     		push	{r7, lr}
 1940              	.LCFI102:
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 82B0     		sub	sp, sp, #8
 1945              	.LCFI103:
 1946              		.cfi_def_cfa_offset 16
 1947 0004 00AF     		add	r7, sp, #0
 1948              	.LCFI104:
 1949              		.cfi_def_cfa_register 7
 1950 0006 7860     		str	r0, [r7, #4]
1280:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1951              		.loc 1 1280 0
 1952 0008 024B     		ldr	r3, .L156
 1953 000a 7A68     		ldr	r2, [r7, #4]
 1954 000c 1A60     		str	r2, [r3]
1281:.\Generated_Source\PSoC4/PWM.c **** }
 1955              		.loc 1 1281 0
 1956 000e BD46     		mov	sp, r7
 1957 0010 02B0     		add	sp, sp, #8
 1958              		@ sp needed for prologue
 1959 0012 80BD     		pop	{r7, pc}
 1960              	.L157:
 1961              		.align	2
 1962              	.L156:
 1963 0014 30010540 		.word	1074069808
 1964              		.cfi_endproc
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 58


 1965              	.LFE38:
 1966              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1967              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1968              		.align	2
 1969              		.global	PWM_SetInterrupt
 1970              		.code	16
 1971              		.thumb_func
 1972              		.type	PWM_SetInterrupt, %function
 1973              	PWM_SetInterrupt:
 1974              	.LFB39:
1282:.\Generated_Source\PSoC4/PWM.c **** 
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1285:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1286:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1287:.\Generated_Source\PSoC4/PWM.c **** *
1288:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1289:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1290:.\Generated_Source\PSoC4/PWM.c **** *
1291:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1292:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1293:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1294:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1295:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Return:
1298:.\Generated_Source\PSoC4/PWM.c **** *  None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1301:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1302:.\Generated_Source\PSoC4/PWM.c **** {
 1975              		.loc 1 1302 0
 1976              		.cfi_startproc
 1977 0000 80B5     		push	{r7, lr}
 1978              	.LCFI105:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 82B0     		sub	sp, sp, #8
 1983              	.LCFI106:
 1984              		.cfi_def_cfa_offset 16
 1985 0004 00AF     		add	r7, sp, #0
 1986              	.LCFI107:
 1987              		.cfi_def_cfa_register 7
 1988 0006 7860     		str	r0, [r7, #4]
1303:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1989              		.loc 1 1303 0
 1990 0008 024B     		ldr	r3, .L160
 1991 000a 7A68     		ldr	r2, [r7, #4]
 1992 000c 1A60     		str	r2, [r3]
1304:.\Generated_Source\PSoC4/PWM.c **** }
 1993              		.loc 1 1304 0
 1994 000e BD46     		mov	sp, r7
 1995 0010 02B0     		add	sp, sp, #8
 1996              		@ sp needed for prologue
 1997 0012 80BD     		pop	{r7, pc}
 1998              	.L161:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 59


 1999              		.align	2
 2000              	.L160:
 2001 0014 34010540 		.word	1074069812
 2002              		.cfi_endproc
 2003              	.LFE39:
 2004              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2005              		.text
 2006              	.Letext0:
 2007              		.section	.debug_loc,"",%progbits
 2008              	.Ldebug_loc0:
 2009              	.LLST0:
 2010 0000 00000000 		.4byte	.LFB0
 2011 0004 02000000 		.4byte	.LCFI0
 2012 0008 0100     		.2byte	0x1
 2013 000a 5D       		.byte	0x5d
 2014 000b 02000000 		.4byte	.LCFI0
 2015 000f 04000000 		.4byte	.LCFI1
 2016 0013 0200     		.2byte	0x2
 2017 0015 7D       		.byte	0x7d
 2018 0016 08       		.sleb128 8
 2019 0017 04000000 		.4byte	.LCFI1
 2020 001b 4C000000 		.4byte	.LFE0
 2021 001f 0200     		.2byte	0x2
 2022 0021 77       		.byte	0x77
 2023 0022 08       		.sleb128 8
 2024 0023 00000000 		.4byte	0x0
 2025 0027 00000000 		.4byte	0x0
 2026              	.LLST1:
 2027 002b 00000000 		.4byte	.LFB1
 2028 002f 02000000 		.4byte	.LCFI2
 2029 0033 0100     		.2byte	0x1
 2030 0035 5D       		.byte	0x5d
 2031 0036 02000000 		.4byte	.LCFI2
 2032 003a 04000000 		.4byte	.LCFI3
 2033 003e 0200     		.2byte	0x2
 2034 0040 7D       		.byte	0x7d
 2035 0041 08       		.sleb128 8
 2036 0042 04000000 		.4byte	.LCFI3
 2037 0046 06000000 		.4byte	.LCFI4
 2038 004a 0200     		.2byte	0x2
 2039 004c 7D       		.byte	0x7d
 2040 004d 10       		.sleb128 16
 2041 004e 06000000 		.4byte	.LCFI4
 2042 0052 34000000 		.4byte	.LFE1
 2043 0056 0200     		.2byte	0x2
 2044 0058 77       		.byte	0x77
 2045 0059 10       		.sleb128 16
 2046 005a 00000000 		.4byte	0x0
 2047 005e 00000000 		.4byte	0x0
 2048              	.LLST2:
 2049 0062 00000000 		.4byte	.LFB2
 2050 0066 02000000 		.4byte	.LCFI5
 2051 006a 0100     		.2byte	0x1
 2052 006c 5D       		.byte	0x5d
 2053 006d 02000000 		.4byte	.LCFI5
 2054 0071 04000000 		.4byte	.LCFI6
 2055 0075 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 60


 2056 0077 7D       		.byte	0x7d
 2057 0078 08       		.sleb128 8
 2058 0079 04000000 		.4byte	.LCFI6
 2059 007d 24000000 		.4byte	.LFE2
 2060 0081 0200     		.2byte	0x2
 2061 0083 77       		.byte	0x77
 2062 0084 08       		.sleb128 8
 2063 0085 00000000 		.4byte	0x0
 2064 0089 00000000 		.4byte	0x0
 2065              	.LLST3:
 2066 008d 00000000 		.4byte	.LFB3
 2067 0091 02000000 		.4byte	.LCFI7
 2068 0095 0100     		.2byte	0x1
 2069 0097 5D       		.byte	0x5d
 2070 0098 02000000 		.4byte	.LCFI7
 2071 009c 04000000 		.4byte	.LCFI8
 2072 00a0 0200     		.2byte	0x2
 2073 00a2 7D       		.byte	0x7d
 2074 00a3 08       		.sleb128 8
 2075 00a4 04000000 		.4byte	.LCFI8
 2076 00a8 06000000 		.4byte	.LCFI9
 2077 00ac 0200     		.2byte	0x2
 2078 00ae 7D       		.byte	0x7d
 2079 00af 10       		.sleb128 16
 2080 00b0 06000000 		.4byte	.LCFI9
 2081 00b4 34000000 		.4byte	.LFE3
 2082 00b8 0200     		.2byte	0x2
 2083 00ba 77       		.byte	0x77
 2084 00bb 10       		.sleb128 16
 2085 00bc 00000000 		.4byte	0x0
 2086 00c0 00000000 		.4byte	0x0
 2087              	.LLST4:
 2088 00c4 00000000 		.4byte	.LFB4
 2089 00c8 02000000 		.4byte	.LCFI10
 2090 00cc 0100     		.2byte	0x1
 2091 00ce 5D       		.byte	0x5d
 2092 00cf 02000000 		.4byte	.LCFI10
 2093 00d3 04000000 		.4byte	.LCFI11
 2094 00d7 0200     		.2byte	0x2
 2095 00d9 7D       		.byte	0x7d
 2096 00da 08       		.sleb128 8
 2097 00db 04000000 		.4byte	.LCFI11
 2098 00df 06000000 		.4byte	.LCFI12
 2099 00e3 0200     		.2byte	0x2
 2100 00e5 7D       		.byte	0x7d
 2101 00e6 18       		.sleb128 24
 2102 00e7 06000000 		.4byte	.LCFI12
 2103 00eb 48000000 		.4byte	.LFE4
 2104 00ef 0200     		.2byte	0x2
 2105 00f1 77       		.byte	0x77
 2106 00f2 18       		.sleb128 24
 2107 00f3 00000000 		.4byte	0x0
 2108 00f7 00000000 		.4byte	0x0
 2109              	.LLST5:
 2110 00fb 00000000 		.4byte	.LFB5
 2111 00ff 02000000 		.4byte	.LCFI13
 2112 0103 0100     		.2byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 61


 2113 0105 5D       		.byte	0x5d
 2114 0106 02000000 		.4byte	.LCFI13
 2115 010a 04000000 		.4byte	.LCFI14
 2116 010e 0200     		.2byte	0x2
 2117 0110 7D       		.byte	0x7d
 2118 0111 08       		.sleb128 8
 2119 0112 04000000 		.4byte	.LCFI14
 2120 0116 06000000 		.4byte	.LCFI15
 2121 011a 0200     		.2byte	0x2
 2122 011c 7D       		.byte	0x7d
 2123 011d 18       		.sleb128 24
 2124 011e 06000000 		.4byte	.LCFI15
 2125 0122 48000000 		.4byte	.LFE5
 2126 0126 0200     		.2byte	0x2
 2127 0128 77       		.byte	0x77
 2128 0129 18       		.sleb128 24
 2129 012a 00000000 		.4byte	0x0
 2130 012e 00000000 		.4byte	0x0
 2131              	.LLST6:
 2132 0132 00000000 		.4byte	.LFB6
 2133 0136 02000000 		.4byte	.LCFI16
 2134 013a 0100     		.2byte	0x1
 2135 013c 5D       		.byte	0x5d
 2136 013d 02000000 		.4byte	.LCFI16
 2137 0141 04000000 		.4byte	.LCFI17
 2138 0145 0200     		.2byte	0x2
 2139 0147 7D       		.byte	0x7d
 2140 0148 08       		.sleb128 8
 2141 0149 04000000 		.4byte	.LCFI17
 2142 014d 06000000 		.4byte	.LCFI18
 2143 0151 0200     		.2byte	0x2
 2144 0153 7D       		.byte	0x7d
 2145 0154 18       		.sleb128 24
 2146 0155 06000000 		.4byte	.LCFI18
 2147 0159 48000000 		.4byte	.LFE6
 2148 015d 0200     		.2byte	0x2
 2149 015f 77       		.byte	0x77
 2150 0160 18       		.sleb128 24
 2151 0161 00000000 		.4byte	0x0
 2152 0165 00000000 		.4byte	0x0
 2153              	.LLST7:
 2154 0169 00000000 		.4byte	.LFB7
 2155 016d 02000000 		.4byte	.LCFI19
 2156 0171 0100     		.2byte	0x1
 2157 0173 5D       		.byte	0x5d
 2158 0174 02000000 		.4byte	.LCFI19
 2159 0178 04000000 		.4byte	.LCFI20
 2160 017c 0200     		.2byte	0x2
 2161 017e 7D       		.byte	0x7d
 2162 017f 08       		.sleb128 8
 2163 0180 04000000 		.4byte	.LCFI20
 2164 0184 06000000 		.4byte	.LCFI21
 2165 0188 0200     		.2byte	0x2
 2166 018a 7D       		.byte	0x7d
 2167 018b 18       		.sleb128 24
 2168 018c 06000000 		.4byte	.LCFI21
 2169 0190 50000000 		.4byte	.LFE7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 62


 2170 0194 0200     		.2byte	0x2
 2171 0196 77       		.byte	0x77
 2172 0197 18       		.sleb128 24
 2173 0198 00000000 		.4byte	0x0
 2174 019c 00000000 		.4byte	0x0
 2175              	.LLST8:
 2176 01a0 00000000 		.4byte	.LFB8
 2177 01a4 02000000 		.4byte	.LCFI22
 2178 01a8 0100     		.2byte	0x1
 2179 01aa 5D       		.byte	0x5d
 2180 01ab 02000000 		.4byte	.LCFI22
 2181 01af 04000000 		.4byte	.LCFI23
 2182 01b3 0200     		.2byte	0x2
 2183 01b5 7D       		.byte	0x7d
 2184 01b6 08       		.sleb128 8
 2185 01b7 04000000 		.4byte	.LCFI23
 2186 01bb 06000000 		.4byte	.LCFI24
 2187 01bf 0200     		.2byte	0x2
 2188 01c1 7D       		.byte	0x7d
 2189 01c2 10       		.sleb128 16
 2190 01c3 06000000 		.4byte	.LCFI24
 2191 01c7 1C000000 		.4byte	.LFE8
 2192 01cb 0200     		.2byte	0x2
 2193 01cd 77       		.byte	0x77
 2194 01ce 10       		.sleb128 16
 2195 01cf 00000000 		.4byte	0x0
 2196 01d3 00000000 		.4byte	0x0
 2197              	.LLST9:
 2198 01d7 00000000 		.4byte	.LFB9
 2199 01db 02000000 		.4byte	.LCFI25
 2200 01df 0100     		.2byte	0x1
 2201 01e1 5D       		.byte	0x5d
 2202 01e2 02000000 		.4byte	.LCFI25
 2203 01e6 04000000 		.4byte	.LCFI26
 2204 01ea 0200     		.2byte	0x2
 2205 01ec 7D       		.byte	0x7d
 2206 01ed 08       		.sleb128 8
 2207 01ee 04000000 		.4byte	.LCFI26
 2208 01f2 06000000 		.4byte	.LCFI27
 2209 01f6 0200     		.2byte	0x2
 2210 01f8 7D       		.byte	0x7d
 2211 01f9 18       		.sleb128 24
 2212 01fa 06000000 		.4byte	.LCFI27
 2213 01fe 4C000000 		.4byte	.LFE9
 2214 0202 0200     		.2byte	0x2
 2215 0204 77       		.byte	0x77
 2216 0205 18       		.sleb128 24
 2217 0206 00000000 		.4byte	0x0
 2218 020a 00000000 		.4byte	0x0
 2219              	.LLST10:
 2220 020e 00000000 		.4byte	.LFB10
 2221 0212 02000000 		.4byte	.LCFI28
 2222 0216 0100     		.2byte	0x1
 2223 0218 5D       		.byte	0x5d
 2224 0219 02000000 		.4byte	.LCFI28
 2225 021d 04000000 		.4byte	.LCFI29
 2226 0221 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 63


 2227 0223 7D       		.byte	0x7d
 2228 0224 08       		.sleb128 8
 2229 0225 04000000 		.4byte	.LCFI29
 2230 0229 06000000 		.4byte	.LCFI30
 2231 022d 0200     		.2byte	0x2
 2232 022f 7D       		.byte	0x7d
 2233 0230 18       		.sleb128 24
 2234 0231 06000000 		.4byte	.LCFI30
 2235 0235 4C000000 		.4byte	.LFE10
 2236 0239 0200     		.2byte	0x2
 2237 023b 77       		.byte	0x77
 2238 023c 18       		.sleb128 24
 2239 023d 00000000 		.4byte	0x0
 2240 0241 00000000 		.4byte	0x0
 2241              	.LLST11:
 2242 0245 00000000 		.4byte	.LFB11
 2243 0249 02000000 		.4byte	.LCFI31
 2244 024d 0100     		.2byte	0x1
 2245 024f 5D       		.byte	0x5d
 2246 0250 02000000 		.4byte	.LCFI31
 2247 0254 04000000 		.4byte	.LCFI32
 2248 0258 0200     		.2byte	0x2
 2249 025a 7D       		.byte	0x7d
 2250 025b 08       		.sleb128 8
 2251 025c 04000000 		.4byte	.LCFI32
 2252 0260 06000000 		.4byte	.LCFI33
 2253 0264 0200     		.2byte	0x2
 2254 0266 7D       		.byte	0x7d
 2255 0267 18       		.sleb128 24
 2256 0268 06000000 		.4byte	.LCFI33
 2257 026c 50000000 		.4byte	.LFE11
 2258 0270 0200     		.2byte	0x2
 2259 0272 77       		.byte	0x77
 2260 0273 18       		.sleb128 24
 2261 0274 00000000 		.4byte	0x0
 2262 0278 00000000 		.4byte	0x0
 2263              	.LLST12:
 2264 027c 00000000 		.4byte	.LFB12
 2265 0280 02000000 		.4byte	.LCFI34
 2266 0284 0100     		.2byte	0x1
 2267 0286 5D       		.byte	0x5d
 2268 0287 02000000 		.4byte	.LCFI34
 2269 028b 04000000 		.4byte	.LCFI35
 2270 028f 0200     		.2byte	0x2
 2271 0291 7D       		.byte	0x7d
 2272 0292 08       		.sleb128 8
 2273 0293 04000000 		.4byte	.LCFI35
 2274 0297 06000000 		.4byte	.LCFI36
 2275 029b 0200     		.2byte	0x2
 2276 029d 7D       		.byte	0x7d
 2277 029e 18       		.sleb128 24
 2278 029f 06000000 		.4byte	.LCFI36
 2279 02a3 48000000 		.4byte	.LFE12
 2280 02a7 0200     		.2byte	0x2
 2281 02a9 77       		.byte	0x77
 2282 02aa 18       		.sleb128 24
 2283 02ab 00000000 		.4byte	0x0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 64


 2284 02af 00000000 		.4byte	0x0
 2285              	.LLST13:
 2286 02b3 00000000 		.4byte	.LFB13
 2287 02b7 02000000 		.4byte	.LCFI37
 2288 02bb 0100     		.2byte	0x1
 2289 02bd 5D       		.byte	0x5d
 2290 02be 02000000 		.4byte	.LCFI37
 2291 02c2 04000000 		.4byte	.LCFI38
 2292 02c6 0200     		.2byte	0x2
 2293 02c8 7D       		.byte	0x7d
 2294 02c9 08       		.sleb128 8
 2295 02ca 04000000 		.4byte	.LCFI38
 2296 02ce 06000000 		.4byte	.LCFI39
 2297 02d2 0200     		.2byte	0x2
 2298 02d4 7D       		.byte	0x7d
 2299 02d5 10       		.sleb128 16
 2300 02d6 06000000 		.4byte	.LCFI39
 2301 02da 1C000000 		.4byte	.LFE13
 2302 02de 0200     		.2byte	0x2
 2303 02e0 77       		.byte	0x77
 2304 02e1 10       		.sleb128 16
 2305 02e2 00000000 		.4byte	0x0
 2306 02e6 00000000 		.4byte	0x0
 2307              	.LLST14:
 2308 02ea 00000000 		.4byte	.LFB14
 2309 02ee 02000000 		.4byte	.LCFI40
 2310 02f2 0100     		.2byte	0x1
 2311 02f4 5D       		.byte	0x5d
 2312 02f5 02000000 		.4byte	.LCFI40
 2313 02f9 04000000 		.4byte	.LCFI41
 2314 02fd 0200     		.2byte	0x2
 2315 02ff 7D       		.byte	0x7d
 2316 0300 08       		.sleb128 8
 2317 0301 04000000 		.4byte	.LCFI41
 2318 0305 18000000 		.4byte	.LFE14
 2319 0309 0200     		.2byte	0x2
 2320 030b 77       		.byte	0x77
 2321 030c 08       		.sleb128 8
 2322 030d 00000000 		.4byte	0x0
 2323 0311 00000000 		.4byte	0x0
 2324              	.LLST15:
 2325 0315 00000000 		.4byte	.LFB15
 2326 0319 02000000 		.4byte	.LCFI42
 2327 031d 0100     		.2byte	0x1
 2328 031f 5D       		.byte	0x5d
 2329 0320 02000000 		.4byte	.LCFI42
 2330 0324 04000000 		.4byte	.LCFI43
 2331 0328 0200     		.2byte	0x2
 2332 032a 7D       		.byte	0x7d
 2333 032b 08       		.sleb128 8
 2334 032c 04000000 		.4byte	.LCFI43
 2335 0330 06000000 		.4byte	.LCFI44
 2336 0334 0200     		.2byte	0x2
 2337 0336 7D       		.byte	0x7d
 2338 0337 18       		.sleb128 24
 2339 0338 06000000 		.4byte	.LCFI44
 2340 033c 48000000 		.4byte	.LFE15
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 65


 2341 0340 0200     		.2byte	0x2
 2342 0342 77       		.byte	0x77
 2343 0343 18       		.sleb128 24
 2344 0344 00000000 		.4byte	0x0
 2345 0348 00000000 		.4byte	0x0
 2346              	.LLST16:
 2347 034c 00000000 		.4byte	.LFB16
 2348 0350 02000000 		.4byte	.LCFI45
 2349 0354 0100     		.2byte	0x1
 2350 0356 5D       		.byte	0x5d
 2351 0357 02000000 		.4byte	.LCFI45
 2352 035b 04000000 		.4byte	.LCFI46
 2353 035f 0200     		.2byte	0x2
 2354 0361 7D       		.byte	0x7d
 2355 0362 08       		.sleb128 8
 2356 0363 04000000 		.4byte	.LCFI46
 2357 0367 06000000 		.4byte	.LCFI47
 2358 036b 0200     		.2byte	0x2
 2359 036d 7D       		.byte	0x7d
 2360 036e 10       		.sleb128 16
 2361 036f 06000000 		.4byte	.LCFI47
 2362 0373 1C000000 		.4byte	.LFE16
 2363 0377 0200     		.2byte	0x2
 2364 0379 77       		.byte	0x77
 2365 037a 10       		.sleb128 16
 2366 037b 00000000 		.4byte	0x0
 2367 037f 00000000 		.4byte	0x0
 2368              	.LLST17:
 2369 0383 00000000 		.4byte	.LFB17
 2370 0387 02000000 		.4byte	.LCFI48
 2371 038b 0100     		.2byte	0x1
 2372 038d 5D       		.byte	0x5d
 2373 038e 02000000 		.4byte	.LCFI48
 2374 0392 04000000 		.4byte	.LCFI49
 2375 0396 0200     		.2byte	0x2
 2376 0398 7D       		.byte	0x7d
 2377 0399 08       		.sleb128 8
 2378 039a 04000000 		.4byte	.LCFI49
 2379 039e 18000000 		.4byte	.LFE17
 2380 03a2 0200     		.2byte	0x2
 2381 03a4 77       		.byte	0x77
 2382 03a5 08       		.sleb128 8
 2383 03a6 00000000 		.4byte	0x0
 2384 03aa 00000000 		.4byte	0x0
 2385              	.LLST18:
 2386 03ae 00000000 		.4byte	.LFB18
 2387 03b2 02000000 		.4byte	.LCFI50
 2388 03b6 0100     		.2byte	0x1
 2389 03b8 5D       		.byte	0x5d
 2390 03b9 02000000 		.4byte	.LCFI50
 2391 03bd 04000000 		.4byte	.LCFI51
 2392 03c1 0200     		.2byte	0x2
 2393 03c3 7D       		.byte	0x7d
 2394 03c4 08       		.sleb128 8
 2395 03c5 04000000 		.4byte	.LCFI51
 2396 03c9 06000000 		.4byte	.LCFI52
 2397 03cd 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 66


 2398 03cf 7D       		.byte	0x7d
 2399 03d0 18       		.sleb128 24
 2400 03d1 06000000 		.4byte	.LCFI52
 2401 03d5 48000000 		.4byte	.LFE18
 2402 03d9 0200     		.2byte	0x2
 2403 03db 77       		.byte	0x77
 2404 03dc 18       		.sleb128 24
 2405 03dd 00000000 		.4byte	0x0
 2406 03e1 00000000 		.4byte	0x0
 2407              	.LLST19:
 2408 03e5 00000000 		.4byte	.LFB19
 2409 03e9 02000000 		.4byte	.LCFI53
 2410 03ed 0100     		.2byte	0x1
 2411 03ef 5D       		.byte	0x5d
 2412 03f0 02000000 		.4byte	.LCFI53
 2413 03f4 04000000 		.4byte	.LCFI54
 2414 03f8 0200     		.2byte	0x2
 2415 03fa 7D       		.byte	0x7d
 2416 03fb 08       		.sleb128 8
 2417 03fc 04000000 		.4byte	.LCFI54
 2418 0400 06000000 		.4byte	.LCFI55
 2419 0404 0200     		.2byte	0x2
 2420 0406 7D       		.byte	0x7d
 2421 0407 10       		.sleb128 16
 2422 0408 06000000 		.4byte	.LCFI55
 2423 040c 1C000000 		.4byte	.LFE19
 2424 0410 0200     		.2byte	0x2
 2425 0412 77       		.byte	0x77
 2426 0413 10       		.sleb128 16
 2427 0414 00000000 		.4byte	0x0
 2428 0418 00000000 		.4byte	0x0
 2429              	.LLST20:
 2430 041c 00000000 		.4byte	.LFB20
 2431 0420 02000000 		.4byte	.LCFI56
 2432 0424 0100     		.2byte	0x1
 2433 0426 5D       		.byte	0x5d
 2434 0427 02000000 		.4byte	.LCFI56
 2435 042b 04000000 		.4byte	.LCFI57
 2436 042f 0200     		.2byte	0x2
 2437 0431 7D       		.byte	0x7d
 2438 0432 08       		.sleb128 8
 2439 0433 04000000 		.4byte	.LCFI57
 2440 0437 18000000 		.4byte	.LFE20
 2441 043b 0200     		.2byte	0x2
 2442 043d 77       		.byte	0x77
 2443 043e 08       		.sleb128 8
 2444 043f 00000000 		.4byte	0x0
 2445 0443 00000000 		.4byte	0x0
 2446              	.LLST21:
 2447 0447 00000000 		.4byte	.LFB21
 2448 044b 02000000 		.4byte	.LCFI58
 2449 044f 0100     		.2byte	0x1
 2450 0451 5D       		.byte	0x5d
 2451 0452 02000000 		.4byte	.LCFI58
 2452 0456 04000000 		.4byte	.LCFI59
 2453 045a 0200     		.2byte	0x2
 2454 045c 7D       		.byte	0x7d
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 67


 2455 045d 08       		.sleb128 8
 2456 045e 04000000 		.4byte	.LCFI59
 2457 0462 06000000 		.4byte	.LCFI60
 2458 0466 0200     		.2byte	0x2
 2459 0468 7D       		.byte	0x7d
 2460 0469 18       		.sleb128 24
 2461 046a 06000000 		.4byte	.LCFI60
 2462 046e 4C000000 		.4byte	.LFE21
 2463 0472 0200     		.2byte	0x2
 2464 0474 77       		.byte	0x77
 2465 0475 18       		.sleb128 24
 2466 0476 00000000 		.4byte	0x0
 2467 047a 00000000 		.4byte	0x0
 2468              	.LLST22:
 2469 047e 00000000 		.4byte	.LFB22
 2470 0482 02000000 		.4byte	.LCFI61
 2471 0486 0100     		.2byte	0x1
 2472 0488 5D       		.byte	0x5d
 2473 0489 02000000 		.4byte	.LCFI61
 2474 048d 04000000 		.4byte	.LCFI62
 2475 0491 0200     		.2byte	0x2
 2476 0493 7D       		.byte	0x7d
 2477 0494 08       		.sleb128 8
 2478 0495 04000000 		.4byte	.LCFI62
 2479 0499 06000000 		.4byte	.LCFI63
 2480 049d 0200     		.2byte	0x2
 2481 049f 7D       		.byte	0x7d
 2482 04a0 10       		.sleb128 16
 2483 04a1 06000000 		.4byte	.LCFI63
 2484 04a5 1C000000 		.4byte	.LFE22
 2485 04a9 0200     		.2byte	0x2
 2486 04ab 77       		.byte	0x77
 2487 04ac 10       		.sleb128 16
 2488 04ad 00000000 		.4byte	0x0
 2489 04b1 00000000 		.4byte	0x0
 2490              	.LLST23:
 2491 04b5 00000000 		.4byte	.LFB23
 2492 04b9 02000000 		.4byte	.LCFI64
 2493 04bd 0100     		.2byte	0x1
 2494 04bf 5D       		.byte	0x5d
 2495 04c0 02000000 		.4byte	.LCFI64
 2496 04c4 04000000 		.4byte	.LCFI65
 2497 04c8 0200     		.2byte	0x2
 2498 04ca 7D       		.byte	0x7d
 2499 04cb 08       		.sleb128 8
 2500 04cc 04000000 		.4byte	.LCFI65
 2501 04d0 18000000 		.4byte	.LFE23
 2502 04d4 0200     		.2byte	0x2
 2503 04d6 77       		.byte	0x77
 2504 04d7 08       		.sleb128 8
 2505 04d8 00000000 		.4byte	0x0
 2506 04dc 00000000 		.4byte	0x0
 2507              	.LLST24:
 2508 04e0 00000000 		.4byte	.LFB24
 2509 04e4 02000000 		.4byte	.LCFI66
 2510 04e8 0100     		.2byte	0x1
 2511 04ea 5D       		.byte	0x5d
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 68


 2512 04eb 02000000 		.4byte	.LCFI66
 2513 04ef 04000000 		.4byte	.LCFI67
 2514 04f3 0200     		.2byte	0x2
 2515 04f5 7D       		.byte	0x7d
 2516 04f6 08       		.sleb128 8
 2517 04f7 04000000 		.4byte	.LCFI67
 2518 04fb 06000000 		.4byte	.LCFI68
 2519 04ff 0200     		.2byte	0x2
 2520 0501 7D       		.byte	0x7d
 2521 0502 10       		.sleb128 16
 2522 0503 06000000 		.4byte	.LCFI68
 2523 0507 1C000000 		.4byte	.LFE24
 2524 050b 0200     		.2byte	0x2
 2525 050d 77       		.byte	0x77
 2526 050e 10       		.sleb128 16
 2527 050f 00000000 		.4byte	0x0
 2528 0513 00000000 		.4byte	0x0
 2529              	.LLST25:
 2530 0517 00000000 		.4byte	.LFB25
 2531 051b 02000000 		.4byte	.LCFI69
 2532 051f 0100     		.2byte	0x1
 2533 0521 5D       		.byte	0x5d
 2534 0522 02000000 		.4byte	.LCFI69
 2535 0526 04000000 		.4byte	.LCFI70
 2536 052a 0200     		.2byte	0x2
 2537 052c 7D       		.byte	0x7d
 2538 052d 08       		.sleb128 8
 2539 052e 04000000 		.4byte	.LCFI70
 2540 0532 18000000 		.4byte	.LFE25
 2541 0536 0200     		.2byte	0x2
 2542 0538 77       		.byte	0x77
 2543 0539 08       		.sleb128 8
 2544 053a 00000000 		.4byte	0x0
 2545 053e 00000000 		.4byte	0x0
 2546              	.LLST26:
 2547 0542 00000000 		.4byte	.LFB26
 2548 0546 02000000 		.4byte	.LCFI71
 2549 054a 0100     		.2byte	0x1
 2550 054c 5D       		.byte	0x5d
 2551 054d 02000000 		.4byte	.LCFI71
 2552 0551 04000000 		.4byte	.LCFI72
 2553 0555 0200     		.2byte	0x2
 2554 0557 7D       		.byte	0x7d
 2555 0558 08       		.sleb128 8
 2556 0559 04000000 		.4byte	.LCFI72
 2557 055d 18000000 		.4byte	.LFE26
 2558 0561 0200     		.2byte	0x2
 2559 0563 77       		.byte	0x77
 2560 0564 08       		.sleb128 8
 2561 0565 00000000 		.4byte	0x0
 2562 0569 00000000 		.4byte	0x0
 2563              	.LLST27:
 2564 056d 00000000 		.4byte	.LFB27
 2565 0571 02000000 		.4byte	.LCFI73
 2566 0575 0100     		.2byte	0x1
 2567 0577 5D       		.byte	0x5d
 2568 0578 02000000 		.4byte	.LCFI73
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 69


 2569 057c 04000000 		.4byte	.LCFI74
 2570 0580 0200     		.2byte	0x2
 2571 0582 7D       		.byte	0x7d
 2572 0583 08       		.sleb128 8
 2573 0584 04000000 		.4byte	.LCFI74
 2574 0588 18000000 		.4byte	.LFE27
 2575 058c 0200     		.2byte	0x2
 2576 058e 77       		.byte	0x77
 2577 058f 08       		.sleb128 8
 2578 0590 00000000 		.4byte	0x0
 2579 0594 00000000 		.4byte	0x0
 2580              	.LLST28:
 2581 0598 00000000 		.4byte	.LFB28
 2582 059c 02000000 		.4byte	.LCFI75
 2583 05a0 0100     		.2byte	0x1
 2584 05a2 5D       		.byte	0x5d
 2585 05a3 02000000 		.4byte	.LCFI75
 2586 05a7 04000000 		.4byte	.LCFI76
 2587 05ab 0200     		.2byte	0x2
 2588 05ad 7D       		.byte	0x7d
 2589 05ae 08       		.sleb128 8
 2590 05af 04000000 		.4byte	.LCFI76
 2591 05b3 06000000 		.4byte	.LCFI77
 2592 05b7 0200     		.2byte	0x2
 2593 05b9 7D       		.byte	0x7d
 2594 05ba 18       		.sleb128 24
 2595 05bb 06000000 		.4byte	.LCFI77
 2596 05bf 44000000 		.4byte	.LFE28
 2597 05c3 0200     		.2byte	0x2
 2598 05c5 77       		.byte	0x77
 2599 05c6 18       		.sleb128 24
 2600 05c7 00000000 		.4byte	0x0
 2601 05cb 00000000 		.4byte	0x0
 2602              	.LLST29:
 2603 05cf 00000000 		.4byte	.LFB29
 2604 05d3 02000000 		.4byte	.LCFI78
 2605 05d7 0100     		.2byte	0x1
 2606 05d9 5D       		.byte	0x5d
 2607 05da 02000000 		.4byte	.LCFI78
 2608 05de 04000000 		.4byte	.LCFI79
 2609 05e2 0200     		.2byte	0x2
 2610 05e4 7D       		.byte	0x7d
 2611 05e5 08       		.sleb128 8
 2612 05e6 04000000 		.4byte	.LCFI79
 2613 05ea 06000000 		.4byte	.LCFI80
 2614 05ee 0200     		.2byte	0x2
 2615 05f0 7D       		.byte	0x7d
 2616 05f1 18       		.sleb128 24
 2617 05f2 06000000 		.4byte	.LCFI80
 2618 05f6 48000000 		.4byte	.LFE29
 2619 05fa 0200     		.2byte	0x2
 2620 05fc 77       		.byte	0x77
 2621 05fd 18       		.sleb128 24
 2622 05fe 00000000 		.4byte	0x0
 2623 0602 00000000 		.4byte	0x0
 2624              	.LLST30:
 2625 0606 00000000 		.4byte	.LFB30
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 70


 2626 060a 02000000 		.4byte	.LCFI81
 2627 060e 0100     		.2byte	0x1
 2628 0610 5D       		.byte	0x5d
 2629 0611 02000000 		.4byte	.LCFI81
 2630 0615 04000000 		.4byte	.LCFI82
 2631 0619 0200     		.2byte	0x2
 2632 061b 7D       		.byte	0x7d
 2633 061c 08       		.sleb128 8
 2634 061d 04000000 		.4byte	.LCFI82
 2635 0621 06000000 		.4byte	.LCFI83
 2636 0625 0200     		.2byte	0x2
 2637 0627 7D       		.byte	0x7d
 2638 0628 18       		.sleb128 24
 2639 0629 06000000 		.4byte	.LCFI83
 2640 062d 4C000000 		.4byte	.LFE30
 2641 0631 0200     		.2byte	0x2
 2642 0633 77       		.byte	0x77
 2643 0634 18       		.sleb128 24
 2644 0635 00000000 		.4byte	0x0
 2645 0639 00000000 		.4byte	0x0
 2646              	.LLST31:
 2647 063d 00000000 		.4byte	.LFB31
 2648 0641 02000000 		.4byte	.LCFI84
 2649 0645 0100     		.2byte	0x1
 2650 0647 5D       		.byte	0x5d
 2651 0648 02000000 		.4byte	.LCFI84
 2652 064c 04000000 		.4byte	.LCFI85
 2653 0650 0200     		.2byte	0x2
 2654 0652 7D       		.byte	0x7d
 2655 0653 08       		.sleb128 8
 2656 0654 04000000 		.4byte	.LCFI85
 2657 0658 06000000 		.4byte	.LCFI86
 2658 065c 0200     		.2byte	0x2
 2659 065e 7D       		.byte	0x7d
 2660 065f 18       		.sleb128 24
 2661 0660 06000000 		.4byte	.LCFI86
 2662 0664 48000000 		.4byte	.LFE31
 2663 0668 0200     		.2byte	0x2
 2664 066a 77       		.byte	0x77
 2665 066b 18       		.sleb128 24
 2666 066c 00000000 		.4byte	0x0
 2667 0670 00000000 		.4byte	0x0
 2668              	.LLST32:
 2669 0674 00000000 		.4byte	.LFB32
 2670 0678 02000000 		.4byte	.LCFI87
 2671 067c 0100     		.2byte	0x1
 2672 067e 5D       		.byte	0x5d
 2673 067f 02000000 		.4byte	.LCFI87
 2674 0683 04000000 		.4byte	.LCFI88
 2675 0687 0200     		.2byte	0x2
 2676 0689 7D       		.byte	0x7d
 2677 068a 08       		.sleb128 8
 2678 068b 04000000 		.4byte	.LCFI88
 2679 068f 06000000 		.4byte	.LCFI89
 2680 0693 0200     		.2byte	0x2
 2681 0695 7D       		.byte	0x7d
 2682 0696 18       		.sleb128 24
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 71


 2683 0697 06000000 		.4byte	.LCFI89
 2684 069b 48000000 		.4byte	.LFE32
 2685 069f 0200     		.2byte	0x2
 2686 06a1 77       		.byte	0x77
 2687 06a2 18       		.sleb128 24
 2688 06a3 00000000 		.4byte	0x0
 2689 06a7 00000000 		.4byte	0x0
 2690              	.LLST33:
 2691 06ab 00000000 		.4byte	.LFB33
 2692 06af 02000000 		.4byte	.LCFI90
 2693 06b3 0100     		.2byte	0x1
 2694 06b5 5D       		.byte	0x5d
 2695 06b6 02000000 		.4byte	.LCFI90
 2696 06ba 04000000 		.4byte	.LCFI91
 2697 06be 0200     		.2byte	0x2
 2698 06c0 7D       		.byte	0x7d
 2699 06c1 08       		.sleb128 8
 2700 06c2 04000000 		.4byte	.LCFI91
 2701 06c6 06000000 		.4byte	.LCFI92
 2702 06ca 0200     		.2byte	0x2
 2703 06cc 7D       		.byte	0x7d
 2704 06cd 18       		.sleb128 24
 2705 06ce 06000000 		.4byte	.LCFI92
 2706 06d2 3C000000 		.4byte	.LFE33
 2707 06d6 0200     		.2byte	0x2
 2708 06d8 77       		.byte	0x77
 2709 06d9 18       		.sleb128 24
 2710 06da 00000000 		.4byte	0x0
 2711 06de 00000000 		.4byte	0x0
 2712              	.LLST34:
 2713 06e2 00000000 		.4byte	.LFB34
 2714 06e6 02000000 		.4byte	.LCFI93
 2715 06ea 0100     		.2byte	0x1
 2716 06ec 5D       		.byte	0x5d
 2717 06ed 02000000 		.4byte	.LCFI93
 2718 06f1 04000000 		.4byte	.LCFI94
 2719 06f5 0200     		.2byte	0x2
 2720 06f7 7D       		.byte	0x7d
 2721 06f8 08       		.sleb128 8
 2722 06f9 04000000 		.4byte	.LCFI94
 2723 06fd 20000000 		.4byte	.LFE34
 2724 0701 0200     		.2byte	0x2
 2725 0703 77       		.byte	0x77
 2726 0704 08       		.sleb128 8
 2727 0705 00000000 		.4byte	0x0
 2728 0709 00000000 		.4byte	0x0
 2729              	.LLST35:
 2730 070d 00000000 		.4byte	.LFB35
 2731 0711 02000000 		.4byte	.LCFI95
 2732 0715 0100     		.2byte	0x1
 2733 0717 5D       		.byte	0x5d
 2734 0718 02000000 		.4byte	.LCFI95
 2735 071c 04000000 		.4byte	.LCFI96
 2736 0720 0200     		.2byte	0x2
 2737 0722 7D       		.byte	0x7d
 2738 0723 08       		.sleb128 8
 2739 0724 04000000 		.4byte	.LCFI96
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 72


 2740 0728 06000000 		.4byte	.LCFI97
 2741 072c 0200     		.2byte	0x2
 2742 072e 7D       		.byte	0x7d
 2743 072f 10       		.sleb128 16
 2744 0730 06000000 		.4byte	.LCFI97
 2745 0734 18000000 		.4byte	.LFE35
 2746 0738 0200     		.2byte	0x2
 2747 073a 77       		.byte	0x77
 2748 073b 10       		.sleb128 16
 2749 073c 00000000 		.4byte	0x0
 2750 0740 00000000 		.4byte	0x0
 2751              	.LLST36:
 2752 0744 00000000 		.4byte	.LFB36
 2753 0748 02000000 		.4byte	.LCFI98
 2754 074c 0100     		.2byte	0x1
 2755 074e 5D       		.byte	0x5d
 2756 074f 02000000 		.4byte	.LCFI98
 2757 0753 04000000 		.4byte	.LCFI99
 2758 0757 0200     		.2byte	0x2
 2759 0759 7D       		.byte	0x7d
 2760 075a 08       		.sleb128 8
 2761 075b 04000000 		.4byte	.LCFI99
 2762 075f 14000000 		.4byte	.LFE36
 2763 0763 0200     		.2byte	0x2
 2764 0765 77       		.byte	0x77
 2765 0766 08       		.sleb128 8
 2766 0767 00000000 		.4byte	0x0
 2767 076b 00000000 		.4byte	0x0
 2768              	.LLST37:
 2769 076f 00000000 		.4byte	.LFB37
 2770 0773 02000000 		.4byte	.LCFI100
 2771 0777 0100     		.2byte	0x1
 2772 0779 5D       		.byte	0x5d
 2773 077a 02000000 		.4byte	.LCFI100
 2774 077e 04000000 		.4byte	.LCFI101
 2775 0782 0200     		.2byte	0x2
 2776 0784 7D       		.byte	0x7d
 2777 0785 08       		.sleb128 8
 2778 0786 04000000 		.4byte	.LCFI101
 2779 078a 14000000 		.4byte	.LFE37
 2780 078e 0200     		.2byte	0x2
 2781 0790 77       		.byte	0x77
 2782 0791 08       		.sleb128 8
 2783 0792 00000000 		.4byte	0x0
 2784 0796 00000000 		.4byte	0x0
 2785              	.LLST38:
 2786 079a 00000000 		.4byte	.LFB38
 2787 079e 02000000 		.4byte	.LCFI102
 2788 07a2 0100     		.2byte	0x1
 2789 07a4 5D       		.byte	0x5d
 2790 07a5 02000000 		.4byte	.LCFI102
 2791 07a9 04000000 		.4byte	.LCFI103
 2792 07ad 0200     		.2byte	0x2
 2793 07af 7D       		.byte	0x7d
 2794 07b0 08       		.sleb128 8
 2795 07b1 04000000 		.4byte	.LCFI103
 2796 07b5 06000000 		.4byte	.LCFI104
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 73


 2797 07b9 0200     		.2byte	0x2
 2798 07bb 7D       		.byte	0x7d
 2799 07bc 10       		.sleb128 16
 2800 07bd 06000000 		.4byte	.LCFI104
 2801 07c1 18000000 		.4byte	.LFE38
 2802 07c5 0200     		.2byte	0x2
 2803 07c7 77       		.byte	0x77
 2804 07c8 10       		.sleb128 16
 2805 07c9 00000000 		.4byte	0x0
 2806 07cd 00000000 		.4byte	0x0
 2807              	.LLST39:
 2808 07d1 00000000 		.4byte	.LFB39
 2809 07d5 02000000 		.4byte	.LCFI105
 2810 07d9 0100     		.2byte	0x1
 2811 07db 5D       		.byte	0x5d
 2812 07dc 02000000 		.4byte	.LCFI105
 2813 07e0 04000000 		.4byte	.LCFI106
 2814 07e4 0200     		.2byte	0x2
 2815 07e6 7D       		.byte	0x7d
 2816 07e7 08       		.sleb128 8
 2817 07e8 04000000 		.4byte	.LCFI106
 2818 07ec 06000000 		.4byte	.LCFI107
 2819 07f0 0200     		.2byte	0x2
 2820 07f2 7D       		.byte	0x7d
 2821 07f3 10       		.sleb128 16
 2822 07f4 06000000 		.4byte	.LCFI107
 2823 07f8 18000000 		.4byte	.LFE39
 2824 07fc 0200     		.2byte	0x2
 2825 07fe 77       		.byte	0x77
 2826 07ff 10       		.sleb128 16
 2827 0800 00000000 		.4byte	0x0
 2828 0804 00000000 		.4byte	0x0
 2829              		.file 2 ".\\Generated_Source\\PSoC4\\/cytypes.h"
 2830              		.section	.debug_info
 2831 0000 7E070000 		.4byte	0x77e
 2832 0004 0200     		.2byte	0x2
 2833 0006 00000000 		.4byte	.Ldebug_abbrev0
 2834 000a 04       		.byte	0x4
 2835 000b 01       		.uleb128 0x1
 2836 000c 71000000 		.4byte	.LASF74
 2837 0010 01       		.byte	0x1
 2838 0011 FB000000 		.4byte	.LASF75
 2839 0015 42000000 		.4byte	.LASF76
 2840 0019 00000000 		.4byte	0x0
 2841 001d 00000000 		.4byte	0x0
 2842 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2843 0025 00000000 		.4byte	.Ldebug_line0
 2844 0029 02       		.uleb128 0x2
 2845 002a 01       		.byte	0x1
 2846 002b 06       		.byte	0x6
 2847 002c B3000000 		.4byte	.LASF0
 2848 0030 02       		.uleb128 0x2
 2849 0031 01       		.byte	0x1
 2850 0032 08       		.byte	0x8
 2851 0033 FE020000 		.4byte	.LASF1
 2852 0037 02       		.uleb128 0x2
 2853 0038 02       		.byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 74


 2854 0039 05       		.byte	0x5
 2855 003a 35030000 		.4byte	.LASF2
 2856 003e 02       		.uleb128 0x2
 2857 003f 02       		.byte	0x2
 2858 0040 07       		.byte	0x7
 2859 0041 17020000 		.4byte	.LASF3
 2860 0045 02       		.uleb128 0x2
 2861 0046 04       		.byte	0x4
 2862 0047 05       		.byte	0x5
 2863 0048 1A010000 		.4byte	.LASF4
 2864 004c 02       		.uleb128 0x2
 2865 004d 04       		.byte	0x4
 2866 004e 07       		.byte	0x7
 2867 004f FC010000 		.4byte	.LASF5
 2868 0053 02       		.uleb128 0x2
 2869 0054 08       		.byte	0x8
 2870 0055 05       		.byte	0x5
 2871 0056 A5000000 		.4byte	.LASF6
 2872 005a 02       		.uleb128 0x2
 2873 005b 08       		.byte	0x8
 2874 005c 07       		.byte	0x7
 2875 005d 2B000000 		.4byte	.LASF7
 2876 0061 03       		.uleb128 0x3
 2877 0062 04       		.byte	0x4
 2878 0063 05       		.byte	0x5
 2879 0064 696E7400 		.ascii	"int\000"
 2880 0068 02       		.uleb128 0x2
 2881 0069 04       		.byte	0x4
 2882 006a 07       		.byte	0x7
 2883 006b D4010000 		.4byte	.LASF8
 2884 006f 04       		.uleb128 0x4
 2885 0070 23010000 		.4byte	.LASF9
 2886 0074 02       		.byte	0x2
 2887 0075 4C       		.byte	0x4c
 2888 0076 30000000 		.4byte	0x30
 2889 007a 04       		.uleb128 0x4
 2890 007b 70010000 		.4byte	.LASF10
 2891 007f 02       		.byte	0x2
 2892 0080 4E       		.byte	0x4e
 2893 0081 4C000000 		.4byte	0x4c
 2894 0085 02       		.uleb128 0x2
 2895 0086 04       		.byte	0x4
 2896 0087 04       		.byte	0x4
 2897 0088 CC020000 		.4byte	.LASF11
 2898 008c 02       		.uleb128 0x2
 2899 008d 08       		.byte	0x8
 2900 008e 04       		.byte	0x4
 2901 008f 29010000 		.4byte	.LASF12
 2902 0093 02       		.uleb128 0x2
 2903 0094 01       		.byte	0x1
 2904 0095 08       		.byte	0x8
 2905 0096 8B030000 		.4byte	.LASF13
 2906 009a 05       		.uleb128 0x5
 2907 009b 04       		.byte	0x4
 2908 009c 07       		.byte	0x7
 2909 009d 06       		.uleb128 0x6
 2910 009e 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 75


 2911 009f 0C030000 		.4byte	.LASF14
 2912 00a3 01       		.byte	0x1
 2913 00a4 27       		.byte	0x27
 2914 00a5 01       		.byte	0x1
 2915 00a6 00000000 		.4byte	.LFB0
 2916 00aa 4C000000 		.4byte	.LFE0
 2917 00ae 00000000 		.4byte	.LLST0
 2918 00b2 07       		.uleb128 0x7
 2919 00b3 01       		.byte	0x1
 2920 00b4 06000000 		.4byte	.LASF16
 2921 00b8 01       		.byte	0x1
 2922 00b9 C2       		.byte	0xc2
 2923 00ba 01       		.byte	0x1
 2924 00bb 00000000 		.4byte	.LFB1
 2925 00bf 34000000 		.4byte	.LFE1
 2926 00c3 2B000000 		.4byte	.LLST1
 2927 00c7 DA000000 		.4byte	0xda
 2928 00cb 08       		.uleb128 0x8
 2929 00cc EC030000 		.4byte	.LASF18
 2930 00d0 01       		.byte	0x1
 2931 00d1 C4       		.byte	0xc4
 2932 00d2 6F000000 		.4byte	0x6f
 2933 00d6 02       		.byte	0x2
 2934 00d7 91       		.byte	0x91
 2935 00d8 77       		.sleb128 -9
 2936 00d9 00       		.byte	0x0
 2937 00da 06       		.uleb128 0x6
 2938 00db 01       		.byte	0x1
 2939 00dc 3B020000 		.4byte	.LASF15
 2940 00e0 01       		.byte	0x1
 2941 00e1 F1       		.byte	0xf1
 2942 00e2 01       		.byte	0x1
 2943 00e3 00000000 		.4byte	.LFB2
 2944 00e7 24000000 		.4byte	.LFE2
 2945 00eb 62000000 		.4byte	.LLST2
 2946 00ef 09       		.uleb128 0x9
 2947 00f0 01       		.byte	0x1
 2948 00f1 56010000 		.4byte	.LASF17
 2949 00f5 01       		.byte	0x1
 2950 00f6 0B01     		.2byte	0x10b
 2951 00f8 01       		.byte	0x1
 2952 00f9 00000000 		.4byte	.LFB3
 2953 00fd 34000000 		.4byte	.LFE3
 2954 0101 8D000000 		.4byte	.LLST3
 2955 0105 19010000 		.4byte	0x119
 2956 0109 0A       		.uleb128 0xa
 2957 010a EC030000 		.4byte	.LASF18
 2958 010e 01       		.byte	0x1
 2959 010f 0D01     		.2byte	0x10d
 2960 0111 6F000000 		.4byte	0x6f
 2961 0115 02       		.byte	0x2
 2962 0116 91       		.byte	0x91
 2963 0117 77       		.sleb128 -9
 2964 0118 00       		.byte	0x0
 2965 0119 09       		.uleb128 0x9
 2966 011a 01       		.byte	0x1
 2967 011b 1C040000 		.4byte	.LASF19
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 76


 2968 011f 01       		.byte	0x1
 2969 0120 3001     		.2byte	0x130
 2970 0122 01       		.byte	0x1
 2971 0123 00000000 		.4byte	.LFB4
 2972 0127 48000000 		.4byte	.LFE4
 2973 012b C4000000 		.4byte	.LLST4
 2974 012f 52010000 		.4byte	0x152
 2975 0133 0B       		.uleb128 0xb
 2976 0134 90030000 		.4byte	.LASF21
 2977 0138 01       		.byte	0x1
 2978 0139 3001     		.2byte	0x130
 2979 013b 7A000000 		.4byte	0x7a
 2980 013f 02       		.byte	0x2
 2981 0140 91       		.byte	0x91
 2982 0141 6C       		.sleb128 -20
 2983 0142 0A       		.uleb128 0xa
 2984 0143 EC030000 		.4byte	.LASF18
 2985 0147 01       		.byte	0x1
 2986 0148 3201     		.2byte	0x132
 2987 014a 6F000000 		.4byte	0x6f
 2988 014e 02       		.byte	0x2
 2989 014f 91       		.byte	0x91
 2990 0150 77       		.sleb128 -9
 2991 0151 00       		.byte	0x0
 2992 0152 09       		.uleb128 0x9
 2993 0153 01       		.byte	0x1
 2994 0154 7D030000 		.4byte	.LASF20
 2995 0158 01       		.byte	0x1
 2996 0159 5101     		.2byte	0x151
 2997 015b 01       		.byte	0x1
 2998 015c 00000000 		.4byte	.LFB5
 2999 0160 48000000 		.4byte	.LFE5
 3000 0164 FB000000 		.4byte	.LLST5
 3001 0168 8B010000 		.4byte	0x18b
 3002 016c 0B       		.uleb128 0xb
 3003 016d 7D000000 		.4byte	.LASF22
 3004 0171 01       		.byte	0x1
 3005 0172 5101     		.2byte	0x151
 3006 0174 7A000000 		.4byte	0x7a
 3007 0178 02       		.byte	0x2
 3008 0179 91       		.byte	0x91
 3009 017a 6C       		.sleb128 -20
 3010 017b 0A       		.uleb128 0xa
 3011 017c EC030000 		.4byte	.LASF18
 3012 0180 01       		.byte	0x1
 3013 0181 5301     		.2byte	0x153
 3014 0183 6F000000 		.4byte	0x6f
 3015 0187 02       		.byte	0x2
 3016 0188 91       		.byte	0x91
 3017 0189 77       		.sleb128 -9
 3018 018a 00       		.byte	0x0
 3019 018b 09       		.uleb128 0x9
 3020 018c 01       		.byte	0x1
 3021 018d 2A020000 		.4byte	.LASF23
 3022 0191 01       		.byte	0x1
 3023 0192 7601     		.2byte	0x176
 3024 0194 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 77


 3025 0195 00000000 		.4byte	.LFB6
 3026 0199 48000000 		.4byte	.LFE6
 3027 019d 32010000 		.4byte	.LLST6
 3028 01a1 C4010000 		.4byte	0x1c4
 3029 01a5 0B       		.uleb128 0xb
 3030 01a6 D2020000 		.4byte	.LASF24
 3031 01aa 01       		.byte	0x1
 3032 01ab 7601     		.2byte	0x176
 3033 01ad 7A000000 		.4byte	0x7a
 3034 01b1 02       		.byte	0x2
 3035 01b2 91       		.byte	0x91
 3036 01b3 6C       		.sleb128 -20
 3037 01b4 0A       		.uleb128 0xa
 3038 01b5 EC030000 		.4byte	.LASF18
 3039 01b9 01       		.byte	0x1
 3040 01ba 7801     		.2byte	0x178
 3041 01bc 6F000000 		.4byte	0x6f
 3042 01c0 02       		.byte	0x2
 3043 01c1 91       		.byte	0x91
 3044 01c2 77       		.sleb128 -9
 3045 01c3 00       		.byte	0x0
 3046 01c4 09       		.uleb128 0x9
 3047 01c5 01       		.byte	0x1
 3048 01c6 AB020000 		.4byte	.LASF25
 3049 01ca 01       		.byte	0x1
 3050 01cb 9601     		.2byte	0x196
 3051 01cd 01       		.byte	0x1
 3052 01ce 00000000 		.4byte	.LFB7
 3053 01d2 50000000 		.4byte	.LFE7
 3054 01d6 69010000 		.4byte	.LLST7
 3055 01da FD010000 		.4byte	0x1fd
 3056 01de 0B       		.uleb128 0xb
 3057 01df 0E040000 		.4byte	.LASF26
 3058 01e3 01       		.byte	0x1
 3059 01e4 9601     		.2byte	0x196
 3060 01e6 7A000000 		.4byte	0x7a
 3061 01ea 02       		.byte	0x2
 3062 01eb 91       		.byte	0x91
 3063 01ec 6C       		.sleb128 -20
 3064 01ed 0A       		.uleb128 0xa
 3065 01ee EC030000 		.4byte	.LASF18
 3066 01f2 01       		.byte	0x1
 3067 01f3 9801     		.2byte	0x198
 3068 01f5 6F000000 		.4byte	0x6f
 3069 01f9 02       		.byte	0x2
 3070 01fa 91       		.byte	0x91
 3071 01fb 77       		.sleb128 -9
 3072 01fc 00       		.byte	0x0
 3073 01fd 09       		.uleb128 0x9
 3074 01fe 01       		.byte	0x1
 3075 01ff 26030000 		.4byte	.LASF27
 3076 0203 01       		.byte	0x1
 3077 0204 CC01     		.2byte	0x1cc
 3078 0206 01       		.byte	0x1
 3079 0207 00000000 		.4byte	.LFB8
 3080 020b 1C000000 		.4byte	.LFE8
 3081 020f A0010000 		.4byte	.LLST8
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 78


 3082 0213 27020000 		.4byte	0x227
 3083 0217 0B       		.uleb128 0xb
 3084 0218 0E020000 		.4byte	.LASF28
 3085 021c 01       		.byte	0x1
 3086 021d CC01     		.2byte	0x1cc
 3087 021f 7A000000 		.4byte	0x7a
 3088 0223 02       		.byte	0x2
 3089 0224 91       		.byte	0x91
 3090 0225 74       		.sleb128 -12
 3091 0226 00       		.byte	0x0
 3092 0227 09       		.uleb128 0x9
 3093 0228 01       		.byte	0x1
 3094 0229 11000000 		.4byte	.LASF29
 3095 022d 01       		.byte	0x1
 3096 022e F001     		.2byte	0x1f0
 3097 0230 01       		.byte	0x1
 3098 0231 00000000 		.4byte	.LFB9
 3099 0235 4C000000 		.4byte	.LFE9
 3100 0239 D7010000 		.4byte	.LLST9
 3101 023d 60020000 		.4byte	0x260
 3102 0241 0B       		.uleb128 0xb
 3103 0242 94020000 		.4byte	.LASF30
 3104 0246 01       		.byte	0x1
 3105 0247 F001     		.2byte	0x1f0
 3106 0249 7A000000 		.4byte	0x7a
 3107 024d 02       		.byte	0x2
 3108 024e 91       		.byte	0x91
 3109 024f 6C       		.sleb128 -20
 3110 0250 0A       		.uleb128 0xa
 3111 0251 EC030000 		.4byte	.LASF18
 3112 0255 01       		.byte	0x1
 3113 0256 F201     		.2byte	0x1f2
 3114 0258 6F000000 		.4byte	0x6f
 3115 025c 02       		.byte	0x2
 3116 025d 91       		.byte	0x91
 3117 025e 77       		.sleb128 -9
 3118 025f 00       		.byte	0x0
 3119 0260 09       		.uleb128 0x9
 3120 0261 01       		.byte	0x1
 3121 0262 28040000 		.4byte	.LASF31
 3122 0266 01       		.byte	0x1
 3123 0267 1202     		.2byte	0x212
 3124 0269 01       		.byte	0x1
 3125 026a 00000000 		.4byte	.LFB10
 3126 026e 4C000000 		.4byte	.LFE10
 3127 0272 0E020000 		.4byte	.LLST10
 3128 0276 99020000 		.4byte	0x299
 3129 027a 0B       		.uleb128 0xb
 3130 027b 15030000 		.4byte	.LASF32
 3131 027f 01       		.byte	0x1
 3132 0280 1202     		.2byte	0x212
 3133 0282 7A000000 		.4byte	0x7a
 3134 0286 02       		.byte	0x2
 3135 0287 91       		.byte	0x91
 3136 0288 6C       		.sleb128 -20
 3137 0289 0A       		.uleb128 0xa
 3138 028a EC030000 		.4byte	.LASF18
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 79


 3139 028e 01       		.byte	0x1
 3140 028f 1402     		.2byte	0x214
 3141 0291 6F000000 		.4byte	0x6f
 3142 0295 02       		.byte	0x2
 3143 0296 91       		.byte	0x91
 3144 0297 77       		.sleb128 -9
 3145 0298 00       		.byte	0x0
 3146 0299 09       		.uleb128 0x9
 3147 029a 01       		.byte	0x1
 3148 029b E1010000 		.4byte	.LASF33
 3149 029f 01       		.byte	0x1
 3150 02a0 3302     		.2byte	0x233
 3151 02a2 01       		.byte	0x1
 3152 02a3 00000000 		.4byte	.LFB11
 3153 02a7 50000000 		.4byte	.LFE11
 3154 02ab 45020000 		.4byte	.LLST11
 3155 02af D2020000 		.4byte	0x2d2
 3156 02b3 0B       		.uleb128 0xb
 3157 02b4 BB010000 		.4byte	.LASF34
 3158 02b8 01       		.byte	0x1
 3159 02b9 3302     		.2byte	0x233
 3160 02bb 7A000000 		.4byte	0x7a
 3161 02bf 02       		.byte	0x2
 3162 02c0 91       		.byte	0x91
 3163 02c1 6C       		.sleb128 -20
 3164 02c2 0A       		.uleb128 0xa
 3165 02c3 EC030000 		.4byte	.LASF18
 3166 02c7 01       		.byte	0x1
 3167 02c8 3502     		.2byte	0x235
 3168 02ca 6F000000 		.4byte	0x6f
 3169 02ce 02       		.byte	0x2
 3170 02cf 91       		.byte	0x91
 3171 02d0 77       		.sleb128 -9
 3172 02d1 00       		.byte	0x0
 3173 02d2 09       		.uleb128 0x9
 3174 02d3 01       		.byte	0x1
 3175 02d4 5F010000 		.4byte	.LASF35
 3176 02d8 01       		.byte	0x1
 3177 02d9 5402     		.2byte	0x254
 3178 02db 01       		.byte	0x1
 3179 02dc 00000000 		.4byte	.LFB12
 3180 02e0 48000000 		.4byte	.LFE12
 3181 02e4 7C020000 		.4byte	.LLST12
 3182 02e8 0B030000 		.4byte	0x30b
 3183 02ec 0B       		.uleb128 0xb
 3184 02ed 94010000 		.4byte	.LASF36
 3185 02f1 01       		.byte	0x1
 3186 02f2 5402     		.2byte	0x254
 3187 02f4 7A000000 		.4byte	0x7a
 3188 02f8 02       		.byte	0x2
 3189 02f9 91       		.byte	0x91
 3190 02fa 6C       		.sleb128 -20
 3191 02fb 0A       		.uleb128 0xa
 3192 02fc EC030000 		.4byte	.LASF18
 3193 0300 01       		.byte	0x1
 3194 0301 5602     		.2byte	0x256
 3195 0303 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 80


 3196 0307 02       		.byte	0x2
 3197 0308 91       		.byte	0x91
 3198 0309 77       		.sleb128 -9
 3199 030a 00       		.byte	0x0
 3200 030b 09       		.uleb128 0x9
 3201 030c 01       		.byte	0x1
 3202 030d 84000000 		.4byte	.LASF37
 3203 0311 01       		.byte	0x1
 3204 0312 7202     		.2byte	0x272
 3205 0314 01       		.byte	0x1
 3206 0315 00000000 		.4byte	.LFB13
 3207 0319 1C000000 		.4byte	.LFE13
 3208 031d B3020000 		.4byte	.LLST13
 3209 0321 35030000 		.4byte	0x335
 3210 0325 0B       		.uleb128 0xb
 3211 0326 00000000 		.4byte	.LASF38
 3212 032a 01       		.byte	0x1
 3213 032b 7202     		.2byte	0x272
 3214 032d 7A000000 		.4byte	0x7a
 3215 0331 02       		.byte	0x2
 3216 0332 91       		.byte	0x91
 3217 0333 74       		.sleb128 -12
 3218 0334 00       		.byte	0x0
 3219 0335 0C       		.uleb128 0xc
 3220 0336 01       		.byte	0x1
 3221 0337 95000000 		.4byte	.LASF43
 3222 033b 01       		.byte	0x1
 3223 033c 8602     		.2byte	0x286
 3224 033e 01       		.byte	0x1
 3225 033f 7A000000 		.4byte	0x7a
 3226 0343 00000000 		.4byte	.LFB14
 3227 0347 18000000 		.4byte	.LFE14
 3228 034b EA020000 		.4byte	.LLST14
 3229 034f 09       		.uleb128 0x9
 3230 0350 01       		.byte	0x1
 3231 0351 5F040000 		.4byte	.LASF39
 3232 0355 01       		.byte	0x1
 3233 0356 A302     		.2byte	0x2a3
 3234 0358 01       		.byte	0x1
 3235 0359 00000000 		.4byte	.LFB15
 3236 035d 48000000 		.4byte	.LFE15
 3237 0361 15030000 		.4byte	.LLST15
 3238 0365 88030000 		.4byte	0x388
 3239 0369 0B       		.uleb128 0xb
 3240 036a B8030000 		.4byte	.LASF40
 3241 036e 01       		.byte	0x1
 3242 036f A302     		.2byte	0x2a3
 3243 0371 7A000000 		.4byte	0x7a
 3244 0375 02       		.byte	0x2
 3245 0376 91       		.byte	0x91
 3246 0377 6C       		.sleb128 -20
 3247 0378 0A       		.uleb128 0xa
 3248 0379 EC030000 		.4byte	.LASF18
 3249 037d 01       		.byte	0x1
 3250 037e A502     		.2byte	0x2a5
 3251 0380 6F000000 		.4byte	0x6f
 3252 0384 02       		.byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 81


 3253 0385 91       		.byte	0x91
 3254 0386 77       		.sleb128 -9
 3255 0387 00       		.byte	0x0
 3256 0388 09       		.uleb128 0x9
 3257 0389 01       		.byte	0x1
 3258 038a 69020000 		.4byte	.LASF41
 3259 038e 01       		.byte	0x1
 3260 038f C002     		.2byte	0x2c0
 3261 0391 01       		.byte	0x1
 3262 0392 00000000 		.4byte	.LFB16
 3263 0396 1C000000 		.4byte	.LFE16
 3264 039a 4C030000 		.4byte	.LLST16
 3265 039e B2030000 		.4byte	0x3b2
 3266 03a2 0B       		.uleb128 0xb
 3267 03a3 24000000 		.4byte	.LASF42
 3268 03a7 01       		.byte	0x1
 3269 03a8 C002     		.2byte	0x2c0
 3270 03aa 7A000000 		.4byte	0x7a
 3271 03ae 02       		.byte	0x2
 3272 03af 91       		.byte	0x91
 3273 03b0 74       		.sleb128 -12
 3274 03b1 00       		.byte	0x0
 3275 03b2 0C       		.uleb128 0xc
 3276 03b3 01       		.byte	0x1
 3277 03b4 85020000 		.4byte	.LASF44
 3278 03b8 01       		.byte	0x1
 3279 03b9 D402     		.2byte	0x2d4
 3280 03bb 01       		.byte	0x1
 3281 03bc 7A000000 		.4byte	0x7a
 3282 03c0 00000000 		.4byte	.LFB17
 3283 03c4 18000000 		.4byte	.LFE17
 3284 03c8 83030000 		.4byte	.LLST17
 3285 03cc 09       		.uleb128 0x9
 3286 03cd 01       		.byte	0x1
 3287 03ce 43010000 		.4byte	.LASF45
 3288 03d2 01       		.byte	0x1
 3289 03d3 EE02     		.2byte	0x2ee
 3290 03d5 01       		.byte	0x1
 3291 03d6 00000000 		.4byte	.LFB18
 3292 03da 48000000 		.4byte	.LFE18
 3293 03de AE030000 		.4byte	.LLST18
 3294 03e2 05040000 		.4byte	0x405
 3295 03e6 0B       		.uleb128 0xb
 3296 03e7 3D040000 		.4byte	.LASF46
 3297 03eb 01       		.byte	0x1
 3298 03ec EE02     		.2byte	0x2ee
 3299 03ee 7A000000 		.4byte	0x7a
 3300 03f2 02       		.byte	0x2
 3301 03f3 91       		.byte	0x91
 3302 03f4 6C       		.sleb128 -20
 3303 03f5 0A       		.uleb128 0xa
 3304 03f6 EC030000 		.4byte	.LASF18
 3305 03fa 01       		.byte	0x1
 3306 03fb F002     		.2byte	0x2f0
 3307 03fd 6F000000 		.4byte	0x6f
 3308 0401 02       		.byte	0x2
 3309 0402 91       		.byte	0x91
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 82


 3310 0403 77       		.sleb128 -9
 3311 0404 00       		.byte	0x0
 3312 0405 09       		.uleb128 0x9
 3313 0406 01       		.byte	0x1
 3314 0407 6A030000 		.4byte	.LASF47
 3315 040b 01       		.byte	0x1
 3316 040c 0903     		.2byte	0x309
 3317 040e 01       		.byte	0x1
 3318 040f 00000000 		.4byte	.LFB19
 3319 0413 1C000000 		.4byte	.LFE19
 3320 0417 E5030000 		.4byte	.LLST19
 3321 041b 2F040000 		.4byte	0x42f
 3322 041f 0B       		.uleb128 0xb
 3323 0420 CF030000 		.4byte	.LASF48
 3324 0424 01       		.byte	0x1
 3325 0425 0903     		.2byte	0x309
 3326 0427 7A000000 		.4byte	0x7a
 3327 042b 02       		.byte	0x2
 3328 042c 91       		.byte	0x91
 3329 042d 74       		.sleb128 -12
 3330 042e 00       		.byte	0x0
 3331 042f 0C       		.uleb128 0xc
 3332 0430 01       		.byte	0x1
 3333 0431 BA020000 		.4byte	.LASF49
 3334 0435 01       		.byte	0x1
 3335 0436 1D03     		.2byte	0x31d
 3336 0438 01       		.byte	0x1
 3337 0439 7A000000 		.4byte	0x7a
 3338 043d 00000000 		.4byte	.LFB20
 3339 0441 18000000 		.4byte	.LFE20
 3340 0445 1C040000 		.4byte	.LLST20
 3341 0449 09       		.uleb128 0x9
 3342 044a 01       		.byte	0x1
 3343 044b EC020000 		.4byte	.LASF50
 3344 044f 01       		.byte	0x1
 3345 0450 3703     		.2byte	0x337
 3346 0452 01       		.byte	0x1
 3347 0453 00000000 		.4byte	.LFB21
 3348 0457 4C000000 		.4byte	.LFE21
 3349 045b 47040000 		.4byte	.LLST21
 3350 045f 82040000 		.4byte	0x482
 3351 0463 0B       		.uleb128 0xb
 3352 0464 3D040000 		.4byte	.LASF46
 3353 0468 01       		.byte	0x1
 3354 0469 3703     		.2byte	0x337
 3355 046b 7A000000 		.4byte	0x7a
 3356 046f 02       		.byte	0x2
 3357 0470 91       		.byte	0x91
 3358 0471 6C       		.sleb128 -20
 3359 0472 0A       		.uleb128 0xa
 3360 0473 EC030000 		.4byte	.LASF18
 3361 0477 01       		.byte	0x1
 3362 0478 3903     		.2byte	0x339
 3363 047a 6F000000 		.4byte	0x6f
 3364 047e 02       		.byte	0x2
 3365 047f 91       		.byte	0x91
 3366 0480 77       		.sleb128 -9
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 83


 3367 0481 00       		.byte	0x0
 3368 0482 09       		.uleb128 0x9
 3369 0483 01       		.byte	0x1
 3370 0484 58020000 		.4byte	.LASF51
 3371 0488 01       		.byte	0x1
 3372 0489 5403     		.2byte	0x354
 3373 048b 01       		.byte	0x1
 3374 048c 00000000 		.4byte	.LFB22
 3375 0490 1C000000 		.4byte	.LFE22
 3376 0494 7E040000 		.4byte	.LLST22
 3377 0498 AC040000 		.4byte	0x4ac
 3378 049c 0B       		.uleb128 0xb
 3379 049d A3020000 		.4byte	.LASF52
 3380 04a1 01       		.byte	0x1
 3381 04a2 5403     		.2byte	0x354
 3382 04a4 7A000000 		.4byte	0x7a
 3383 04a8 02       		.byte	0x2
 3384 04a9 91       		.byte	0x91
 3385 04aa 74       		.sleb128 -12
 3386 04ab 00       		.byte	0x0
 3387 04ac 0C       		.uleb128 0xc
 3388 04ad 01       		.byte	0x1
 3389 04ae 72040000 		.4byte	.LASF53
 3390 04b2 01       		.byte	0x1
 3391 04b3 6903     		.2byte	0x369
 3392 04b5 01       		.byte	0x1
 3393 04b6 7A000000 		.4byte	0x7a
 3394 04ba 00000000 		.4byte	.LFB23
 3395 04be 18000000 		.4byte	.LFE23
 3396 04c2 B5040000 		.4byte	.LLST23
 3397 04c6 09       		.uleb128 0x9
 3398 04c7 01       		.byte	0x1
 3399 04c8 BF000000 		.4byte	.LASF54
 3400 04cc 01       		.byte	0x1
 3401 04cd 7E03     		.2byte	0x37e
 3402 04cf 01       		.byte	0x1
 3403 04d0 00000000 		.4byte	.LFB24
 3404 04d4 1C000000 		.4byte	.LFE24
 3405 04d8 E0040000 		.4byte	.LLST24
 3406 04dc F0040000 		.4byte	0x4f0
 3407 04e0 0B       		.uleb128 0xb
 3408 04e1 C4030000 		.4byte	.LASF55
 3409 04e5 01       		.byte	0x1
 3410 04e6 7E03     		.2byte	0x37e
 3411 04e8 7A000000 		.4byte	0x7a
 3412 04ec 02       		.byte	0x2
 3413 04ed 91       		.byte	0x91
 3414 04ee 74       		.sleb128 -12
 3415 04ef 00       		.byte	0x0
 3416 04f0 0C       		.uleb128 0xc
 3417 04f1 01       		.byte	0x1
 3418 04f2 30010000 		.4byte	.LASF56
 3419 04f6 01       		.byte	0x1
 3420 04f7 9303     		.2byte	0x393
 3421 04f9 01       		.byte	0x1
 3422 04fa 7A000000 		.4byte	0x7a
 3423 04fe 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 84


 3424 0502 18000000 		.4byte	.LFE25
 3425 0506 17050000 		.4byte	.LLST25
 3426 050a 0C       		.uleb128 0xc
 3427 050b 01       		.byte	0x1
 3428 050c DC020000 		.4byte	.LASF57
 3429 0510 01       		.byte	0x1
 3430 0511 A803     		.2byte	0x3a8
 3431 0513 01       		.byte	0x1
 3432 0514 7A000000 		.4byte	0x7a
 3433 0518 00000000 		.4byte	.LFB26
 3434 051c 18000000 		.4byte	.LFE26
 3435 0520 42050000 		.4byte	.LLST26
 3436 0524 0C       		.uleb128 0xc
 3437 0525 01       		.byte	0x1
 3438 0526 D9030000 		.4byte	.LASF58
 3439 052a 01       		.byte	0x1
 3440 052b BD03     		.2byte	0x3bd
 3441 052d 01       		.byte	0x1
 3442 052e 7A000000 		.4byte	0x7a
 3443 0532 00000000 		.4byte	.LFB27
 3444 0536 18000000 		.4byte	.LFE27
 3445 053a 6D050000 		.4byte	.LLST27
 3446 053e 09       		.uleb128 0x9
 3447 053f 01       		.byte	0x1
 3448 0540 99010000 		.4byte	.LASF59
 3449 0544 01       		.byte	0x1
 3450 0545 D803     		.2byte	0x3d8
 3451 0547 01       		.byte	0x1
 3452 0548 00000000 		.4byte	.LFB28
 3453 054c 44000000 		.4byte	.LFE28
 3454 0550 98050000 		.4byte	.LLST28
 3455 0554 77050000 		.4byte	0x577
 3456 0558 0B       		.uleb128 0xb
 3457 0559 88010000 		.4byte	.LASF60
 3458 055d 01       		.byte	0x1
 3459 055e D803     		.2byte	0x3d8
 3460 0560 7A000000 		.4byte	0x7a
 3461 0564 02       		.byte	0x2
 3462 0565 91       		.byte	0x91
 3463 0566 6C       		.sleb128 -20
 3464 0567 0A       		.uleb128 0xa
 3465 0568 EC030000 		.4byte	.LASF18
 3466 056c 01       		.byte	0x1
 3467 056d DA03     		.2byte	0x3da
 3468 056f 6F000000 		.4byte	0x6f
 3469 0573 02       		.byte	0x2
 3470 0574 91       		.byte	0x91
 3471 0575 77       		.sleb128 -9
 3472 0576 00       		.byte	0x0
 3473 0577 09       		.uleb128 0x9
 3474 0578 01       		.byte	0x1
 3475 0579 A6030000 		.4byte	.LASF61
 3476 057d 01       		.byte	0x1
 3477 057e F903     		.2byte	0x3f9
 3478 0580 01       		.byte	0x1
 3479 0581 00000000 		.4byte	.LFB29
 3480 0585 48000000 		.4byte	.LFE29
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 85


 3481 0589 CF050000 		.4byte	.LLST29
 3482 058d B0050000 		.4byte	0x5b0
 3483 0591 0B       		.uleb128 0xb
 3484 0592 88010000 		.4byte	.LASF60
 3485 0596 01       		.byte	0x1
 3486 0597 F903     		.2byte	0x3f9
 3487 0599 7A000000 		.4byte	0x7a
 3488 059d 02       		.byte	0x2
 3489 059e 91       		.byte	0x91
 3490 059f 6C       		.sleb128 -20
 3491 05a0 0A       		.uleb128 0xa
 3492 05a1 EC030000 		.4byte	.LASF18
 3493 05a5 01       		.byte	0x1
 3494 05a6 FB03     		.2byte	0x3fb
 3495 05a8 6F000000 		.4byte	0x6f
 3496 05ac 02       		.byte	0x2
 3497 05ad 91       		.byte	0x91
 3498 05ae 77       		.sleb128 -9
 3499 05af 00       		.byte	0x0
 3500 05b0 09       		.uleb128 0x9
 3501 05b1 01       		.byte	0x1
 3502 05b2 77010000 		.4byte	.LASF62
 3503 05b6 01       		.byte	0x1
 3504 05b7 1A04     		.2byte	0x41a
 3505 05b9 01       		.byte	0x1
 3506 05ba 00000000 		.4byte	.LFB30
 3507 05be 4C000000 		.4byte	.LFE30
 3508 05c2 06060000 		.4byte	.LLST30
 3509 05c6 E9050000 		.4byte	0x5e9
 3510 05ca 0B       		.uleb128 0xb
 3511 05cb 88010000 		.4byte	.LASF60
 3512 05cf 01       		.byte	0x1
 3513 05d0 1A04     		.2byte	0x41a
 3514 05d2 7A000000 		.4byte	0x7a
 3515 05d6 02       		.byte	0x2
 3516 05d7 91       		.byte	0x91
 3517 05d8 6C       		.sleb128 -20
 3518 05d9 0A       		.uleb128 0xa
 3519 05da EC030000 		.4byte	.LASF18
 3520 05de 01       		.byte	0x1
 3521 05df 1C04     		.2byte	0x41c
 3522 05e1 6F000000 		.4byte	0x6f
 3523 05e5 02       		.byte	0x2
 3524 05e6 91       		.byte	0x91
 3525 05e7 77       		.sleb128 -9
 3526 05e8 00       		.byte	0x0
 3527 05e9 09       		.uleb128 0x9
 3528 05ea 01       		.byte	0x1
 3529 05eb C4010000 		.4byte	.LASF63
 3530 05ef 01       		.byte	0x1
 3531 05f0 3A04     		.2byte	0x43a
 3532 05f2 01       		.byte	0x1
 3533 05f3 00000000 		.4byte	.LFB31
 3534 05f7 48000000 		.4byte	.LFE31
 3535 05fb 3D060000 		.4byte	.LLST31
 3536 05ff 22060000 		.4byte	0x622
 3537 0603 0B       		.uleb128 0xb
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 86


 3538 0604 88010000 		.4byte	.LASF60
 3539 0608 01       		.byte	0x1
 3540 0609 3A04     		.2byte	0x43a
 3541 060b 7A000000 		.4byte	0x7a
 3542 060f 02       		.byte	0x2
 3543 0610 91       		.byte	0x91
 3544 0611 6C       		.sleb128 -20
 3545 0612 0A       		.uleb128 0xa
 3546 0613 EC030000 		.4byte	.LASF18
 3547 0617 01       		.byte	0x1
 3548 0618 3C04     		.2byte	0x43c
 3549 061a 6F000000 		.4byte	0x6f
 3550 061e 02       		.byte	0x2
 3551 061f 91       		.byte	0x91
 3552 0620 77       		.sleb128 -9
 3553 0621 00       		.byte	0x0
 3554 0622 09       		.uleb128 0x9
 3555 0623 01       		.byte	0x1
 3556 0624 FD030000 		.4byte	.LASF64
 3557 0628 01       		.byte	0x1
 3558 0629 5B04     		.2byte	0x45b
 3559 062b 01       		.byte	0x1
 3560 062c 00000000 		.4byte	.LFB32
 3561 0630 48000000 		.4byte	.LFE32
 3562 0634 74060000 		.4byte	.LLST32
 3563 0638 5B060000 		.4byte	0x65b
 3564 063c 0B       		.uleb128 0xb
 3565 063d 88010000 		.4byte	.LASF60
 3566 0641 01       		.byte	0x1
 3567 0642 5B04     		.2byte	0x45b
 3568 0644 7A000000 		.4byte	0x7a
 3569 0648 02       		.byte	0x2
 3570 0649 91       		.byte	0x91
 3571 064a 6C       		.sleb128 -20
 3572 064b 0A       		.uleb128 0xa
 3573 064c EC030000 		.4byte	.LASF18
 3574 0650 01       		.byte	0x1
 3575 0651 5D04     		.2byte	0x45d
 3576 0653 6F000000 		.4byte	0x6f
 3577 0657 02       		.byte	0x2
 3578 0658 91       		.byte	0x91
 3579 0659 77       		.sleb128 -9
 3580 065a 00       		.byte	0x0
 3581 065b 09       		.uleb128 0x9
 3582 065c 01       		.byte	0x1
 3583 065d 45020000 		.4byte	.LASF65
 3584 0661 01       		.byte	0x1
 3585 0662 8304     		.2byte	0x483
 3586 0664 01       		.byte	0x1
 3587 0665 00000000 		.4byte	.LFB33
 3588 0669 3C000000 		.4byte	.LFE33
 3589 066d AB060000 		.4byte	.LLST33
 3590 0671 A3060000 		.4byte	0x6a3
 3591 0675 0B       		.uleb128 0xb
 3592 0676 94010000 		.4byte	.LASF36
 3593 067a 01       		.byte	0x1
 3594 067b 8304     		.2byte	0x483
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 87


 3595 067d 7A000000 		.4byte	0x7a
 3596 0681 02       		.byte	0x2
 3597 0682 91       		.byte	0x91
 3598 0683 6C       		.sleb128 -20
 3599 0684 0B       		.uleb128 0xb
 3600 0685 F4010000 		.4byte	.LASF66
 3601 0689 01       		.byte	0x1
 3602 068a 8304     		.2byte	0x483
 3603 068c 7A000000 		.4byte	0x7a
 3604 0690 02       		.byte	0x2
 3605 0691 91       		.byte	0x91
 3606 0692 68       		.sleb128 -24
 3607 0693 0A       		.uleb128 0xa
 3608 0694 EC030000 		.4byte	.LASF18
 3609 0698 01       		.byte	0x1
 3610 0699 8504     		.2byte	0x485
 3611 069b 6F000000 		.4byte	0x6f
 3612 069f 02       		.byte	0x2
 3613 06a0 91       		.byte	0x91
 3614 06a1 77       		.sleb128 -9
 3615 06a2 00       		.byte	0x0
 3616 06a3 0C       		.uleb128 0xc
 3617 06a4 01       		.byte	0x1
 3618 06a5 AC010000 		.4byte	.LASF67
 3619 06a9 01       		.byte	0x1
 3620 06aa A004     		.2byte	0x4a0
 3621 06ac 01       		.byte	0x1
 3622 06ad 7A000000 		.4byte	0x7a
 3623 06b1 00000000 		.4byte	.LFB34
 3624 06b5 20000000 		.4byte	.LFE34
 3625 06b9 E2060000 		.4byte	.LLST34
 3626 06bd 09       		.uleb128 0x9
 3627 06be 01       		.byte	0x1
 3628 06bf D3000000 		.4byte	.LASF68
 3629 06c3 01       		.byte	0x1
 3630 06c4 B904     		.2byte	0x4b9
 3631 06c6 01       		.byte	0x1
 3632 06c7 00000000 		.4byte	.LFB35
 3633 06cb 18000000 		.4byte	.LFE35
 3634 06cf 0D070000 		.4byte	.LLST35
 3635 06d3 E7060000 		.4byte	0x6e7
 3636 06d7 0B       		.uleb128 0xb
 3637 06d8 5C030000 		.4byte	.LASF69
 3638 06dc 01       		.byte	0x1
 3639 06dd B904     		.2byte	0x4b9
 3640 06df 7A000000 		.4byte	0x7a
 3641 06e3 02       		.byte	0x2
 3642 06e4 91       		.byte	0x91
 3643 06e5 74       		.sleb128 -12
 3644 06e6 00       		.byte	0x0
 3645 06e7 0C       		.uleb128 0xc
 3646 06e8 01       		.byte	0x1
 3647 06e9 3F030000 		.4byte	.LASF70
 3648 06ed 01       		.byte	0x1
 3649 06ee D004     		.2byte	0x4d0
 3650 06f0 01       		.byte	0x1
 3651 06f1 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 88


 3652 06f5 00000000 		.4byte	.LFB36
 3653 06f9 14000000 		.4byte	.LFE36
 3654 06fd 44070000 		.4byte	.LLST36
 3655 0701 0C       		.uleb128 0xc
 3656 0702 01       		.byte	0x1
 3657 0703 48040000 		.4byte	.LASF71
 3658 0707 01       		.byte	0x1
 3659 0708 E704     		.2byte	0x4e7
 3660 070a 01       		.byte	0x1
 3661 070b 7A000000 		.4byte	0x7a
 3662 070f 00000000 		.4byte	.LFB37
 3663 0713 14000000 		.4byte	.LFE37
 3664 0717 6F070000 		.4byte	.LLST37
 3665 071b 09       		.uleb128 0x9
 3666 071c 01       		.byte	0x1
 3667 071d E8000000 		.4byte	.LASF72
 3668 0721 01       		.byte	0x1
 3669 0722 FE04     		.2byte	0x4fe
 3670 0724 01       		.byte	0x1
 3671 0725 00000000 		.4byte	.LFB38
 3672 0729 18000000 		.4byte	.LFE38
 3673 072d 9A070000 		.4byte	.LLST38
 3674 0731 45070000 		.4byte	0x745
 3675 0735 0B       		.uleb128 0xb
 3676 0736 5C030000 		.4byte	.LASF69
 3677 073a 01       		.byte	0x1
 3678 073b FE04     		.2byte	0x4fe
 3679 073d 7A000000 		.4byte	0x7a
 3680 0741 02       		.byte	0x2
 3681 0742 91       		.byte	0x91
 3682 0743 74       		.sleb128 -12
 3683 0744 00       		.byte	0x0
 3684 0745 09       		.uleb128 0x9
 3685 0746 01       		.byte	0x1
 3686 0747 95030000 		.4byte	.LASF73
 3687 074b 01       		.byte	0x1
 3688 074c 1505     		.2byte	0x515
 3689 074e 01       		.byte	0x1
 3690 074f 00000000 		.4byte	.LFB39
 3691 0753 18000000 		.4byte	.LFE39
 3692 0757 D1070000 		.4byte	.LLST39
 3693 075b 6F070000 		.4byte	0x76f
 3694 075f 0B       		.uleb128 0xb
 3695 0760 5C030000 		.4byte	.LASF69
 3696 0764 01       		.byte	0x1
 3697 0765 1505     		.2byte	0x515
 3698 0767 7A000000 		.4byte	0x7a
 3699 076b 02       		.byte	0x2
 3700 076c 91       		.byte	0x91
 3701 076d 74       		.sleb128 -12
 3702 076e 00       		.byte	0x0
 3703 076f 0D       		.uleb128 0xd
 3704 0770 79020000 		.4byte	.LASF77
 3705 0774 01       		.byte	0x1
 3706 0775 16       		.byte	0x16
 3707 0776 6F000000 		.4byte	0x6f
 3708 077a 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 89


 3709 077b 05       		.byte	0x5
 3710 077c 03       		.byte	0x3
 3711 077d 00000000 		.4byte	PWM_initVar
 3712 0781 00       		.byte	0x0
 3713              		.section	.debug_abbrev
 3714 0000 01       		.uleb128 0x1
 3715 0001 11       		.uleb128 0x11
 3716 0002 01       		.byte	0x1
 3717 0003 25       		.uleb128 0x25
 3718 0004 0E       		.uleb128 0xe
 3719 0005 13       		.uleb128 0x13
 3720 0006 0B       		.uleb128 0xb
 3721 0007 03       		.uleb128 0x3
 3722 0008 0E       		.uleb128 0xe
 3723 0009 1B       		.uleb128 0x1b
 3724 000a 0E       		.uleb128 0xe
 3725 000b 11       		.uleb128 0x11
 3726 000c 01       		.uleb128 0x1
 3727 000d 52       		.uleb128 0x52
 3728 000e 01       		.uleb128 0x1
 3729 000f 55       		.uleb128 0x55
 3730 0010 06       		.uleb128 0x6
 3731 0011 10       		.uleb128 0x10
 3732 0012 06       		.uleb128 0x6
 3733 0013 00       		.byte	0x0
 3734 0014 00       		.byte	0x0
 3735 0015 02       		.uleb128 0x2
 3736 0016 24       		.uleb128 0x24
 3737 0017 00       		.byte	0x0
 3738 0018 0B       		.uleb128 0xb
 3739 0019 0B       		.uleb128 0xb
 3740 001a 3E       		.uleb128 0x3e
 3741 001b 0B       		.uleb128 0xb
 3742 001c 03       		.uleb128 0x3
 3743 001d 0E       		.uleb128 0xe
 3744 001e 00       		.byte	0x0
 3745 001f 00       		.byte	0x0
 3746 0020 03       		.uleb128 0x3
 3747 0021 24       		.uleb128 0x24
 3748 0022 00       		.byte	0x0
 3749 0023 0B       		.uleb128 0xb
 3750 0024 0B       		.uleb128 0xb
 3751 0025 3E       		.uleb128 0x3e
 3752 0026 0B       		.uleb128 0xb
 3753 0027 03       		.uleb128 0x3
 3754 0028 08       		.uleb128 0x8
 3755 0029 00       		.byte	0x0
 3756 002a 00       		.byte	0x0
 3757 002b 04       		.uleb128 0x4
 3758 002c 16       		.uleb128 0x16
 3759 002d 00       		.byte	0x0
 3760 002e 03       		.uleb128 0x3
 3761 002f 0E       		.uleb128 0xe
 3762 0030 3A       		.uleb128 0x3a
 3763 0031 0B       		.uleb128 0xb
 3764 0032 3B       		.uleb128 0x3b
 3765 0033 0B       		.uleb128 0xb
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 90


 3766 0034 49       		.uleb128 0x49
 3767 0035 13       		.uleb128 0x13
 3768 0036 00       		.byte	0x0
 3769 0037 00       		.byte	0x0
 3770 0038 05       		.uleb128 0x5
 3771 0039 24       		.uleb128 0x24
 3772 003a 00       		.byte	0x0
 3773 003b 0B       		.uleb128 0xb
 3774 003c 0B       		.uleb128 0xb
 3775 003d 3E       		.uleb128 0x3e
 3776 003e 0B       		.uleb128 0xb
 3777 003f 00       		.byte	0x0
 3778 0040 00       		.byte	0x0
 3779 0041 06       		.uleb128 0x6
 3780 0042 2E       		.uleb128 0x2e
 3781 0043 00       		.byte	0x0
 3782 0044 3F       		.uleb128 0x3f
 3783 0045 0C       		.uleb128 0xc
 3784 0046 03       		.uleb128 0x3
 3785 0047 0E       		.uleb128 0xe
 3786 0048 3A       		.uleb128 0x3a
 3787 0049 0B       		.uleb128 0xb
 3788 004a 3B       		.uleb128 0x3b
 3789 004b 0B       		.uleb128 0xb
 3790 004c 27       		.uleb128 0x27
 3791 004d 0C       		.uleb128 0xc
 3792 004e 11       		.uleb128 0x11
 3793 004f 01       		.uleb128 0x1
 3794 0050 12       		.uleb128 0x12
 3795 0051 01       		.uleb128 0x1
 3796 0052 40       		.uleb128 0x40
 3797 0053 06       		.uleb128 0x6
 3798 0054 00       		.byte	0x0
 3799 0055 00       		.byte	0x0
 3800 0056 07       		.uleb128 0x7
 3801 0057 2E       		.uleb128 0x2e
 3802 0058 01       		.byte	0x1
 3803 0059 3F       		.uleb128 0x3f
 3804 005a 0C       		.uleb128 0xc
 3805 005b 03       		.uleb128 0x3
 3806 005c 0E       		.uleb128 0xe
 3807 005d 3A       		.uleb128 0x3a
 3808 005e 0B       		.uleb128 0xb
 3809 005f 3B       		.uleb128 0x3b
 3810 0060 0B       		.uleb128 0xb
 3811 0061 27       		.uleb128 0x27
 3812 0062 0C       		.uleb128 0xc
 3813 0063 11       		.uleb128 0x11
 3814 0064 01       		.uleb128 0x1
 3815 0065 12       		.uleb128 0x12
 3816 0066 01       		.uleb128 0x1
 3817 0067 40       		.uleb128 0x40
 3818 0068 06       		.uleb128 0x6
 3819 0069 01       		.uleb128 0x1
 3820 006a 13       		.uleb128 0x13
 3821 006b 00       		.byte	0x0
 3822 006c 00       		.byte	0x0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 91


 3823 006d 08       		.uleb128 0x8
 3824 006e 34       		.uleb128 0x34
 3825 006f 00       		.byte	0x0
 3826 0070 03       		.uleb128 0x3
 3827 0071 0E       		.uleb128 0xe
 3828 0072 3A       		.uleb128 0x3a
 3829 0073 0B       		.uleb128 0xb
 3830 0074 3B       		.uleb128 0x3b
 3831 0075 0B       		.uleb128 0xb
 3832 0076 49       		.uleb128 0x49
 3833 0077 13       		.uleb128 0x13
 3834 0078 02       		.uleb128 0x2
 3835 0079 0A       		.uleb128 0xa
 3836 007a 00       		.byte	0x0
 3837 007b 00       		.byte	0x0
 3838 007c 09       		.uleb128 0x9
 3839 007d 2E       		.uleb128 0x2e
 3840 007e 01       		.byte	0x1
 3841 007f 3F       		.uleb128 0x3f
 3842 0080 0C       		.uleb128 0xc
 3843 0081 03       		.uleb128 0x3
 3844 0082 0E       		.uleb128 0xe
 3845 0083 3A       		.uleb128 0x3a
 3846 0084 0B       		.uleb128 0xb
 3847 0085 3B       		.uleb128 0x3b
 3848 0086 05       		.uleb128 0x5
 3849 0087 27       		.uleb128 0x27
 3850 0088 0C       		.uleb128 0xc
 3851 0089 11       		.uleb128 0x11
 3852 008a 01       		.uleb128 0x1
 3853 008b 12       		.uleb128 0x12
 3854 008c 01       		.uleb128 0x1
 3855 008d 40       		.uleb128 0x40
 3856 008e 06       		.uleb128 0x6
 3857 008f 01       		.uleb128 0x1
 3858 0090 13       		.uleb128 0x13
 3859 0091 00       		.byte	0x0
 3860 0092 00       		.byte	0x0
 3861 0093 0A       		.uleb128 0xa
 3862 0094 34       		.uleb128 0x34
 3863 0095 00       		.byte	0x0
 3864 0096 03       		.uleb128 0x3
 3865 0097 0E       		.uleb128 0xe
 3866 0098 3A       		.uleb128 0x3a
 3867 0099 0B       		.uleb128 0xb
 3868 009a 3B       		.uleb128 0x3b
 3869 009b 05       		.uleb128 0x5
 3870 009c 49       		.uleb128 0x49
 3871 009d 13       		.uleb128 0x13
 3872 009e 02       		.uleb128 0x2
 3873 009f 0A       		.uleb128 0xa
 3874 00a0 00       		.byte	0x0
 3875 00a1 00       		.byte	0x0
 3876 00a2 0B       		.uleb128 0xb
 3877 00a3 05       		.uleb128 0x5
 3878 00a4 00       		.byte	0x0
 3879 00a5 03       		.uleb128 0x3
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 92


 3880 00a6 0E       		.uleb128 0xe
 3881 00a7 3A       		.uleb128 0x3a
 3882 00a8 0B       		.uleb128 0xb
 3883 00a9 3B       		.uleb128 0x3b
 3884 00aa 05       		.uleb128 0x5
 3885 00ab 49       		.uleb128 0x49
 3886 00ac 13       		.uleb128 0x13
 3887 00ad 02       		.uleb128 0x2
 3888 00ae 0A       		.uleb128 0xa
 3889 00af 00       		.byte	0x0
 3890 00b0 00       		.byte	0x0
 3891 00b1 0C       		.uleb128 0xc
 3892 00b2 2E       		.uleb128 0x2e
 3893 00b3 00       		.byte	0x0
 3894 00b4 3F       		.uleb128 0x3f
 3895 00b5 0C       		.uleb128 0xc
 3896 00b6 03       		.uleb128 0x3
 3897 00b7 0E       		.uleb128 0xe
 3898 00b8 3A       		.uleb128 0x3a
 3899 00b9 0B       		.uleb128 0xb
 3900 00ba 3B       		.uleb128 0x3b
 3901 00bb 05       		.uleb128 0x5
 3902 00bc 27       		.uleb128 0x27
 3903 00bd 0C       		.uleb128 0xc
 3904 00be 49       		.uleb128 0x49
 3905 00bf 13       		.uleb128 0x13
 3906 00c0 11       		.uleb128 0x11
 3907 00c1 01       		.uleb128 0x1
 3908 00c2 12       		.uleb128 0x12
 3909 00c3 01       		.uleb128 0x1
 3910 00c4 40       		.uleb128 0x40
 3911 00c5 06       		.uleb128 0x6
 3912 00c6 00       		.byte	0x0
 3913 00c7 00       		.byte	0x0
 3914 00c8 0D       		.uleb128 0xd
 3915 00c9 34       		.uleb128 0x34
 3916 00ca 00       		.byte	0x0
 3917 00cb 03       		.uleb128 0x3
 3918 00cc 0E       		.uleb128 0xe
 3919 00cd 3A       		.uleb128 0x3a
 3920 00ce 0B       		.uleb128 0xb
 3921 00cf 3B       		.uleb128 0x3b
 3922 00d0 0B       		.uleb128 0xb
 3923 00d1 49       		.uleb128 0x49
 3924 00d2 13       		.uleb128 0x13
 3925 00d3 3F       		.uleb128 0x3f
 3926 00d4 0C       		.uleb128 0xc
 3927 00d5 02       		.uleb128 0x2
 3928 00d6 0A       		.uleb128 0xa
 3929 00d7 00       		.byte	0x0
 3930 00d8 00       		.byte	0x0
 3931 00d9 00       		.byte	0x0
 3932              		.section	.debug_pubnames,"",%progbits
 3933 0000 68030000 		.4byte	0x368
 3934 0004 0200     		.2byte	0x2
 3935 0006 00000000 		.4byte	.Ldebug_info0
 3936 000a 82070000 		.4byte	0x782
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 93


 3937 000e 9D000000 		.4byte	0x9d
 3938 0012 50574D5F 		.ascii	"PWM_Init\000"
 3938      496E6974 
 3938      00
 3939 001b B2000000 		.4byte	0xb2
 3940 001f 50574D5F 		.ascii	"PWM_Enable\000"
 3940      456E6162 
 3940      6C6500
 3941 002a DA000000 		.4byte	0xda
 3942 002e 50574D5F 		.ascii	"PWM_Start\000"
 3942      53746172 
 3942      7400
 3943 0038 EF000000 		.4byte	0xef
 3944 003c 50574D5F 		.ascii	"PWM_Stop\000"
 3944      53746F70 
 3944      00
 3945 0045 19010000 		.4byte	0x119
 3946 0049 50574D5F 		.ascii	"PWM_SetMode\000"
 3946      5365744D 
 3946      6F646500 
 3947 0055 52010000 		.4byte	0x152
 3948 0059 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3948      53657451 
 3948      444D6F64 
 3948      6500
 3949 0067 8B010000 		.4byte	0x18b
 3950 006b 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3950      53657450 
 3950      72657363 
 3950      616C6572 
 3950      00
 3951 007c C4010000 		.4byte	0x1c4
 3952 0080 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3952      5365744F 
 3952      6E655368 
 3952      6F7400
 3953 008f FD010000 		.4byte	0x1fd
 3954 0093 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3954      53657450 
 3954      574D4D6F 
 3954      646500
 3955 00a2 27020000 		.4byte	0x227
 3956 00a6 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3956      53657450 
 3956      574D5379 
 3956      6E634B69 
 3956      6C6C00
 3957 00b9 60020000 		.4byte	0x260
 3958 00bd 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3958      53657450 
 3958      574D5374 
 3958      6F704F6E 
 3958      4B696C6C 
 3959 00d2 99020000 		.4byte	0x299
 3960 00d6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3960      53657450 
 3960      574D4465 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 94


 3960      61645469 
 3960      6D6500
 3961 00e9 D2020000 		.4byte	0x2d2
 3962 00ed 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3962      53657450 
 3962      574D496E 
 3962      76657274 
 3962      00
 3963 00fe 0B030000 		.4byte	0x30b
 3964 0102 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3964      57726974 
 3964      65436F75 
 3964      6E746572 
 3964      00
 3965 0113 35030000 		.4byte	0x335
 3966 0117 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3966      52656164 
 3966      436F756E 
 3966      74657200 
 3967 0127 4F030000 		.4byte	0x34f
 3968 012b 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3968      53657443 
 3968      6F756E74 
 3968      65724D6F 
 3968      646500
 3969 013e 88030000 		.4byte	0x388
 3970 0142 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3970      57726974 
 3970      65506572 
 3970      696F6400 
 3971 0152 B2030000 		.4byte	0x3b2
 3972 0156 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3972      52656164 
 3972      50657269 
 3972      6F6400
 3973 0165 CC030000 		.4byte	0x3cc
 3974 0169 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3974      53657443 
 3974      6F6D7061 
 3974      72655377 
 3974      617000
 3975 017c 05040000 		.4byte	0x405
 3976 0180 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3976      57726974 
 3976      65506572 
 3976      696F6442 
 3976      756600
 3977 0193 2F040000 		.4byte	0x42f
 3978 0197 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3978      52656164 
 3978      50657269 
 3978      6F644275 
 3978      6600
 3979 01a9 49040000 		.4byte	0x449
 3980 01ad 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3980      53657450 
 3980      6572696F 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 95


 3980      64537761 
 3980      7000
 3981 01bf 82040000 		.4byte	0x482
 3982 01c3 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3982      57726974 
 3982      65436F6D 
 3982      70617265 
 3982      00
 3983 01d4 AC040000 		.4byte	0x4ac
 3984 01d8 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3984      52656164 
 3984      436F6D70 
 3984      61726500 
 3985 01e8 C6040000 		.4byte	0x4c6
 3986 01ec 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3986      57726974 
 3986      65436F6D 
 3986      70617265 
 3986      42756600 
 3987 0200 F0040000 		.4byte	0x4f0
 3988 0204 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3988      52656164 
 3988      436F6D70 
 3988      61726542 
 3988      756600
 3989 0217 0A050000 		.4byte	0x50a
 3990 021b 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3990      52656164 
 3990      43617074 
 3990      75726500 
 3991 022b 24050000 		.4byte	0x524
 3992 022f 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3992      52656164 
 3992      43617074 
 3992      75726542 
 3992      756600
 3993 0242 3E050000 		.4byte	0x53e
 3994 0246 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3994      53657443 
 3994      61707475 
 3994      72654D6F 
 3994      646500
 3995 0259 77050000 		.4byte	0x577
 3996 025d 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3996      53657452 
 3996      656C6F61 
 3996      644D6F64 
 3996      6500
 3997 026f B0050000 		.4byte	0x5b0
 3998 0273 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3998      53657453 
 3998      74617274 
 3998      4D6F6465 
 3998      00
 3999 0284 E9050000 		.4byte	0x5e9
 4000 0288 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4000      53657453 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 96


 4000      746F704D 
 4000      6F646500 
 4001 0298 22060000 		.4byte	0x622
 4002 029c 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4002      53657443 
 4002      6F756E74 
 4002      4D6F6465 
 4002      00
 4003 02ad 5B060000 		.4byte	0x65b
 4004 02b1 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4004      54726967 
 4004      67657243 
 4004      6F6D6D61 
 4004      6E6400
 4005 02c4 A3060000 		.4byte	0x6a3
 4006 02c8 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4006      52656164 
 4006      53746174 
 4006      757300
 4007 02d7 BD060000 		.4byte	0x6bd
 4008 02db 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4008      53657449 
 4008      6E746572 
 4008      72757074 
 4008      4D6F6465 
 4009 02f0 E7060000 		.4byte	0x6e7
 4010 02f4 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4010      47657449 
 4010      6E746572 
 4010      72757074 
 4010      536F7572 
 4011 0311 01070000 		.4byte	0x701
 4012 0315 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4012      47657449 
 4012      6E746572 
 4012      72757074 
 4012      536F7572 
 4013 032c 1B070000 		.4byte	0x71b
 4014 0330 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4014      436C6561 
 4014      72496E74 
 4014      65727275 
 4014      707400
 4015 0343 45070000 		.4byte	0x745
 4016 0347 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4016      53657449 
 4016      6E746572 
 4016      72757074 
 4016      00
 4017 0358 6F070000 		.4byte	0x76f
 4018 035c 50574D5F 		.ascii	"PWM_initVar\000"
 4018      696E6974 
 4018      56617200 
 4019 0368 00000000 		.4byte	0x0
 4020              		.section	.debug_aranges,"",%progbits
 4021 0000 54010000 		.4byte	0x154
 4022 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 97


 4023 0006 00000000 		.4byte	.Ldebug_info0
 4024 000a 04       		.byte	0x4
 4025 000b 00       		.byte	0x0
 4026 000c 0000     		.2byte	0x0
 4027 000e 0000     		.2byte	0x0
 4028 0010 00000000 		.4byte	.LFB0
 4029 0014 4C000000 		.4byte	.LFE0-.LFB0
 4030 0018 00000000 		.4byte	.LFB1
 4031 001c 34000000 		.4byte	.LFE1-.LFB1
 4032 0020 00000000 		.4byte	.LFB2
 4033 0024 24000000 		.4byte	.LFE2-.LFB2
 4034 0028 00000000 		.4byte	.LFB3
 4035 002c 34000000 		.4byte	.LFE3-.LFB3
 4036 0030 00000000 		.4byte	.LFB4
 4037 0034 48000000 		.4byte	.LFE4-.LFB4
 4038 0038 00000000 		.4byte	.LFB5
 4039 003c 48000000 		.4byte	.LFE5-.LFB5
 4040 0040 00000000 		.4byte	.LFB6
 4041 0044 48000000 		.4byte	.LFE6-.LFB6
 4042 0048 00000000 		.4byte	.LFB7
 4043 004c 50000000 		.4byte	.LFE7-.LFB7
 4044 0050 00000000 		.4byte	.LFB8
 4045 0054 1C000000 		.4byte	.LFE8-.LFB8
 4046 0058 00000000 		.4byte	.LFB9
 4047 005c 4C000000 		.4byte	.LFE9-.LFB9
 4048 0060 00000000 		.4byte	.LFB10
 4049 0064 4C000000 		.4byte	.LFE10-.LFB10
 4050 0068 00000000 		.4byte	.LFB11
 4051 006c 50000000 		.4byte	.LFE11-.LFB11
 4052 0070 00000000 		.4byte	.LFB12
 4053 0074 48000000 		.4byte	.LFE12-.LFB12
 4054 0078 00000000 		.4byte	.LFB13
 4055 007c 1C000000 		.4byte	.LFE13-.LFB13
 4056 0080 00000000 		.4byte	.LFB14
 4057 0084 18000000 		.4byte	.LFE14-.LFB14
 4058 0088 00000000 		.4byte	.LFB15
 4059 008c 48000000 		.4byte	.LFE15-.LFB15
 4060 0090 00000000 		.4byte	.LFB16
 4061 0094 1C000000 		.4byte	.LFE16-.LFB16
 4062 0098 00000000 		.4byte	.LFB17
 4063 009c 18000000 		.4byte	.LFE17-.LFB17
 4064 00a0 00000000 		.4byte	.LFB18
 4065 00a4 48000000 		.4byte	.LFE18-.LFB18
 4066 00a8 00000000 		.4byte	.LFB19
 4067 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4068 00b0 00000000 		.4byte	.LFB20
 4069 00b4 18000000 		.4byte	.LFE20-.LFB20
 4070 00b8 00000000 		.4byte	.LFB21
 4071 00bc 4C000000 		.4byte	.LFE21-.LFB21
 4072 00c0 00000000 		.4byte	.LFB22
 4073 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4074 00c8 00000000 		.4byte	.LFB23
 4075 00cc 18000000 		.4byte	.LFE23-.LFB23
 4076 00d0 00000000 		.4byte	.LFB24
 4077 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4078 00d8 00000000 		.4byte	.LFB25
 4079 00dc 18000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 98


 4080 00e0 00000000 		.4byte	.LFB26
 4081 00e4 18000000 		.4byte	.LFE26-.LFB26
 4082 00e8 00000000 		.4byte	.LFB27
 4083 00ec 18000000 		.4byte	.LFE27-.LFB27
 4084 00f0 00000000 		.4byte	.LFB28
 4085 00f4 44000000 		.4byte	.LFE28-.LFB28
 4086 00f8 00000000 		.4byte	.LFB29
 4087 00fc 48000000 		.4byte	.LFE29-.LFB29
 4088 0100 00000000 		.4byte	.LFB30
 4089 0104 4C000000 		.4byte	.LFE30-.LFB30
 4090 0108 00000000 		.4byte	.LFB31
 4091 010c 48000000 		.4byte	.LFE31-.LFB31
 4092 0110 00000000 		.4byte	.LFB32
 4093 0114 48000000 		.4byte	.LFE32-.LFB32
 4094 0118 00000000 		.4byte	.LFB33
 4095 011c 3C000000 		.4byte	.LFE33-.LFB33
 4096 0120 00000000 		.4byte	.LFB34
 4097 0124 20000000 		.4byte	.LFE34-.LFB34
 4098 0128 00000000 		.4byte	.LFB35
 4099 012c 18000000 		.4byte	.LFE35-.LFB35
 4100 0130 00000000 		.4byte	.LFB36
 4101 0134 14000000 		.4byte	.LFE36-.LFB36
 4102 0138 00000000 		.4byte	.LFB37
 4103 013c 14000000 		.4byte	.LFE37-.LFB37
 4104 0140 00000000 		.4byte	.LFB38
 4105 0144 18000000 		.4byte	.LFE38-.LFB38
 4106 0148 00000000 		.4byte	.LFB39
 4107 014c 18000000 		.4byte	.LFE39-.LFB39
 4108 0150 00000000 		.4byte	0x0
 4109 0154 00000000 		.4byte	0x0
 4110              		.section	.debug_ranges,"",%progbits
 4111              	.Ldebug_ranges0:
 4112 0000 00000000 		.4byte	.Ltext0
 4113 0004 00000000 		.4byte	.Letext0
 4114 0008 00000000 		.4byte	.LFB0
 4115 000c 4C000000 		.4byte	.LFE0
 4116 0010 00000000 		.4byte	.LFB1
 4117 0014 34000000 		.4byte	.LFE1
 4118 0018 00000000 		.4byte	.LFB2
 4119 001c 24000000 		.4byte	.LFE2
 4120 0020 00000000 		.4byte	.LFB3
 4121 0024 34000000 		.4byte	.LFE3
 4122 0028 00000000 		.4byte	.LFB4
 4123 002c 48000000 		.4byte	.LFE4
 4124 0030 00000000 		.4byte	.LFB5
 4125 0034 48000000 		.4byte	.LFE5
 4126 0038 00000000 		.4byte	.LFB6
 4127 003c 48000000 		.4byte	.LFE6
 4128 0040 00000000 		.4byte	.LFB7
 4129 0044 50000000 		.4byte	.LFE7
 4130 0048 00000000 		.4byte	.LFB8
 4131 004c 1C000000 		.4byte	.LFE8
 4132 0050 00000000 		.4byte	.LFB9
 4133 0054 4C000000 		.4byte	.LFE9
 4134 0058 00000000 		.4byte	.LFB10
 4135 005c 4C000000 		.4byte	.LFE10
 4136 0060 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 99


 4137 0064 50000000 		.4byte	.LFE11
 4138 0068 00000000 		.4byte	.LFB12
 4139 006c 48000000 		.4byte	.LFE12
 4140 0070 00000000 		.4byte	.LFB13
 4141 0074 1C000000 		.4byte	.LFE13
 4142 0078 00000000 		.4byte	.LFB14
 4143 007c 18000000 		.4byte	.LFE14
 4144 0080 00000000 		.4byte	.LFB15
 4145 0084 48000000 		.4byte	.LFE15
 4146 0088 00000000 		.4byte	.LFB16
 4147 008c 1C000000 		.4byte	.LFE16
 4148 0090 00000000 		.4byte	.LFB17
 4149 0094 18000000 		.4byte	.LFE17
 4150 0098 00000000 		.4byte	.LFB18
 4151 009c 48000000 		.4byte	.LFE18
 4152 00a0 00000000 		.4byte	.LFB19
 4153 00a4 1C000000 		.4byte	.LFE19
 4154 00a8 00000000 		.4byte	.LFB20
 4155 00ac 18000000 		.4byte	.LFE20
 4156 00b0 00000000 		.4byte	.LFB21
 4157 00b4 4C000000 		.4byte	.LFE21
 4158 00b8 00000000 		.4byte	.LFB22
 4159 00bc 1C000000 		.4byte	.LFE22
 4160 00c0 00000000 		.4byte	.LFB23
 4161 00c4 18000000 		.4byte	.LFE23
 4162 00c8 00000000 		.4byte	.LFB24
 4163 00cc 1C000000 		.4byte	.LFE24
 4164 00d0 00000000 		.4byte	.LFB25
 4165 00d4 18000000 		.4byte	.LFE25
 4166 00d8 00000000 		.4byte	.LFB26
 4167 00dc 18000000 		.4byte	.LFE26
 4168 00e0 00000000 		.4byte	.LFB27
 4169 00e4 18000000 		.4byte	.LFE27
 4170 00e8 00000000 		.4byte	.LFB28
 4171 00ec 44000000 		.4byte	.LFE28
 4172 00f0 00000000 		.4byte	.LFB29
 4173 00f4 48000000 		.4byte	.LFE29
 4174 00f8 00000000 		.4byte	.LFB30
 4175 00fc 4C000000 		.4byte	.LFE30
 4176 0100 00000000 		.4byte	.LFB31
 4177 0104 48000000 		.4byte	.LFE31
 4178 0108 00000000 		.4byte	.LFB32
 4179 010c 48000000 		.4byte	.LFE32
 4180 0110 00000000 		.4byte	.LFB33
 4181 0114 3C000000 		.4byte	.LFE33
 4182 0118 00000000 		.4byte	.LFB34
 4183 011c 20000000 		.4byte	.LFE34
 4184 0120 00000000 		.4byte	.LFB35
 4185 0124 18000000 		.4byte	.LFE35
 4186 0128 00000000 		.4byte	.LFB36
 4187 012c 14000000 		.4byte	.LFE36
 4188 0130 00000000 		.4byte	.LFB37
 4189 0134 14000000 		.4byte	.LFE37
 4190 0138 00000000 		.4byte	.LFB38
 4191 013c 18000000 		.4byte	.LFE38
 4192 0140 00000000 		.4byte	.LFB39
 4193 0144 18000000 		.4byte	.LFE39
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 100


 4194 0148 00000000 		.4byte	0x0
 4195 014c 00000000 		.4byte	0x0
 4196              		.section	.debug_str,"MS",%progbits,1
 4197              	.LASF38:
 4198 0000 636F756E 		.ascii	"count\000"
 4198      7400
 4199              	.LASF16:
 4200 0006 50574D5F 		.ascii	"PWM_Enable\000"
 4200      456E6162 
 4200      6C6500
 4201              	.LASF29:
 4202 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 4202      53657450 
 4202      574D5379 
 4202      6E634B69 
 4202      6C6C00
 4203              	.LASF42:
 4204 0024 70657269 		.ascii	"period\000"
 4204      6F6400
 4205              	.LASF7:
 4206 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4206      206C6F6E 
 4206      6720756E 
 4206      7369676E 
 4206      65642069 
 4207              	.LASF76:
 4208 0042 433A5C55 		.ascii	"C:\\Users\\gagan\\Desktop\\CapSense\\CapSense.cydsn"
 4208      73657273 
 4208      5C676167 
 4208      616E5C44 
 4208      65736B74 
 4209 0070 00       		.ascii	"\000"
 4210              	.LASF74:
 4211 0071 474E5520 		.ascii	"GNU C 4.4.1\000"
 4211      4320342E 
 4211      342E3100 
 4212              	.LASF22:
 4213 007d 71644D6F 		.ascii	"qdMode\000"
 4213      646500
 4214              	.LASF37:
 4215 0084 50574D5F 		.ascii	"PWM_WriteCounter\000"
 4215      57726974 
 4215      65436F75 
 4215      6E746572 
 4215      00
 4216              	.LASF43:
 4217 0095 50574D5F 		.ascii	"PWM_ReadCounter\000"
 4217      52656164 
 4217      436F756E 
 4217      74657200 
 4218              	.LASF6:
 4219 00a5 6C6F6E67 		.ascii	"long long int\000"
 4219      206C6F6E 
 4219      6720696E 
 4219      7400
 4220              	.LASF0:
 4221 00b3 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 101


 4221      65642063 
 4221      68617200 
 4222              	.LASF54:
 4223 00bf 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 4223      57726974 
 4223      65436F6D 
 4223      70617265 
 4223      42756600 
 4224              	.LASF68:
 4225 00d3 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4225      53657449 
 4225      6E746572 
 4225      72757074 
 4225      4D6F6465 
 4226              	.LASF72:
 4227 00e8 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4227      436C6561 
 4227      72496E74 
 4227      65727275 
 4227      707400
 4228              	.LASF75:
 4229 00fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 4229      6E657261 
 4229      7465645F 
 4229      536F7572 
 4229      63655C50 
 4230              	.LASF4:
 4231 011a 6C6F6E67 		.ascii	"long int\000"
 4231      20696E74 
 4231      00
 4232              	.LASF9:
 4233 0123 75696E74 		.ascii	"uint8\000"
 4233      3800
 4234              	.LASF12:
 4235 0129 646F7562 		.ascii	"double\000"
 4235      6C6500
 4236              	.LASF56:
 4237 0130 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 4237      52656164 
 4237      436F6D70 
 4237      61726542 
 4237      756600
 4238              	.LASF45:
 4239 0143 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 4239      53657443 
 4239      6F6D7061 
 4239      72655377 
 4239      617000
 4240              	.LASF17:
 4241 0156 50574D5F 		.ascii	"PWM_Stop\000"
 4241      53746F70 
 4241      00
 4242              	.LASF35:
 4243 015f 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 4243      53657450 
 4243      574D496E 
 4243      76657274 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 102


 4243      00
 4244              	.LASF10:
 4245 0170 75696E74 		.ascii	"uint32\000"
 4245      333200
 4246              	.LASF62:
 4247 0177 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4247      53657453 
 4247      74617274 
 4247      4D6F6465 
 4247      00
 4248              	.LASF60:
 4249 0188 74726967 		.ascii	"triggerMode\000"
 4249      6765724D 
 4249      6F646500 
 4250              	.LASF36:
 4251 0194 6D61736B 		.ascii	"mask\000"
 4251      00
 4252              	.LASF59:
 4253 0199 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 4253      53657443 
 4253      61707475 
 4253      72654D6F 
 4253      646500
 4254              	.LASF67:
 4255 01ac 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4255      52656164 
 4255      53746174 
 4255      757300
 4256              	.LASF34:
 4257 01bb 64656164 		.ascii	"deadTime\000"
 4257      54696D65 
 4257      00
 4258              	.LASF63:
 4259 01c4 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4259      53657453 
 4259      746F704D 
 4259      6F646500 
 4260              	.LASF8:
 4261 01d4 756E7369 		.ascii	"unsigned int\000"
 4261      676E6564 
 4261      20696E74 
 4261      00
 4262              	.LASF33:
 4263 01e1 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 4263      53657450 
 4263      574D4465 
 4263      61645469 
 4263      6D6500
 4264              	.LASF66:
 4265 01f4 636F6D6D 		.ascii	"command\000"
 4265      616E6400 
 4266              	.LASF5:
 4267 01fc 6C6F6E67 		.ascii	"long unsigned int\000"
 4267      20756E73 
 4267      69676E65 
 4267      6420696E 
 4267      7400
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 103


 4268              	.LASF28:
 4269 020e 6D6F6465 		.ascii	"modeMask\000"
 4269      4D61736B 
 4269      00
 4270              	.LASF3:
 4271 0217 73686F72 		.ascii	"short unsigned int\000"
 4271      7420756E 
 4271      7369676E 
 4271      65642069 
 4271      6E7400
 4272              	.LASF23:
 4273 022a 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 4273      53657450 
 4273      72657363 
 4273      616C6572 
 4273      00
 4274              	.LASF15:
 4275 023b 50574D5F 		.ascii	"PWM_Start\000"
 4275      53746172 
 4275      7400
 4276              	.LASF65:
 4277 0245 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4277      54726967 
 4277      67657243 
 4277      6F6D6D61 
 4277      6E6400
 4278              	.LASF51:
 4279 0258 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4279      57726974 
 4279      65436F6D 
 4279      70617265 
 4279      00
 4280              	.LASF41:
 4281 0269 50574D5F 		.ascii	"PWM_WritePeriod\000"
 4281      57726974 
 4281      65506572 
 4281      696F6400 
 4282              	.LASF77:
 4283 0279 50574D5F 		.ascii	"PWM_initVar\000"
 4283      696E6974 
 4283      56617200 
 4284              	.LASF44:
 4285 0285 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 4285      52656164 
 4285      50657269 
 4285      6F6400
 4286              	.LASF30:
 4287 0294 73796E63 		.ascii	"syncKillEnable\000"
 4287      4B696C6C 
 4287      456E6162 
 4287      6C6500
 4288              	.LASF52:
 4289 02a3 636F6D70 		.ascii	"compare\000"
 4289      61726500 
 4290              	.LASF25:
 4291 02ab 50574D5F 		.ascii	"PWM_SetOneShot\000"
 4291      5365744F 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 104


 4291      6E655368 
 4291      6F7400
 4292              	.LASF49:
 4293 02ba 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 4293      52656164 
 4293      50657269 
 4293      6F644275 
 4293      6600
 4294              	.LASF11:
 4295 02cc 666C6F61 		.ascii	"float\000"
 4295      7400
 4296              	.LASF24:
 4297 02d2 70726573 		.ascii	"prescaler\000"
 4297      63616C65 
 4297      7200
 4298              	.LASF57:
 4299 02dc 50574D5F 		.ascii	"PWM_ReadCapture\000"
 4299      52656164 
 4299      43617074 
 4299      75726500 
 4300              	.LASF50:
 4301 02ec 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 4301      53657450 
 4301      6572696F 
 4301      64537761 
 4301      7000
 4302              	.LASF1:
 4303 02fe 756E7369 		.ascii	"unsigned char\000"
 4303      676E6564 
 4303      20636861 
 4303      7200
 4304              	.LASF14:
 4305 030c 50574D5F 		.ascii	"PWM_Init\000"
 4305      496E6974 
 4305      00
 4306              	.LASF32:
 4307 0315 73746F70 		.ascii	"stopOnKillEnable\000"
 4307      4F6E4B69 
 4307      6C6C456E 
 4307      61626C65 
 4307      00
 4308              	.LASF27:
 4309 0326 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 4309      53657450 
 4309      574D4D6F 
 4309      646500
 4310              	.LASF2:
 4311 0335 73686F72 		.ascii	"short int\000"
 4311      7420696E 
 4311      7400
 4312              	.LASF70:
 4313 033f 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4313      47657449 
 4313      6E746572 
 4313      72757074 
 4313      536F7572 
 4314              	.LASF69:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 105


 4315 035c 696E7465 		.ascii	"interruptMask\000"
 4315      72727570 
 4315      744D6173 
 4315      6B00
 4316              	.LASF47:
 4317 036a 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 4317      57726974 
 4317      65506572 
 4317      696F6442 
 4317      756600
 4318              	.LASF20:
 4319 037d 50574D5F 		.ascii	"PWM_SetQDMode\000"
 4319      53657451 
 4319      444D6F64 
 4319      6500
 4320              	.LASF13:
 4321 038b 63686172 		.ascii	"char\000"
 4321      00
 4322              	.LASF21:
 4323 0390 6D6F6465 		.ascii	"mode\000"
 4323      00
 4324              	.LASF73:
 4325 0395 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4325      53657449 
 4325      6E746572 
 4325      72757074 
 4325      00
 4326              	.LASF61:
 4327 03a6 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4327      53657452 
 4327      656C6F61 
 4327      644D6F64 
 4327      6500
 4328              	.LASF40:
 4329 03b8 636F756E 		.ascii	"counterMode\000"
 4329      7465724D 
 4329      6F646500 
 4330              	.LASF55:
 4331 03c4 636F6D70 		.ascii	"compareBuf\000"
 4331      61726542 
 4331      756600
 4332              	.LASF48:
 4333 03cf 70657269 		.ascii	"periodBuf\000"
 4333      6F644275 
 4333      6600
 4334              	.LASF58:
 4335 03d9 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 4335      52656164 
 4335      43617074 
 4335      75726542 
 4335      756600
 4336              	.LASF18:
 4337 03ec 656E6162 		.ascii	"enableInterrupts\000"
 4337      6C65496E 
 4337      74657272 
 4337      75707473 
 4337      00
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccpnPsRv.s 			page 106


 4338              	.LASF64:
 4339 03fd 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4339      53657443 
 4339      6F756E74 
 4339      4D6F6465 
 4339      00
 4340              	.LASF26:
 4341 040e 6F6E6553 		.ascii	"oneShotEnable\000"
 4341      686F7445 
 4341      6E61626C 
 4341      6500
 4342              	.LASF19:
 4343 041c 50574D5F 		.ascii	"PWM_SetMode\000"
 4343      5365744D 
 4343      6F646500 
 4344              	.LASF31:
 4345 0428 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 4345      53657450 
 4345      574D5374 
 4345      6F704F6E 
 4345      4B696C6C 
 4346              	.LASF46:
 4347 043d 73776170 		.ascii	"swapEnable\000"
 4347      456E6162 
 4347      6C6500
 4348              	.LASF71:
 4349 0448 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4349      47657449 
 4349      6E746572 
 4349      72757074 
 4349      536F7572 
 4350              	.LASF39:
 4351 045f 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 4351      53657443 
 4351      6F756E74 
 4351      65724D6F 
 4351      646500
 4352              	.LASF53:
 4353 0472 50574D5F 		.ascii	"PWM_ReadCompare\000"
 4353      52656164 
 4353      436F6D70 
 4353      61726500 
 4354              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
