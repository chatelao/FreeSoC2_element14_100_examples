ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"PWM.c"
  13              		.section	.debug_abbrev,"",%progbits
  14              	.Ldebug_abbrev0:
  15              		.section	.debug_info,"",%progbits
  16              	.Ldebug_info0:
  17              		.section	.debug_line,"",%progbits
  18              	.Ldebug_line0:
  19 0000 85030000 		.text
  19      02005C00 
  19      00000201 
  19      FB0E0D00 
  19      01010101 
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.global	PWM_initVar
  23              		.bss
  24              		.type	PWM_initVar, %object
  25              		.size	PWM_initVar, 1
  26              	PWM_initVar:
  27 0000 00       		.space	1
  28              		.section	.text.PWM_Init,"ax",%progbits
  29              		.align	2
  30              		.global	PWM_Init
  31              		.code	16
  32              		.thumb_func
  33              		.type	PWM_Init, %function
  34              	PWM_Init:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 2


  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "cyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  37              		.loc 1 40 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  47              		.loc 1 50 0
  48 0004 0F4A     		ldr	r2, .L3
  49 0006 8423     		mov	r3, #132
  50 0008 DB04     		lsl	r3, r3, #19
  51 000a 1360     		str	r3, [r2]
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 3


  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  52              		.loc 1 62 0
  53 000c 0D4B     		ldr	r3, .L3
  54 000e 0D4A     		ldr	r2, .L3
  55 0010 1268     		ldr	r2, [r2]
  56 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  57              		.loc 1 73 0
  58 0014 0B4B     		ldr	r3, .L3
  59 0016 0B4A     		ldr	r2, .L3
  60 0018 1268     		ldr	r2, [r2]
  61 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  62              		.loc 1 96 0
  63 001c 0A4A     		ldr	r2, .L3+4
  64 001e C323     		mov	r3, #195
  65 0020 9B00     		lsl	r3, r3, #2
  66 0022 1360     		str	r3, [r2]
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 4


 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  67              		.loc 1 119 0
  68 0024 0020     		mov	r0, #0
  69 0026 FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 130:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 134:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 135:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 136:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 137:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 138:.\Generated_Source\PSoC4/PWM.c **** 
 139:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 140:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  70              		.loc 1 140 0
  71 002a 084B     		ldr	r3, .L3+8
  72 002c 181C     		mov	r0, r3
  73 002e FFF7FEFF 		bl	PWM_WritePeriod
 141:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  74              		.loc 1 141 0
  75 0032 074B     		ldr	r3, .L3+12
  76 0034 181C     		mov	r0, r3
  77 0036 FFF7FEFF 		bl	PWM_WriteCompare
 142:.\Generated_Source\PSoC4/PWM.c **** 
 143:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 144:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 145:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 146:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 147:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 5


 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 156:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 157:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 158:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 159:.\Generated_Source\PSoC4/PWM.c ****         #else
 160:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 161:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  78              		.loc 1 161 0
  79 003a 064B     		ldr	r3, .L3+16
  80 003c 3122     		mov	r2, #49
  81 003e 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 163:.\Generated_Source\PSoC4/PWM.c **** 
 164:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 165:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 166:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 167:.\Generated_Source\PSoC4/PWM.c **** 
 168:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 169:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 170:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 171:.\Generated_Source\PSoC4/PWM.c **** 
 172:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 173:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 174:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 175:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 176:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 177:.\Generated_Source\PSoC4/PWM.c **** }
  82              		.loc 1 177 0
  83 0040 BD46     		mov	sp, r7
  84              		@ sp needed for prologue
  85 0042 80BD     		pop	{r7, pc}
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0044 00010540 		.word	1074069760
  90 0048 24010540 		.word	1074069796
  91 004c 10270000 		.word	10000
  92 0050 88130000 		.word	5000
  93 0054 28010540 		.word	1074069800
  94              		.cfi_endproc
  95              	.LFE0:
  96              		.size	PWM_Init, .-PWM_Init
  97              		.section	.text.PWM_Enable,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_Enable
 100              		.code	16
 101              		.thumb_func
 102              		.type	PWM_Enable, %function
 103              	PWM_Enable:
 104              	.LFB1:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 6


 178:.\Generated_Source\PSoC4/PWM.c **** 
 179:.\Generated_Source\PSoC4/PWM.c **** 
 180:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 181:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 182:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 183:.\Generated_Source\PSoC4/PWM.c **** *
 184:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 185:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 186:.\Generated_Source\PSoC4/PWM.c **** *
 187:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 188:.\Generated_Source\PSoC4/PWM.c **** *  None
 189:.\Generated_Source\PSoC4/PWM.c **** *
 190:.\Generated_Source\PSoC4/PWM.c **** * Return:
 191:.\Generated_Source\PSoC4/PWM.c **** *  None
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 195:.\Generated_Source\PSoC4/PWM.c **** {
 105              		.loc 1 195 0
 106              		.cfi_startproc
 107 0000 80B5     		push	{r7, lr}
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 82B0     		sub	sp, sp, #8
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 16
 115 0004 00AF     		add	r7, sp, #0
 116              	.LCFI4:
 117              		.cfi_def_cfa_register 7
 196:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 197:.\Generated_Source\PSoC4/PWM.c **** 
 198:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 118              		.loc 1 198 0
 119 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 120 000a 031C     		mov	r3, r0
 121 000c 1A1C     		mov	r2, r3
 122 000e FB1D     		add	r3, r7, #7
 123 0010 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 124              		.loc 1 199 0
 125 0012 074B     		ldr	r3, .L7
 126 0014 064A     		ldr	r2, .L7
 127 0016 1168     		ldr	r1, [r2]
 128 0018 0122     		mov	r2, #1
 129 001a 0A43     		orr	r2, r2, r1
 130 001c 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 131              		.loc 1 200 0
 132 001e FB1D     		add	r3, r7, #7
 133 0020 1B78     		ldrb	r3, [r3]
 134 0022 181C     		mov	r0, r3
 135 0024 FFF7FEFF 		bl	CyExitCriticalSection
 201:.\Generated_Source\PSoC4/PWM.c **** 
 202:.\Generated_Source\PSoC4/PWM.c ****     /* Statr Timer or PWM if start input is absent */
 203:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 7


 204:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 205:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 206:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 207:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 208:.\Generated_Source\PSoC4/PWM.c **** 
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** }
 136              		.loc 1 214 0
 137 0028 BD46     		mov	sp, r7
 138 002a 02B0     		add	sp, sp, #8
 139              		@ sp needed for prologue
 140 002c 80BD     		pop	{r7, pc}
 141              	.L8:
 142 002e C046     		.align	2
 143              	.L7:
 144 0030 00000540 		.word	1074069504
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	PWM_Enable, .-PWM_Enable
 148              		.section	.text.PWM_Start,"ax",%progbits
 149              		.align	2
 150              		.global	PWM_Start
 151              		.code	16
 152              		.thumb_func
 153              		.type	PWM_Start, %function
 154              	PWM_Start:
 155              	.LFB2:
 215:.\Generated_Source\PSoC4/PWM.c **** 
 216:.\Generated_Source\PSoC4/PWM.c **** 
 217:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 218:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 219:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 220:.\Generated_Source\PSoC4/PWM.c **** *
 221:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 222:.\Generated_Source\PSoC4/PWM.c **** *  Initialize the PWM with default customizer
 223:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 224:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 225:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 228:.\Generated_Source\PSoC4/PWM.c **** *  None
 229:.\Generated_Source\PSoC4/PWM.c **** *
 230:.\Generated_Source\PSoC4/PWM.c **** * Return:
 231:.\Generated_Source\PSoC4/PWM.c **** *  None
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 234:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 235:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 236:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 237:.\Generated_Source\PSoC4/PWM.c **** *  enable/disable component without re-initialization in all subsequent calls
 238:.\Generated_Source\PSoC4/PWM.c **** *  to the PWM_Start() routine.
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 8


 241:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 242:.\Generated_Source\PSoC4/PWM.c **** {
 156              		.loc 1 242 0
 157              		.cfi_startproc
 158 0000 80B5     		push	{r7, lr}
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
 164              	.LCFI6:
 165              		.cfi_def_cfa_register 7
 243:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 166              		.loc 1 243 0
 167 0004 064B     		ldr	r3, .L12
 168 0006 1B78     		ldrb	r3, [r3]
 169 0008 002B     		cmp	r3, #0
 170 000a 04D1     		bne	.L10
 244:.\Generated_Source\PSoC4/PWM.c ****     {
 245:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 171              		.loc 1 245 0
 172 000c FFF7FEFF 		bl	PWM_Init
 246:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 173              		.loc 1 246 0
 174 0010 034B     		ldr	r3, .L12
 175 0012 0122     		mov	r2, #1
 176 0014 1A70     		strb	r2, [r3]
 177              	.L10:
 247:.\Generated_Source\PSoC4/PWM.c ****     }
 248:.\Generated_Source\PSoC4/PWM.c **** 
 249:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 178              		.loc 1 249 0
 179 0016 FFF7FEFF 		bl	PWM_Enable
 250:.\Generated_Source\PSoC4/PWM.c **** }
 180              		.loc 1 250 0
 181 001a BD46     		mov	sp, r7
 182              		@ sp needed for prologue
 183 001c 80BD     		pop	{r7, pc}
 184              	.L13:
 185 001e C046     		.align	2
 186              	.L12:
 187 0020 00000000 		.word	PWM_initVar
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	PWM_Start, .-PWM_Start
 191              		.section	.text.PWM_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	PWM_Stop
 194              		.code	16
 195              		.thumb_func
 196              		.type	PWM_Stop, %function
 197              	PWM_Stop:
 198              	.LFB3:
 251:.\Generated_Source\PSoC4/PWM.c **** 
 252:.\Generated_Source\PSoC4/PWM.c **** 
 253:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 254:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 9


 255:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 256:.\Generated_Source\PSoC4/PWM.c **** *
 257:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 258:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 259:.\Generated_Source\PSoC4/PWM.c **** *
 260:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 261:.\Generated_Source\PSoC4/PWM.c **** *  None
 262:.\Generated_Source\PSoC4/PWM.c **** *
 263:.\Generated_Source\PSoC4/PWM.c **** * Return:
 264:.\Generated_Source\PSoC4/PWM.c **** *  None
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 268:.\Generated_Source\PSoC4/PWM.c **** {
 199              		.loc 1 268 0
 200              		.cfi_startproc
 201 0000 80B5     		push	{r7, lr}
 202              	.LCFI7:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 82B0     		sub	sp, sp, #8
 207              	.LCFI8:
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              	.LCFI9:
 211              		.cfi_def_cfa_register 7
 269:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 270:.\Generated_Source\PSoC4/PWM.c **** 
 271:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 212              		.loc 1 271 0
 213 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 214 000a 031C     		mov	r3, r0
 215 000c 1A1C     		mov	r2, r3
 216 000e FB1D     		add	r3, r7, #7
 217 0010 1A70     		strb	r2, [r3]
 272:.\Generated_Source\PSoC4/PWM.c **** 
 273:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 218              		.loc 1 273 0
 219 0012 074B     		ldr	r3, .L16
 220 0014 064A     		ldr	r2, .L16
 221 0016 1268     		ldr	r2, [r2]
 222 0018 0121     		mov	r1, #1
 223 001a 8A43     		bic	r2, r2, r1
 224 001c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/PWM.c **** 
 275:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 225              		.loc 1 275 0
 226 001e FB1D     		add	r3, r7, #7
 227 0020 1B78     		ldrb	r3, [r3]
 228 0022 181C     		mov	r0, r3
 229 0024 FFF7FEFF 		bl	CyExitCriticalSection
 276:.\Generated_Source\PSoC4/PWM.c **** }
 230              		.loc 1 276 0
 231 0028 BD46     		mov	sp, r7
 232 002a 02B0     		add	sp, sp, #8
 233              		@ sp needed for prologue
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 10


 234 002c 80BD     		pop	{r7, pc}
 235              	.L17:
 236 002e C046     		.align	2
 237              	.L16:
 238 0030 00000540 		.word	1074069504
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	PWM_Stop, .-PWM_Stop
 242              		.section	.text.PWM_SetMode,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_SetMode
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_SetMode, %function
 248              	PWM_SetMode:
 249              	.LFB4:
 277:.\Generated_Source\PSoC4/PWM.c **** 
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 281:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 284:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 285:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 286:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 287:.\Generated_Source\PSoC4/PWM.c **** *
 288:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 289:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 290:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 291:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 292:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 293:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 294:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 295:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 296:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 297:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 298:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 299:.\Generated_Source\PSoC4/PWM.c **** *
 300:.\Generated_Source\PSoC4/PWM.c **** * Return:
 301:.\Generated_Source\PSoC4/PWM.c **** *  None
 302:.\Generated_Source\PSoC4/PWM.c **** *
 303:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 305:.\Generated_Source\PSoC4/PWM.c **** {
 250              		.loc 1 305 0
 251              		.cfi_startproc
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI10:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 84B0     		sub	sp, sp, #16
 258              	.LCFI11:
 259              		.cfi_def_cfa_offset 24
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI12:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 11


 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 306:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 307:.\Generated_Source\PSoC4/PWM.c **** 
 308:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 264              		.loc 1 308 0
 265 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 266 000c 031C     		mov	r3, r0
 267 000e 1A1C     		mov	r2, r3
 268 0010 3B1C     		mov	r3, r7
 269 0012 0F33     		add	r3, r3, #15
 270 0014 1A70     		strb	r2, [r3]
 309:.\Generated_Source\PSoC4/PWM.c **** 
 310:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 271              		.loc 1 310 0
 272 0016 0A4B     		ldr	r3, .L20
 273 0018 094A     		ldr	r2, .L20
 274 001a 1168     		ldr	r1, [r2]
 275 001c 094A     		ldr	r2, .L20+4
 276 001e 0A40     		and	r2, r2, r1
 277 0020 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 278              		.loc 1 311 0
 279 0022 074B     		ldr	r3, .L20
 280 0024 064A     		ldr	r2, .L20
 281 0026 1168     		ldr	r1, [r2]
 282 0028 7A68     		ldr	r2, [r7, #4]
 283 002a 0A43     		orr	r2, r2, r1
 284 002c 1A60     		str	r2, [r3]
 312:.\Generated_Source\PSoC4/PWM.c **** 
 313:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 285              		.loc 1 313 0
 286 002e 3B1C     		mov	r3, r7
 287 0030 0F33     		add	r3, r3, #15
 288 0032 1B78     		ldrb	r3, [r3]
 289 0034 181C     		mov	r0, r3
 290 0036 FFF7FEFF 		bl	CyExitCriticalSection
 314:.\Generated_Source\PSoC4/PWM.c **** }
 291              		.loc 1 314 0
 292 003a BD46     		mov	sp, r7
 293 003c 04B0     		add	sp, sp, #16
 294              		@ sp needed for prologue
 295 003e 80BD     		pop	{r7, pc}
 296              	.L21:
 297              		.align	2
 298              	.L20:
 299 0040 00010540 		.word	1074069760
 300 0044 FFFFFFF8 		.word	-117440513
 301              		.cfi_endproc
 302              	.LFE4:
 303              		.size	PWM_SetMode, .-PWM_SetMode
 304              		.section	.text.PWM_SetQDMode,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_SetQDMode
 307              		.code	16
 308              		.thumb_func
 309              		.type	PWM_SetQDMode, %function
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 12


 310              	PWM_SetQDMode:
 311              	.LFB5:
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c **** 
 317:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 319:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/PWM.c **** *
 321:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 322:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of 3 supported modes.
 323:.\Generated_Source\PSoC4/PWM.c **** *  Is functionality is only applicable to Quadrature Decoder operation.
 324:.\Generated_Source\PSoC4/PWM.c **** *
 325:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 326:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 327:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 328:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 329:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 330:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 331:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 332:.\Generated_Source\PSoC4/PWM.c **** *
 333:.\Generated_Source\PSoC4/PWM.c **** * Return:
 334:.\Generated_Source\PSoC4/PWM.c **** *  None
 335:.\Generated_Source\PSoC4/PWM.c **** *
 336:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 337:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 338:.\Generated_Source\PSoC4/PWM.c **** {
 312              		.loc 1 338 0
 313              		.cfi_startproc
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI13:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 84B0     		sub	sp, sp, #16
 320              	.LCFI14:
 321              		.cfi_def_cfa_offset 24
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI15:
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 339:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 340:.\Generated_Source\PSoC4/PWM.c **** 
 341:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 326              		.loc 1 341 0
 327 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 328 000c 031C     		mov	r3, r0
 329 000e 1A1C     		mov	r2, r3
 330 0010 3B1C     		mov	r3, r7
 331 0012 0F33     		add	r3, r3, #15
 332 0014 1A70     		strb	r2, [r3]
 342:.\Generated_Source\PSoC4/PWM.c **** 
 343:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 333              		.loc 1 343 0
 334 0016 0A4B     		ldr	r3, .L24
 335 0018 094A     		ldr	r2, .L24
 336 001a 1168     		ldr	r1, [r2]
 337 001c 094A     		ldr	r2, .L24+4
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 13


 338 001e 0A40     		and	r2, r2, r1
 339 0020 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 340              		.loc 1 344 0
 341 0022 074B     		ldr	r3, .L24
 342 0024 064A     		ldr	r2, .L24
 343 0026 1168     		ldr	r1, [r2]
 344 0028 7A68     		ldr	r2, [r7, #4]
 345 002a 0A43     		orr	r2, r2, r1
 346 002c 1A60     		str	r2, [r3]
 345:.\Generated_Source\PSoC4/PWM.c **** 
 346:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 347              		.loc 1 346 0
 348 002e 3B1C     		mov	r3, r7
 349 0030 0F33     		add	r3, r3, #15
 350 0032 1B78     		ldrb	r3, [r3]
 351 0034 181C     		mov	r0, r3
 352 0036 FFF7FEFF 		bl	CyExitCriticalSection
 347:.\Generated_Source\PSoC4/PWM.c **** }
 353              		.loc 1 347 0
 354 003a BD46     		mov	sp, r7
 355 003c 04B0     		add	sp, sp, #16
 356              		@ sp needed for prologue
 357 003e 80BD     		pop	{r7, pc}
 358              	.L25:
 359              		.align	2
 360              	.L24:
 361 0040 00010540 		.word	1074069760
 362 0044 FFFF8FFF 		.word	-7340033
 363              		.cfi_endproc
 364              	.LFE5:
 365              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 366              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 367              		.align	2
 368              		.global	PWM_SetPrescaler
 369              		.code	16
 370              		.thumb_func
 371              		.type	PWM_SetPrescaler, %function
 372              	PWM_SetPrescaler:
 373              	.LFB6:
 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c **** 
 350:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 352:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/PWM.c **** *
 354:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 355:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 356:.\Generated_Source\PSoC4/PWM.c **** *  to PWM with dead time mode or Quadrature Decoder mode.
 357:.\Generated_Source\PSoC4/PWM.c **** *
 358:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 359:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 360:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 361:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 362:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 363:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 364:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 14


 365:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 366:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 369:.\Generated_Source\PSoC4/PWM.c **** *
 370:.\Generated_Source\PSoC4/PWM.c **** * Return:
 371:.\Generated_Source\PSoC4/PWM.c **** *  None
 372:.\Generated_Source\PSoC4/PWM.c **** *
 373:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 374:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 375:.\Generated_Source\PSoC4/PWM.c **** {
 374              		.loc 1 375 0
 375              		.cfi_startproc
 376 0000 80B5     		push	{r7, lr}
 377              	.LCFI16:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 84B0     		sub	sp, sp, #16
 382              	.LCFI17:
 383              		.cfi_def_cfa_offset 24
 384 0004 00AF     		add	r7, sp, #0
 385              	.LCFI18:
 386              		.cfi_def_cfa_register 7
 387 0006 7860     		str	r0, [r7, #4]
 376:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 377:.\Generated_Source\PSoC4/PWM.c **** 
 378:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 388              		.loc 1 378 0
 389 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 390 000c 031C     		mov	r3, r0
 391 000e 1A1C     		mov	r2, r3
 392 0010 3B1C     		mov	r3, r7
 393 0012 0F33     		add	r3, r3, #15
 394 0014 1A70     		strb	r2, [r3]
 379:.\Generated_Source\PSoC4/PWM.c **** 
 380:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 395              		.loc 1 380 0
 396 0016 0A4B     		ldr	r3, .L28
 397 0018 094A     		ldr	r2, .L28
 398 001a 1168     		ldr	r1, [r2]
 399 001c 094A     		ldr	r2, .L28+4
 400 001e 0A40     		and	r2, r2, r1
 401 0020 1A60     		str	r2, [r3]
 381:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 402              		.loc 1 381 0
 403 0022 074B     		ldr	r3, .L28
 404 0024 064A     		ldr	r2, .L28
 405 0026 1168     		ldr	r1, [r2]
 406 0028 7A68     		ldr	r2, [r7, #4]
 407 002a 0A43     		orr	r2, r2, r1
 408 002c 1A60     		str	r2, [r3]
 382:.\Generated_Source\PSoC4/PWM.c **** 
 383:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 409              		.loc 1 383 0
 410 002e 3B1C     		mov	r3, r7
 411 0030 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 15


 412 0032 1B78     		ldrb	r3, [r3]
 413 0034 181C     		mov	r0, r3
 414 0036 FFF7FEFF 		bl	CyExitCriticalSection
 384:.\Generated_Source\PSoC4/PWM.c **** }
 415              		.loc 1 384 0
 416 003a BD46     		mov	sp, r7
 417 003c 04B0     		add	sp, sp, #16
 418              		@ sp needed for prologue
 419 003e 80BD     		pop	{r7, pc}
 420              	.L29:
 421              		.align	2
 422              	.L28:
 423 0040 00010540 		.word	1074069760
 424 0044 FF00FFFF 		.word	-65281
 425              		.cfi_endproc
 426              	.LFE6:
 427              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 428              		.section	.text.PWM_SetOneShot,"ax",%progbits
 429              		.align	2
 430              		.global	PWM_SetOneShot
 431              		.code	16
 432              		.thumb_func
 433              		.type	PWM_SetOneShot, %function
 434              	PWM_SetOneShot:
 435              	.LFB7:
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c **** 
 387:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 388:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 389:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 390:.\Generated_Source\PSoC4/PWM.c **** *
 391:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 392:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 393:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 394:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in continuous mode.
 395:.\Generated_Source\PSoC4/PWM.c **** *
 396:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 397:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 398:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 399:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 400:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Return:
 403:.\Generated_Source\PSoC4/PWM.c **** *  None
 404:.\Generated_Source\PSoC4/PWM.c **** *
 405:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 406:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 407:.\Generated_Source\PSoC4/PWM.c **** {
 436              		.loc 1 407 0
 437              		.cfi_startproc
 438 0000 80B5     		push	{r7, lr}
 439              	.LCFI19:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 84B0     		sub	sp, sp, #16
 444              	.LCFI20:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 16


 445              		.cfi_def_cfa_offset 24
 446 0004 00AF     		add	r7, sp, #0
 447              	.LCFI21:
 448              		.cfi_def_cfa_register 7
 449 0006 7860     		str	r0, [r7, #4]
 408:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 409:.\Generated_Source\PSoC4/PWM.c **** 
 410:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 450              		.loc 1 410 0
 451 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 452 000c 031C     		mov	r3, r0
 453 000e 1A1C     		mov	r2, r3
 454 0010 3B1C     		mov	r3, r7
 455 0012 0F33     		add	r3, r3, #15
 456 0014 1A70     		strb	r2, [r3]
 411:.\Generated_Source\PSoC4/PWM.c **** 
 412:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 457              		.loc 1 412 0
 458 0016 0C4B     		ldr	r3, .L32
 459 0018 0B4A     		ldr	r2, .L32
 460 001a 1168     		ldr	r1, [r2]
 461 001c 0B4A     		ldr	r2, .L32+4
 462 001e 0A40     		and	r2, r2, r1
 463 0020 1A60     		str	r2, [r3]
 413:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 464              		.loc 1 413 0
 465 0022 094B     		ldr	r3, .L32
 466 0024 084A     		ldr	r2, .L32
 467 0026 1168     		ldr	r1, [r2]
 468 0028 7868     		ldr	r0, [r7, #4]
 469 002a 0122     		mov	r2, #1
 470 002c 0240     		and	r2, r2, r0
 471 002e 9204     		lsl	r2, r2, #18
 472 0030 0A43     		orr	r2, r2, r1
 473 0032 1A60     		str	r2, [r3]
 414:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 474              		.loc 1 416 0
 475 0034 3B1C     		mov	r3, r7
 476 0036 0F33     		add	r3, r3, #15
 477 0038 1B78     		ldrb	r3, [r3]
 478 003a 181C     		mov	r0, r3
 479 003c FFF7FEFF 		bl	CyExitCriticalSection
 417:.\Generated_Source\PSoC4/PWM.c **** }
 480              		.loc 1 417 0
 481 0040 BD46     		mov	sp, r7
 482 0042 04B0     		add	sp, sp, #16
 483              		@ sp needed for prologue
 484 0044 80BD     		pop	{r7, pc}
 485              	.L33:
 486 0046 C046     		.align	2
 487              	.L32:
 488 0048 00010540 		.word	1074069760
 489 004c FFFFFBFF 		.word	-262145
 490              		.cfi_endproc
 491              	.LFE7:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 17


 492              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 493              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 494              		.align	2
 495              		.global	PWM_SetPWMMode
 496              		.code	16
 497              		.thumb_func
 498              		.type	PWM_SetPWMMode, %function
 499              	PWM_SetPWMMode:
 500              	.LFB8:
 418:.\Generated_Source\PSoC4/PWM.c **** 
 419:.\Generated_Source\PSoC4/PWM.c **** 
 420:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 421:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 422:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 423:.\Generated_Source\PSoC4/PWM.c **** *
 424:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 425:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 426:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 427:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the 3 must be ORed together to form the
 429:.\Generated_Source\PSoC4/PWM.c **** *  mode.
 430:.\Generated_Source\PSoC4/PWM.c **** *
 431:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 432:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: Combination of the 3 mode settings.  Mask must include a value for
 433:.\Generated_Source\PSoC4/PWM.c **** *  each of the 3 or use one of the preconfigured PWM settings.
 434:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 435:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 436:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 437:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 438:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 439:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 440:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on overflow
 441:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 442:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 443:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 444:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 445:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 448:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 449:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 450:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 451:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be 
 452:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 455:.\Generated_Source\PSoC4/PWM.c **** *
 456:.\Generated_Source\PSoC4/PWM.c **** * Return:
 457:.\Generated_Source\PSoC4/PWM.c **** *  None
 458:.\Generated_Source\PSoC4/PWM.c **** *
 459:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 460:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 461:.\Generated_Source\PSoC4/PWM.c **** {
 501              		.loc 1 461 0
 502              		.cfi_startproc
 503 0000 80B5     		push	{r7, lr}
 504              	.LCFI22:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 18


 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 82B0     		sub	sp, sp, #8
 509              	.LCFI23:
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              	.LCFI24:
 513              		.cfi_def_cfa_register 7
 514 0006 7860     		str	r0, [r7, #4]
 462:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 515              		.loc 1 462 0
 516 0008 034B     		ldr	r3, .L36
 517 000a 7968     		ldr	r1, [r7, #4]
 518 000c 3F22     		mov	r2, #63
 519 000e 0A40     		and	r2, r2, r1
 520 0010 1A60     		str	r2, [r3]
 463:.\Generated_Source\PSoC4/PWM.c **** }
 521              		.loc 1 463 0
 522 0012 BD46     		mov	sp, r7
 523 0014 02B0     		add	sp, sp, #8
 524              		@ sp needed for prologue
 525 0016 80BD     		pop	{r7, pc}
 526              	.L37:
 527              		.align	2
 528              	.L36:
 529 0018 28010540 		.word	1074069800
 530              		.cfi_endproc
 531              	.LFE8:
 532              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 533              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 534              		.align	2
 535              		.global	PWM_SetPWMSyncKill
 536              		.code	16
 537              		.thumb_func
 538              		.type	PWM_SetPWMSyncKill, %function
 539              	PWM_SetPWMSyncKill:
 540              	.LFB9:
 464:.\Generated_Source\PSoC4/PWM.c **** 
 465:.\Generated_Source\PSoC4/PWM.c **** 
 466:.\Generated_Source\PSoC4/PWM.c **** 
 467:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 468:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 469:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 470:.\Generated_Source\PSoC4/PWM.c **** *
 471:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 472:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 473:.\Generated_Source\PSoC4/PWM.c **** *  causes an asynchronous or synchronous kill operation.  By default the kill
 474:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to PWM and
 475:.\Generated_Source\PSoC4/PWM.c **** *  PWM with dead time modes.
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 478:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 479:.\Generated_Source\PSoC4/PWM.c **** *
 480:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 481:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 482:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in pass through mode
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 19


 483:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 487:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 488:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 489:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 490:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Return:
 493:.\Generated_Source\PSoC4/PWM.c **** *  None
 494:.\Generated_Source\PSoC4/PWM.c **** *
 495:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 497:.\Generated_Source\PSoC4/PWM.c **** {
 541              		.loc 1 497 0
 542              		.cfi_startproc
 543 0000 80B5     		push	{r7, lr}
 544              	.LCFI25:
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 84B0     		sub	sp, sp, #16
 549              	.LCFI26:
 550              		.cfi_def_cfa_offset 24
 551 0004 00AF     		add	r7, sp, #0
 552              	.LCFI27:
 553              		.cfi_def_cfa_register 7
 554 0006 7860     		str	r0, [r7, #4]
 498:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 499:.\Generated_Source\PSoC4/PWM.c **** 
 500:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 555              		.loc 1 500 0
 556 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 557 000c 031C     		mov	r3, r0
 558 000e 1A1C     		mov	r2, r3
 559 0010 3B1C     		mov	r3, r7
 560 0012 0F33     		add	r3, r3, #15
 561 0014 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/PWM.c **** 
 502:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 562              		.loc 1 502 0
 563 0016 0C4B     		ldr	r3, .L40
 564 0018 0B4A     		ldr	r2, .L40
 565 001a 1268     		ldr	r2, [r2]
 566 001c 0421     		mov	r1, #4
 567 001e 8A43     		bic	r2, r2, r1
 568 0020 1A60     		str	r2, [r3]
 503:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 569              		.loc 1 503 0
 570 0022 094B     		ldr	r3, .L40
 571 0024 084A     		ldr	r2, .L40
 572 0026 1168     		ldr	r1, [r2]
 573 0028 7868     		ldr	r0, [r7, #4]
 574 002a 0122     		mov	r2, #1
 575 002c 0240     		and	r2, r2, r0
 576 002e 9200     		lsl	r2, r2, #2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 20


 577 0030 0A43     		orr	r2, r2, r1
 578 0032 1A60     		str	r2, [r3]
 504:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 505:.\Generated_Source\PSoC4/PWM.c **** 
 506:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 579              		.loc 1 506 0
 580 0034 3B1C     		mov	r3, r7
 581 0036 0F33     		add	r3, r3, #15
 582 0038 1B78     		ldrb	r3, [r3]
 583 003a 181C     		mov	r0, r3
 584 003c FFF7FEFF 		bl	CyExitCriticalSection
 507:.\Generated_Source\PSoC4/PWM.c **** }
 585              		.loc 1 507 0
 586 0040 BD46     		mov	sp, r7
 587 0042 04B0     		add	sp, sp, #16
 588              		@ sp needed for prologue
 589 0044 80BD     		pop	{r7, pc}
 590              	.L41:
 591 0046 C046     		.align	2
 592              	.L40:
 593 0048 00010540 		.word	1074069760
 594              		.cfi_endproc
 595              	.LFE9:
 596              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 597              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 598              		.align	2
 599              		.global	PWM_SetPWMStopOnKill
 600              		.code	16
 601              		.thumb_func
 602              		.type	PWM_SetPWMStopOnKill, %function
 603              	PWM_SetPWMStopOnKill:
 604              	.LFB10:
 508:.\Generated_Source\PSoC4/PWM.c **** 
 509:.\Generated_Source\PSoC4/PWM.c **** 
 510:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 512:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/PWM.c **** *
 514:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 515:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 516:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 517:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 518:.\Generated_Source\PSoC4/PWM.c **** *
 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 521:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 522:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 523:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 524:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 525:.\Generated_Source\PSoC4/PWM.c **** *
 526:.\Generated_Source\PSoC4/PWM.c **** * Return:
 527:.\Generated_Source\PSoC4/PWM.c **** *  None
 528:.\Generated_Source\PSoC4/PWM.c **** *
 529:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 531:.\Generated_Source\PSoC4/PWM.c **** {
 605              		.loc 1 531 0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 21


 606              		.cfi_startproc
 607 0000 80B5     		push	{r7, lr}
 608              	.LCFI28:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 84B0     		sub	sp, sp, #16
 613              	.LCFI29:
 614              		.cfi_def_cfa_offset 24
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI30:
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 532:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 533:.\Generated_Source\PSoC4/PWM.c **** 
 534:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 619              		.loc 1 534 0
 620 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 621 000c 031C     		mov	r3, r0
 622 000e 1A1C     		mov	r2, r3
 623 0010 3B1C     		mov	r3, r7
 624 0012 0F33     		add	r3, r3, #15
 625 0014 1A70     		strb	r2, [r3]
 535:.\Generated_Source\PSoC4/PWM.c **** 
 536:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 626              		.loc 1 536 0
 627 0016 0C4B     		ldr	r3, .L44
 628 0018 0B4A     		ldr	r2, .L44
 629 001a 1268     		ldr	r2, [r2]
 630 001c 0821     		mov	r1, #8
 631 001e 8A43     		bic	r2, r2, r1
 632 0020 1A60     		str	r2, [r3]
 537:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 633              		.loc 1 537 0
 634 0022 094B     		ldr	r3, .L44
 635 0024 084A     		ldr	r2, .L44
 636 0026 1168     		ldr	r1, [r2]
 637 0028 7868     		ldr	r0, [r7, #4]
 638 002a 0122     		mov	r2, #1
 639 002c 0240     		and	r2, r2, r0
 640 002e D200     		lsl	r2, r2, #3
 641 0030 0A43     		orr	r2, r2, r1
 642 0032 1A60     		str	r2, [r3]
 538:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 643              		.loc 1 540 0
 644 0034 3B1C     		mov	r3, r7
 645 0036 0F33     		add	r3, r3, #15
 646 0038 1B78     		ldrb	r3, [r3]
 647 003a 181C     		mov	r0, r3
 648 003c FFF7FEFF 		bl	CyExitCriticalSection
 541:.\Generated_Source\PSoC4/PWM.c **** }
 649              		.loc 1 541 0
 650 0040 BD46     		mov	sp, r7
 651 0042 04B0     		add	sp, sp, #16
 652              		@ sp needed for prologue
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 22


 653 0044 80BD     		pop	{r7, pc}
 654              	.L45:
 655 0046 C046     		.align	2
 656              	.L44:
 657 0048 00010540 		.word	1074069760
 658              		.cfi_endproc
 659              	.LFE10:
 660              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 661              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 662              		.align	2
 663              		.global	PWM_SetPWMDeadTime
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_SetPWMDeadTime, %function
 667              	PWM_SetPWMDeadTime:
 668              	.LFB11:
 542:.\Generated_Source\PSoC4/PWM.c **** 
 543:.\Generated_Source\PSoC4/PWM.c **** 
 544:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 546:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/PWM.c **** *
 548:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 549:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 550:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 551:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 552:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in dead time mode.
 553:.\Generated_Source\PSoC4/PWM.c **** 
 554:.\Generated_Source\PSoC4/PWM.c **** *
 555:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 556:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 557:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 558:.\Generated_Source\PSoC4/PWM.c **** *
 559:.\Generated_Source\PSoC4/PWM.c **** * Return:
 560:.\Generated_Source\PSoC4/PWM.c **** *  None
 561:.\Generated_Source\PSoC4/PWM.c **** *
 562:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 563:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 564:.\Generated_Source\PSoC4/PWM.c **** {
 669              		.loc 1 564 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              	.LCFI31:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 84B0     		sub	sp, sp, #16
 677              	.LCFI32:
 678              		.cfi_def_cfa_offset 24
 679 0004 00AF     		add	r7, sp, #0
 680              	.LCFI33:
 681              		.cfi_def_cfa_register 7
 682 0006 7860     		str	r0, [r7, #4]
 565:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 566:.\Generated_Source\PSoC4/PWM.c **** 
 567:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 683              		.loc 1 567 0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 23


 684 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 685 000c 031C     		mov	r3, r0
 686 000e 1A1C     		mov	r2, r3
 687 0010 3B1C     		mov	r3, r7
 688 0012 0F33     		add	r3, r3, #15
 689 0014 1A70     		strb	r2, [r3]
 568:.\Generated_Source\PSoC4/PWM.c **** 
 569:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 690              		.loc 1 569 0
 691 0016 0C4B     		ldr	r3, .L48
 692 0018 0B4A     		ldr	r2, .L48
 693 001a 1168     		ldr	r1, [r2]
 694 001c 0B4A     		ldr	r2, .L48+4
 695 001e 0A40     		and	r2, r2, r1
 696 0020 1A60     		str	r2, [r3]
 570:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 697              		.loc 1 570 0
 698 0022 094B     		ldr	r3, .L48
 699 0024 084A     		ldr	r2, .L48
 700 0026 1168     		ldr	r1, [r2]
 701 0028 7A68     		ldr	r2, [r7, #4]
 702 002a 1202     		lsl	r2, r2, #8
 703 002c 1204     		lsl	r2, r2, #16
 704 002e 120C     		lsr	r2, r2, #16
 705 0030 0A43     		orr	r2, r2, r1
 706 0032 1A60     		str	r2, [r3]
 571:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 707              		.loc 1 573 0
 708 0034 3B1C     		mov	r3, r7
 709 0036 0F33     		add	r3, r3, #15
 710 0038 1B78     		ldrb	r3, [r3]
 711 003a 181C     		mov	r0, r3
 712 003c FFF7FEFF 		bl	CyExitCriticalSection
 574:.\Generated_Source\PSoC4/PWM.c **** }
 713              		.loc 1 574 0
 714 0040 BD46     		mov	sp, r7
 715 0042 04B0     		add	sp, sp, #16
 716              		@ sp needed for prologue
 717 0044 80BD     		pop	{r7, pc}
 718              	.L49:
 719 0046 C046     		.align	2
 720              	.L48:
 721 0048 00010540 		.word	1074069760
 722 004c FF00FFFF 		.word	-65281
 723              		.cfi_endproc
 724              	.LFE11:
 725              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 726              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 727              		.align	2
 728              		.global	PWM_SetPWMInvert
 729              		.code	16
 730              		.thumb_func
 731              		.type	PWM_SetPWMInvert, %function
 732              	PWM_SetPWMInvert:
 733              	.LFB12:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 24


 575:.\Generated_Source\PSoC4/PWM.c **** 
 576:.\Generated_Source\PSoC4/PWM.c **** 
 577:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 578:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 579:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 580:.\Generated_Source\PSoC4/PWM.c **** *
 581:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 582:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 583:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 584:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 585:.\Generated_Source\PSoC4/PWM.c **** *
 586:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 587:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 588:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 589:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 590:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Return:
 593:.\Generated_Source\PSoC4/PWM.c **** *  None
 594:.\Generated_Source\PSoC4/PWM.c **** *
 595:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 597:.\Generated_Source\PSoC4/PWM.c **** {
 734              		.loc 1 597 0
 735              		.cfi_startproc
 736 0000 80B5     		push	{r7, lr}
 737              	.LCFI34:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 84B0     		sub	sp, sp, #16
 742              	.LCFI35:
 743              		.cfi_def_cfa_offset 24
 744 0004 00AF     		add	r7, sp, #0
 745              	.LCFI36:
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 599:.\Generated_Source\PSoC4/PWM.c **** 
 600:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 748              		.loc 1 600 0
 749 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 750 000c 031C     		mov	r3, r0
 751 000e 1A1C     		mov	r2, r3
 752 0010 3B1C     		mov	r3, r7
 753 0012 0F33     		add	r3, r3, #15
 754 0014 1A70     		strb	r2, [r3]
 601:.\Generated_Source\PSoC4/PWM.c **** 
 602:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 755              		.loc 1 602 0
 756 0016 0A4B     		ldr	r3, .L52
 757 0018 094A     		ldr	r2, .L52
 758 001a 1168     		ldr	r1, [r2]
 759 001c 094A     		ldr	r2, .L52+4
 760 001e 0A40     		and	r2, r2, r1
 761 0020 1A60     		str	r2, [r3]
 603:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 25


 762              		.loc 1 603 0
 763 0022 074B     		ldr	r3, .L52
 764 0024 064A     		ldr	r2, .L52
 765 0026 1168     		ldr	r1, [r2]
 766 0028 7A68     		ldr	r2, [r7, #4]
 767 002a 0A43     		orr	r2, r2, r1
 768 002c 1A60     		str	r2, [r3]
 604:.\Generated_Source\PSoC4/PWM.c **** 
 605:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 769              		.loc 1 605 0
 770 002e 3B1C     		mov	r3, r7
 771 0030 0F33     		add	r3, r3, #15
 772 0032 1B78     		ldrb	r3, [r3]
 773 0034 181C     		mov	r0, r3
 774 0036 FFF7FEFF 		bl	CyExitCriticalSection
 606:.\Generated_Source\PSoC4/PWM.c **** }
 775              		.loc 1 606 0
 776 003a BD46     		mov	sp, r7
 777 003c 04B0     		add	sp, sp, #16
 778              		@ sp needed for prologue
 779 003e 80BD     		pop	{r7, pc}
 780              	.L53:
 781              		.align	2
 782              	.L52:
 783 0040 00010540 		.word	1074069760
 784 0044 FFFFCFFF 		.word	-3145729
 785              		.cfi_endproc
 786              	.LFE12:
 787              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 788              		.section	.text.PWM_WriteCounter,"ax",%progbits
 789              		.align	2
 790              		.global	PWM_WriteCounter
 791              		.code	16
 792              		.thumb_func
 793              		.type	PWM_WriteCounter, %function
 794              	PWM_WriteCounter:
 795              	.LFB13:
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c **** 
 609:.\Generated_Source\PSoC4/PWM.c **** 
 610:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 612:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/PWM.c **** *
 614:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 615:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 616:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 617:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 620:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Return:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 26


 627:.\Generated_Source\PSoC4/PWM.c **** {
 796              		.loc 1 627 0
 797              		.cfi_startproc
 798 0000 80B5     		push	{r7, lr}
 799              	.LCFI37:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 82B0     		sub	sp, sp, #8
 804              	.LCFI38:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI39:
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 628:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 810              		.loc 1 628 0
 811 0008 034B     		ldr	r3, .L56
 812 000a 7A68     		ldr	r2, [r7, #4]
 813 000c 1204     		lsl	r2, r2, #16
 814 000e 120C     		lsr	r2, r2, #16
 815 0010 1A60     		str	r2, [r3]
 629:.\Generated_Source\PSoC4/PWM.c **** }
 816              		.loc 1 629 0
 817 0012 BD46     		mov	sp, r7
 818 0014 02B0     		add	sp, sp, #8
 819              		@ sp needed for prologue
 820 0016 80BD     		pop	{r7, pc}
 821              	.L57:
 822              		.align	2
 823              	.L56:
 824 0018 08010540 		.word	1074069768
 825              		.cfi_endproc
 826              	.LFE13:
 827              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 828              		.section	.text.PWM_ReadCounter,"ax",%progbits
 829              		.align	2
 830              		.global	PWM_ReadCounter
 831              		.code	16
 832              		.thumb_func
 833              		.type	PWM_ReadCounter, %function
 834              	PWM_ReadCounter:
 835              	.LFB14:
 630:.\Generated_Source\PSoC4/PWM.c **** 
 631:.\Generated_Source\PSoC4/PWM.c **** 
 632:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 634:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/PWM.c **** *
 636:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 637:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 640:.\Generated_Source\PSoC4/PWM.c **** *  None
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Return:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 27


 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 646:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 647:.\Generated_Source\PSoC4/PWM.c **** {
 836              		.loc 1 647 0
 837              		.cfi_startproc
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI40:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 00AF     		add	r7, sp, #0
 844              	.LCFI41:
 845              		.cfi_def_cfa_register 7
 648:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 846              		.loc 1 648 0
 847 0004 034B     		ldr	r3, .L60
 848 0006 1B68     		ldr	r3, [r3]
 849 0008 1B04     		lsl	r3, r3, #16
 850 000a 1B0C     		lsr	r3, r3, #16
 649:.\Generated_Source\PSoC4/PWM.c **** }
 851              		.loc 1 649 0
 852 000c 181C     		mov	r0, r3
 853 000e BD46     		mov	sp, r7
 854              		@ sp needed for prologue
 855 0010 80BD     		pop	{r7, pc}
 856              	.L61:
 857 0012 C046     		.align	2
 858              	.L60:
 859 0014 08010540 		.word	1074069768
 860              		.cfi_endproc
 861              	.LFE14:
 862              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 863              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 864              		.align	2
 865              		.global	PWM_SetCounterMode
 866              		.code	16
 867              		.thumb_func
 868              		.type	PWM_SetCounterMode, %function
 869              	PWM_SetCounterMode:
 870              	.LFB15:
 650:.\Generated_Source\PSoC4/PWM.c **** 
 651:.\Generated_Source\PSoC4/PWM.c **** 
 652:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 654:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 655:.\Generated_Source\PSoC4/PWM.c **** *
 656:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 657:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 658:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with pseudo random output.
 659:.\Generated_Source\PSoC4/PWM.c **** *
 660:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 661:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated couner type values
 662:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 663:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 664:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 665:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 28


 666:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 667:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 668:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 669:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 670:.\Generated_Source\PSoC4/PWM.c **** *
 671:.\Generated_Source\PSoC4/PWM.c **** * Return:
 672:.\Generated_Source\PSoC4/PWM.c **** *  None
 673:.\Generated_Source\PSoC4/PWM.c **** *
 674:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 675:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 676:.\Generated_Source\PSoC4/PWM.c **** {
 871              		.loc 1 676 0
 872              		.cfi_startproc
 873 0000 80B5     		push	{r7, lr}
 874              	.LCFI42:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 7, -8
 877              		.cfi_offset 14, -4
 878 0002 84B0     		sub	sp, sp, #16
 879              	.LCFI43:
 880              		.cfi_def_cfa_offset 24
 881 0004 00AF     		add	r7, sp, #0
 882              	.LCFI44:
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 677:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 678:.\Generated_Source\PSoC4/PWM.c **** 
 679:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 885              		.loc 1 679 0
 886 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 887 000c 031C     		mov	r3, r0
 888 000e 1A1C     		mov	r2, r3
 889 0010 3B1C     		mov	r3, r7
 890 0012 0F33     		add	r3, r3, #15
 891 0014 1A70     		strb	r2, [r3]
 680:.\Generated_Source\PSoC4/PWM.c **** 
 681:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 892              		.loc 1 681 0
 893 0016 0A4B     		ldr	r3, .L64
 894 0018 094A     		ldr	r2, .L64
 895 001a 1168     		ldr	r1, [r2]
 896 001c 094A     		ldr	r2, .L64+4
 897 001e 0A40     		and	r2, r2, r1
 898 0020 1A60     		str	r2, [r3]
 682:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 899              		.loc 1 682 0
 900 0022 074B     		ldr	r3, .L64
 901 0024 064A     		ldr	r2, .L64
 902 0026 1168     		ldr	r1, [r2]
 903 0028 7A68     		ldr	r2, [r7, #4]
 904 002a 0A43     		orr	r2, r2, r1
 905 002c 1A60     		str	r2, [r3]
 683:.\Generated_Source\PSoC4/PWM.c **** 
 684:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 906              		.loc 1 684 0
 907 002e 3B1C     		mov	r3, r7
 908 0030 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 29


 909 0032 1B78     		ldrb	r3, [r3]
 910 0034 181C     		mov	r0, r3
 911 0036 FFF7FEFF 		bl	CyExitCriticalSection
 685:.\Generated_Source\PSoC4/PWM.c **** }
 912              		.loc 1 685 0
 913 003a BD46     		mov	sp, r7
 914 003c 04B0     		add	sp, sp, #16
 915              		@ sp needed for prologue
 916 003e 80BD     		pop	{r7, pc}
 917              	.L65:
 918              		.align	2
 919              	.L64:
 920 0040 00010540 		.word	1074069760
 921 0044 FFFFFCFF 		.word	-196609
 922              		.cfi_endproc
 923              	.LFE15:
 924              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 925              		.section	.text.PWM_WritePeriod,"ax",%progbits
 926              		.align	2
 927              		.global	PWM_WritePeriod
 928              		.code	16
 929              		.thumb_func
 930              		.type	PWM_WritePeriod, %function
 931              	PWM_WritePeriod:
 932              	.LFB16:
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c **** 
 688:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 689:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 690:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 691:.\Generated_Source\PSoC4/PWM.c **** *
 692:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 693:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 694:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 695:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 698:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Return:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 704:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 705:.\Generated_Source\PSoC4/PWM.c **** {
 933              		.loc 1 705 0
 934              		.cfi_startproc
 935 0000 80B5     		push	{r7, lr}
 936              	.LCFI45:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 7, -8
 939              		.cfi_offset 14, -4
 940 0002 82B0     		sub	sp, sp, #8
 941              	.LCFI46:
 942              		.cfi_def_cfa_offset 16
 943 0004 00AF     		add	r7, sp, #0
 944              	.LCFI47:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 30


 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 947              		.loc 1 706 0
 948 0008 034B     		ldr	r3, .L68
 949 000a 7A68     		ldr	r2, [r7, #4]
 950 000c 1204     		lsl	r2, r2, #16
 951 000e 120C     		lsr	r2, r2, #16
 952 0010 1A60     		str	r2, [r3]
 707:.\Generated_Source\PSoC4/PWM.c **** }
 953              		.loc 1 707 0
 954 0012 BD46     		mov	sp, r7
 955 0014 02B0     		add	sp, sp, #8
 956              		@ sp needed for prologue
 957 0016 80BD     		pop	{r7, pc}
 958              	.L69:
 959              		.align	2
 960              	.L68:
 961 0018 14010540 		.word	1074069780
 962              		.cfi_endproc
 963              	.LFE16:
 964              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 965              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 966              		.align	2
 967              		.global	PWM_ReadPeriod
 968              		.code	16
 969              		.thumb_func
 970              		.type	PWM_ReadPeriod, %function
 971              	PWM_ReadPeriod:
 972              	.LFB17:
 708:.\Generated_Source\PSoC4/PWM.c **** 
 709:.\Generated_Source\PSoC4/PWM.c **** 
 710:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 711:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 712:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 713:.\Generated_Source\PSoC4/PWM.c **** *
 714:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 715:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 718:.\Generated_Source\PSoC4/PWM.c **** *  None
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Return:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 725:.\Generated_Source\PSoC4/PWM.c **** {
 973              		.loc 1 725 0
 974              		.cfi_startproc
 975 0000 80B5     		push	{r7, lr}
 976              	.LCFI48:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 00AF     		add	r7, sp, #0
 981              	.LCFI49:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 31


 982              		.cfi_def_cfa_register 7
 726:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 983              		.loc 1 726 0
 984 0004 034B     		ldr	r3, .L72
 985 0006 1B68     		ldr	r3, [r3]
 986 0008 1B04     		lsl	r3, r3, #16
 987 000a 1B0C     		lsr	r3, r3, #16
 727:.\Generated_Source\PSoC4/PWM.c **** }
 988              		.loc 1 727 0
 989 000c 181C     		mov	r0, r3
 990 000e BD46     		mov	sp, r7
 991              		@ sp needed for prologue
 992 0010 80BD     		pop	{r7, pc}
 993              	.L73:
 994 0012 C046     		.align	2
 995              	.L72:
 996 0014 14010540 		.word	1074069780
 997              		.cfi_endproc
 998              	.LFE17:
 999              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 1000              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 1001              		.align	2
 1002              		.global	PWM_SetCompareSwap
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	PWM_SetCompareSwap, %function
 1006              	PWM_SetCompareSwap:
 1007              	.LFB18:
 728:.\Generated_Source\PSoC4/PWM.c **** 
 729:.\Generated_Source\PSoC4/PWM.c **** 
 730:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 731:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 732:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 733:.\Generated_Source\PSoC4/PWM.c **** *
 734:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 735:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 736:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode(without capture) the swap occurs
 737:.\Generated_Source\PSoC4/PWM.c **** *  at a TC event. In PWM mode the swap occurs at the next TC event following
 738:.\Generated_Source\PSoC4/PWM.c **** *  a hardware switch event.
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 741:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 742:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 743:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 744:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Return:
 747:.\Generated_Source\PSoC4/PWM.c **** *  None
 748:.\Generated_Source\PSoC4/PWM.c **** *
 749:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 750:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 751:.\Generated_Source\PSoC4/PWM.c **** {
 1008              		.loc 1 751 0
 1009              		.cfi_startproc
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI50:
 1012              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 32


 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 84B0     		sub	sp, sp, #16
 1016              	.LCFI51:
 1017              		.cfi_def_cfa_offset 24
 1018 0004 00AF     		add	r7, sp, #0
 1019              	.LCFI52:
 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
 752:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 753:.\Generated_Source\PSoC4/PWM.c **** 
 754:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1022              		.loc 1 754 0
 1023 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1024 000c 031C     		mov	r3, r0
 1025 000e 1A1C     		mov	r2, r3
 1026 0010 3B1C     		mov	r3, r7
 1027 0012 0F33     		add	r3, r3, #15
 1028 0014 1A70     		strb	r2, [r3]
 755:.\Generated_Source\PSoC4/PWM.c **** 
 756:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1029              		.loc 1 756 0
 1030 0016 0B4B     		ldr	r3, .L76
 1031 0018 0A4A     		ldr	r2, .L76
 1032 001a 1268     		ldr	r2, [r2]
 1033 001c 0121     		mov	r1, #1
 1034 001e 8A43     		bic	r2, r2, r1
 1035 0020 1A60     		str	r2, [r3]
 757:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1036              		.loc 1 757 0
 1037 0022 084B     		ldr	r3, .L76
 1038 0024 074A     		ldr	r2, .L76
 1039 0026 1168     		ldr	r1, [r2]
 1040 0028 7868     		ldr	r0, [r7, #4]
 1041 002a 0122     		mov	r2, #1
 1042 002c 0240     		and	r2, r2, r0
 1043 002e 0A43     		orr	r2, r2, r1
 1044 0030 1A60     		str	r2, [r3]
 758:.\Generated_Source\PSoC4/PWM.c **** 
 759:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1045              		.loc 1 759 0
 1046 0032 3B1C     		mov	r3, r7
 1047 0034 0F33     		add	r3, r3, #15
 1048 0036 1B78     		ldrb	r3, [r3]
 1049 0038 181C     		mov	r0, r3
 1050 003a FFF7FEFF 		bl	CyExitCriticalSection
 760:.\Generated_Source\PSoC4/PWM.c **** }
 1051              		.loc 1 760 0
 1052 003e BD46     		mov	sp, r7
 1053 0040 04B0     		add	sp, sp, #16
 1054              		@ sp needed for prologue
 1055 0042 80BD     		pop	{r7, pc}
 1056              	.L77:
 1057              		.align	2
 1058              	.L76:
 1059 0044 00010540 		.word	1074069760
 1060              		.cfi_endproc
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 33


 1061              	.LFE18:
 1062              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1063              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1064              		.align	2
 1065              		.global	PWM_WritePeriodBuf
 1066              		.code	16
 1067              		.thumb_func
 1068              		.type	PWM_WritePeriodBuf, %function
 1069              	PWM_WritePeriodBuf:
 1070              	.LFB19:
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c **** 
 763:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 765:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 766:.\Generated_Source\PSoC4/PWM.c **** *
 767:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 768:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 771:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Return:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 777:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 778:.\Generated_Source\PSoC4/PWM.c **** {
 1071              		.loc 1 778 0
 1072              		.cfi_startproc
 1073 0000 80B5     		push	{r7, lr}
 1074              	.LCFI53:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 82B0     		sub	sp, sp, #8
 1079              	.LCFI54:
 1080              		.cfi_def_cfa_offset 16
 1081 0004 00AF     		add	r7, sp, #0
 1082              	.LCFI55:
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 779:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1085              		.loc 1 779 0
 1086 0008 034B     		ldr	r3, .L80
 1087 000a 7A68     		ldr	r2, [r7, #4]
 1088 000c 1204     		lsl	r2, r2, #16
 1089 000e 120C     		lsr	r2, r2, #16
 1090 0010 1A60     		str	r2, [r3]
 780:.\Generated_Source\PSoC4/PWM.c **** }
 1091              		.loc 1 780 0
 1092 0012 BD46     		mov	sp, r7
 1093 0014 02B0     		add	sp, sp, #8
 1094              		@ sp needed for prologue
 1095 0016 80BD     		pop	{r7, pc}
 1096              	.L81:
 1097              		.align	2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 34


 1098              	.L80:
 1099 0018 18010540 		.word	1074069784
 1100              		.cfi_endproc
 1101              	.LFE19:
 1102              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1103              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1104              		.align	2
 1105              		.global	PWM_ReadPeriodBuf
 1106              		.code	16
 1107              		.thumb_func
 1108              		.type	PWM_ReadPeriodBuf, %function
 1109              	PWM_ReadPeriodBuf:
 1110              	.LFB20:
 781:.\Generated_Source\PSoC4/PWM.c **** 
 782:.\Generated_Source\PSoC4/PWM.c **** 
 783:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 784:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 785:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 786:.\Generated_Source\PSoC4/PWM.c **** *
 787:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 788:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 791:.\Generated_Source\PSoC4/PWM.c **** *  None
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Return:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 798:.\Generated_Source\PSoC4/PWM.c **** {
 1111              		.loc 1 798 0
 1112              		.cfi_startproc
 1113 0000 80B5     		push	{r7, lr}
 1114              	.LCFI56:
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 00AF     		add	r7, sp, #0
 1119              	.LCFI57:
 1120              		.cfi_def_cfa_register 7
 799:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1121              		.loc 1 799 0
 1122 0004 034B     		ldr	r3, .L84
 1123 0006 1B68     		ldr	r3, [r3]
 1124 0008 1B04     		lsl	r3, r3, #16
 1125 000a 1B0C     		lsr	r3, r3, #16
 800:.\Generated_Source\PSoC4/PWM.c **** }
 1126              		.loc 1 800 0
 1127 000c 181C     		mov	r0, r3
 1128 000e BD46     		mov	sp, r7
 1129              		@ sp needed for prologue
 1130 0010 80BD     		pop	{r7, pc}
 1131              	.L85:
 1132 0012 C046     		.align	2
 1133              	.L84:
 1134 0014 18010540 		.word	1074069784
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 35


 1135              		.cfi_endproc
 1136              	.LFE20:
 1137              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1138              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1139              		.align	2
 1140              		.global	PWM_SetPeriodSwap
 1141              		.code	16
 1142              		.thumb_func
 1143              		.type	PWM_SetPeriodSwap, %function
 1144              	PWM_SetPeriodSwap:
 1145              	.LFB21:
 801:.\Generated_Source\PSoC4/PWM.c **** 
 802:.\Generated_Source\PSoC4/PWM.c **** 
 803:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 805:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/PWM.c **** *
 807:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 808:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 809:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 810:.\Generated_Source\PSoC4/PWM.c **** *  In PWM mode the swap occurs at the next TC event following a hardware switch
 811:.\Generated_Source\PSoC4/PWM.c **** *  event.
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 814:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 815:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 816:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 817:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Return:
 820:.\Generated_Source\PSoC4/PWM.c **** *  None
 821:.\Generated_Source\PSoC4/PWM.c **** *
 822:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 824:.\Generated_Source\PSoC4/PWM.c **** {
 1146              		.loc 1 824 0
 1147              		.cfi_startproc
 1148 0000 80B5     		push	{r7, lr}
 1149              	.LCFI58:
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 84B0     		sub	sp, sp, #16
 1154              	.LCFI59:
 1155              		.cfi_def_cfa_offset 24
 1156 0004 00AF     		add	r7, sp, #0
 1157              	.LCFI60:
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
 825:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 826:.\Generated_Source\PSoC4/PWM.c **** 
 827:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1160              		.loc 1 827 0
 1161 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1162 000c 031C     		mov	r3, r0
 1163 000e 1A1C     		mov	r2, r3
 1164 0010 3B1C     		mov	r3, r7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 36


 1165 0012 0F33     		add	r3, r3, #15
 1166 0014 1A70     		strb	r2, [r3]
 828:.\Generated_Source\PSoC4/PWM.c **** 
 829:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1167              		.loc 1 829 0
 1168 0016 0C4B     		ldr	r3, .L88
 1169 0018 0B4A     		ldr	r2, .L88
 1170 001a 1268     		ldr	r2, [r2]
 1171 001c 0221     		mov	r1, #2
 1172 001e 8A43     		bic	r2, r2, r1
 1173 0020 1A60     		str	r2, [r3]
 830:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1174              		.loc 1 830 0
 1175 0022 094B     		ldr	r3, .L88
 1176 0024 084A     		ldr	r2, .L88
 1177 0026 1168     		ldr	r1, [r2]
 1178 0028 7868     		ldr	r0, [r7, #4]
 1179 002a 0122     		mov	r2, #1
 1180 002c 0240     		and	r2, r2, r0
 1181 002e 5200     		lsl	r2, r2, #1
 1182 0030 0A43     		orr	r2, r2, r1
 1183 0032 1A60     		str	r2, [r3]
 831:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 832:.\Generated_Source\PSoC4/PWM.c **** 
 833:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1184              		.loc 1 833 0
 1185 0034 3B1C     		mov	r3, r7
 1186 0036 0F33     		add	r3, r3, #15
 1187 0038 1B78     		ldrb	r3, [r3]
 1188 003a 181C     		mov	r0, r3
 1189 003c FFF7FEFF 		bl	CyExitCriticalSection
 834:.\Generated_Source\PSoC4/PWM.c **** }
 1190              		.loc 1 834 0
 1191 0040 BD46     		mov	sp, r7
 1192 0042 04B0     		add	sp, sp, #16
 1193              		@ sp needed for prologue
 1194 0044 80BD     		pop	{r7, pc}
 1195              	.L89:
 1196 0046 C046     		.align	2
 1197              	.L88:
 1198 0048 00010540 		.word	1074069760
 1199              		.cfi_endproc
 1200              	.LFE21:
 1201              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1202              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1203              		.align	2
 1204              		.global	PWM_WriteCompare
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	PWM_WriteCompare, %function
 1208              	PWM_WriteCompare:
 1209              	.LFB22:
 835:.\Generated_Source\PSoC4/PWM.c **** 
 836:.\Generated_Source\PSoC4/PWM.c **** 
 837:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 838:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 839:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 37


 840:.\Generated_Source\PSoC4/PWM.c **** *
 841:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 842:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 843:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 844:.\Generated_Source\PSoC4/PWM.c **** *
 845:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 846:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 847:.\Generated_Source\PSoC4/PWM.c **** *
 848:.\Generated_Source\PSoC4/PWM.c **** * Return:
 849:.\Generated_Source\PSoC4/PWM.c **** *  None
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 853:.\Generated_Source\PSoC4/PWM.c **** {
 1210              		.loc 1 853 0
 1211              		.cfi_startproc
 1212 0000 80B5     		push	{r7, lr}
 1213              	.LCFI61:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 82B0     		sub	sp, sp, #8
 1218              	.LCFI62:
 1219              		.cfi_def_cfa_offset 16
 1220 0004 00AF     		add	r7, sp, #0
 1221              	.LCFI63:
 1222              		.cfi_def_cfa_register 7
 1223 0006 7860     		str	r0, [r7, #4]
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1224              		.loc 1 854 0
 1225 0008 034B     		ldr	r3, .L92
 1226 000a 7A68     		ldr	r2, [r7, #4]
 1227 000c 1204     		lsl	r2, r2, #16
 1228 000e 120C     		lsr	r2, r2, #16
 1229 0010 1A60     		str	r2, [r3]
 855:.\Generated_Source\PSoC4/PWM.c **** }
 1230              		.loc 1 855 0
 1231 0012 BD46     		mov	sp, r7
 1232 0014 02B0     		add	sp, sp, #8
 1233              		@ sp needed for prologue
 1234 0016 80BD     		pop	{r7, pc}
 1235              	.L93:
 1236              		.align	2
 1237              	.L92:
 1238 0018 0C010540 		.word	1074069772
 1239              		.cfi_endproc
 1240              	.LFE22:
 1241              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1242              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_ReadCompare
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_ReadCompare, %function
 1248              	PWM_ReadCompare:
 1249              	.LFB23:
 856:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 38


 857:.\Generated_Source\PSoC4/PWM.c **** 
 858:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 860:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 861:.\Generated_Source\PSoC4/PWM.c **** *
 862:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 863:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 864:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 865:.\Generated_Source\PSoC4/PWM.c **** *
 866:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 867:.\Generated_Source\PSoC4/PWM.c **** *  None
 868:.\Generated_Source\PSoC4/PWM.c **** *
 869:.\Generated_Source\PSoC4/PWM.c **** * Return:
 870:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 871:.\Generated_Source\PSoC4/PWM.c **** *
 872:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 874:.\Generated_Source\PSoC4/PWM.c **** {
 1250              		.loc 1 874 0
 1251              		.cfi_startproc
 1252 0000 80B5     		push	{r7, lr}
 1253              	.LCFI64:
 1254              		.cfi_def_cfa_offset 8
 1255              		.cfi_offset 7, -8
 1256              		.cfi_offset 14, -4
 1257 0002 00AF     		add	r7, sp, #0
 1258              	.LCFI65:
 1259              		.cfi_def_cfa_register 7
 875:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1260              		.loc 1 875 0
 1261 0004 034B     		ldr	r3, .L96
 1262 0006 1B68     		ldr	r3, [r3]
 1263 0008 1B04     		lsl	r3, r3, #16
 1264 000a 1B0C     		lsr	r3, r3, #16
 876:.\Generated_Source\PSoC4/PWM.c **** }
 1265              		.loc 1 876 0
 1266 000c 181C     		mov	r0, r3
 1267 000e BD46     		mov	sp, r7
 1268              		@ sp needed for prologue
 1269 0010 80BD     		pop	{r7, pc}
 1270              	.L97:
 1271 0012 C046     		.align	2
 1272              	.L96:
 1273 0014 0C010540 		.word	1074069772
 1274              		.cfi_endproc
 1275              	.LFE23:
 1276              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1277              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1278              		.align	2
 1279              		.global	PWM_WriteCompareBuf
 1280              		.code	16
 1281              		.thumb_func
 1282              		.type	PWM_WriteCompareBuf, %function
 1283              	PWM_WriteCompareBuf:
 1284              	.LFB24:
 877:.\Generated_Source\PSoC4/PWM.c **** 
 878:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 39


 879:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 881:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/PWM.c **** *
 883:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 884:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 885:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 886:.\Generated_Source\PSoC4/PWM.c **** *
 887:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 888:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 889:.\Generated_Source\PSoC4/PWM.c **** *
 890:.\Generated_Source\PSoC4/PWM.c **** * Return:
 891:.\Generated_Source\PSoC4/PWM.c **** *  None
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 894:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 895:.\Generated_Source\PSoC4/PWM.c **** {
 1285              		.loc 1 895 0
 1286              		.cfi_startproc
 1287 0000 80B5     		push	{r7, lr}
 1288              	.LCFI66:
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 7, -8
 1291              		.cfi_offset 14, -4
 1292 0002 82B0     		sub	sp, sp, #8
 1293              	.LCFI67:
 1294              		.cfi_def_cfa_offset 16
 1295 0004 00AF     		add	r7, sp, #0
 1296              	.LCFI68:
 1297              		.cfi_def_cfa_register 7
 1298 0006 7860     		str	r0, [r7, #4]
 896:.\Generated_Source\PSoC4/PWM.c ****    PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1299              		.loc 1 896 0
 1300 0008 034B     		ldr	r3, .L100
 1301 000a 7A68     		ldr	r2, [r7, #4]
 1302 000c 1204     		lsl	r2, r2, #16
 1303 000e 120C     		lsr	r2, r2, #16
 1304 0010 1A60     		str	r2, [r3]
 897:.\Generated_Source\PSoC4/PWM.c **** }
 1305              		.loc 1 897 0
 1306 0012 BD46     		mov	sp, r7
 1307 0014 02B0     		add	sp, sp, #8
 1308              		@ sp needed for prologue
 1309 0016 80BD     		pop	{r7, pc}
 1310              	.L101:
 1311              		.align	2
 1312              	.L100:
 1313 0018 10010540 		.word	1074069776
 1314              		.cfi_endproc
 1315              	.LFE24:
 1316              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1317              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1318              		.align	2
 1319              		.global	PWM_ReadCompareBuf
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	PWM_ReadCompareBuf, %function
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 40


 1323              	PWM_ReadCompareBuf:
 1324              	.LFB25:
 898:.\Generated_Source\PSoC4/PWM.c **** 
 899:.\Generated_Source\PSoC4/PWM.c **** 
 900:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 901:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 902:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 903:.\Generated_Source\PSoC4/PWM.c **** *
 904:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 905:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 906:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 907:.\Generated_Source\PSoC4/PWM.c **** *
 908:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 909:.\Generated_Source\PSoC4/PWM.c **** *  None
 910:.\Generated_Source\PSoC4/PWM.c **** *
 911:.\Generated_Source\PSoC4/PWM.c **** * Return:
 912:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 913:.\Generated_Source\PSoC4/PWM.c **** *
 914:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 915:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 916:.\Generated_Source\PSoC4/PWM.c **** {
 1325              		.loc 1 916 0
 1326              		.cfi_startproc
 1327 0000 80B5     		push	{r7, lr}
 1328              	.LCFI69:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              	.LCFI70:
 1334              		.cfi_def_cfa_register 7
 917:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1335              		.loc 1 917 0
 1336 0004 034B     		ldr	r3, .L104
 1337 0006 1B68     		ldr	r3, [r3]
 1338 0008 1B04     		lsl	r3, r3, #16
 1339 000a 1B0C     		lsr	r3, r3, #16
 918:.\Generated_Source\PSoC4/PWM.c **** }
 1340              		.loc 1 918 0
 1341 000c 181C     		mov	r0, r3
 1342 000e BD46     		mov	sp, r7
 1343              		@ sp needed for prologue
 1344 0010 80BD     		pop	{r7, pc}
 1345              	.L105:
 1346 0012 C046     		.align	2
 1347              	.L104:
 1348 0014 10010540 		.word	1074069776
 1349              		.cfi_endproc
 1350              	.LFE25:
 1351              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1352              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1353              		.align	2
 1354              		.global	PWM_ReadCapture
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	PWM_ReadCapture, %function
 1358              	PWM_ReadCapture:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 41


 1359              	.LFB26:
 919:.\Generated_Source\PSoC4/PWM.c **** 
 920:.\Generated_Source\PSoC4/PWM.c **** 
 921:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 922:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 923:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 924:.\Generated_Source\PSoC4/PWM.c **** *
 925:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 926:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
 927:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 928:.\Generated_Source\PSoC4/PWM.c **** *
 929:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 930:.\Generated_Source\PSoC4/PWM.c **** *  None
 931:.\Generated_Source\PSoC4/PWM.c **** *
 932:.\Generated_Source\PSoC4/PWM.c **** * Return:
 933:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
 934:.\Generated_Source\PSoC4/PWM.c **** *
 935:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 936:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
 937:.\Generated_Source\PSoC4/PWM.c **** {
 1360              		.loc 1 937 0
 1361              		.cfi_startproc
 1362 0000 80B5     		push	{r7, lr}
 1363              	.LCFI71:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 00AF     		add	r7, sp, #0
 1368              	.LCFI72:
 1369              		.cfi_def_cfa_register 7
 938:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1370              		.loc 1 938 0
 1371 0004 034B     		ldr	r3, .L108
 1372 0006 1B68     		ldr	r3, [r3]
 1373 0008 1B04     		lsl	r3, r3, #16
 1374 000a 1B0C     		lsr	r3, r3, #16
 939:.\Generated_Source\PSoC4/PWM.c **** }
 1375              		.loc 1 939 0
 1376 000c 181C     		mov	r0, r3
 1377 000e BD46     		mov	sp, r7
 1378              		@ sp needed for prologue
 1379 0010 80BD     		pop	{r7, pc}
 1380              	.L109:
 1381 0012 C046     		.align	2
 1382              	.L108:
 1383 0014 0C010540 		.word	1074069772
 1384              		.cfi_endproc
 1385              	.LFE26:
 1386              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1387              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1388              		.align	2
 1389              		.global	PWM_ReadCaptureBuf
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	PWM_ReadCaptureBuf, %function
 1393              	PWM_ReadCaptureBuf:
 1394              	.LFB27:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 42


 940:.\Generated_Source\PSoC4/PWM.c **** 
 941:.\Generated_Source\PSoC4/PWM.c **** 
 942:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 943:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
 944:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 945:.\Generated_Source\PSoC4/PWM.c **** *
 946:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 947:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
 948:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 949:.\Generated_Source\PSoC4/PWM.c **** *
 950:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 951:.\Generated_Source\PSoC4/PWM.c **** *  None
 952:.\Generated_Source\PSoC4/PWM.c **** *
 953:.\Generated_Source\PSoC4/PWM.c **** * Return:
 954:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
 955:.\Generated_Source\PSoC4/PWM.c **** *
 956:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 957:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
 958:.\Generated_Source\PSoC4/PWM.c **** {
 1395              		.loc 1 958 0
 1396              		.cfi_startproc
 1397 0000 80B5     		push	{r7, lr}
 1398              	.LCFI73:
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 00AF     		add	r7, sp, #0
 1403              	.LCFI74:
 1404              		.cfi_def_cfa_register 7
 959:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1405              		.loc 1 959 0
 1406 0004 034B     		ldr	r3, .L112
 1407 0006 1B68     		ldr	r3, [r3]
 1408 0008 1B04     		lsl	r3, r3, #16
 1409 000a 1B0C     		lsr	r3, r3, #16
 960:.\Generated_Source\PSoC4/PWM.c **** }
 1410              		.loc 1 960 0
 1411 000c 181C     		mov	r0, r3
 1412 000e BD46     		mov	sp, r7
 1413              		@ sp needed for prologue
 1414 0010 80BD     		pop	{r7, pc}
 1415              	.L113:
 1416 0012 C046     		.align	2
 1417              	.L112:
 1418 0014 10010540 		.word	1074069776
 1419              		.cfi_endproc
 1420              	.LFE27:
 1421              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1422              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1423              		.align	2
 1424              		.global	PWM_SetCaptureMode
 1425              		.code	16
 1426              		.thumb_func
 1427              		.type	PWM_SetCaptureMode, %function
 1428              	PWM_SetCaptureMode:
 1429              	.LFB28:
 961:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 43


 962:.\Generated_Source\PSoC4/PWM.c **** 
 963:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 964:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
 965:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 966:.\Generated_Source\PSoC4/PWM.c **** *
 967:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 968:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
 969:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
 970:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
 971:.\Generated_Source\PSoC4/PWM.c **** *
 972:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 973:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
 974:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 975:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
 976:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
 977:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
 978:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
 979:.\Generated_Source\PSoC4/PWM.c **** *
 980:.\Generated_Source\PSoC4/PWM.c **** * Return:
 981:.\Generated_Source\PSoC4/PWM.c **** *  None
 982:.\Generated_Source\PSoC4/PWM.c **** *
 983:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 984:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
 985:.\Generated_Source\PSoC4/PWM.c **** {
 1430              		.loc 1 985 0
 1431              		.cfi_startproc
 1432 0000 80B5     		push	{r7, lr}
 1433              	.LCFI75:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 7, -8
 1436              		.cfi_offset 14, -4
 1437 0002 84B0     		sub	sp, sp, #16
 1438              	.LCFI76:
 1439              		.cfi_def_cfa_offset 24
 1440 0004 00AF     		add	r7, sp, #0
 1441              	.LCFI77:
 1442              		.cfi_def_cfa_register 7
 1443 0006 7860     		str	r0, [r7, #4]
 986:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 987:.\Generated_Source\PSoC4/PWM.c **** 
 988:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1444              		.loc 1 988 0
 1445 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1446 000c 031C     		mov	r3, r0
 1447 000e 1A1C     		mov	r2, r3
 1448 0010 3B1C     		mov	r3, r7
 1449 0012 0F33     		add	r3, r3, #15
 1450 0014 1A70     		strb	r2, [r3]
 989:.\Generated_Source\PSoC4/PWM.c **** 
 990:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1451              		.loc 1 990 0
 1452 0016 0A4B     		ldr	r3, .L116
 1453 0018 094A     		ldr	r2, .L116
 1454 001a 1268     		ldr	r2, [r2]
 1455 001c 0321     		mov	r1, #3
 1456 001e 8A43     		bic	r2, r2, r1
 1457 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 44


 991:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1458              		.loc 1 991 0
 1459 0022 074B     		ldr	r3, .L116
 1460 0024 064A     		ldr	r2, .L116
 1461 0026 1168     		ldr	r1, [r2]
 1462 0028 7A68     		ldr	r2, [r7, #4]
 1463 002a 0A43     		orr	r2, r2, r1
 1464 002c 1A60     		str	r2, [r3]
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1465              		.loc 1 993 0
 1466 002e 3B1C     		mov	r3, r7
 1467 0030 0F33     		add	r3, r3, #15
 1468 0032 1B78     		ldrb	r3, [r3]
 1469 0034 181C     		mov	r0, r3
 1470 0036 FFF7FEFF 		bl	CyExitCriticalSection
 994:.\Generated_Source\PSoC4/PWM.c **** }
 1471              		.loc 1 994 0
 1472 003a BD46     		mov	sp, r7
 1473 003c 04B0     		add	sp, sp, #16
 1474              		@ sp needed for prologue
 1475 003e 80BD     		pop	{r7, pc}
 1476              	.L117:
 1477              		.align	2
 1478              	.L116:
 1479 0040 24010540 		.word	1074069796
 1480              		.cfi_endproc
 1481              	.LFE28:
 1482              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1483              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1484              		.align	2
 1485              		.global	PWM_SetReloadMode
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	PWM_SetReloadMode, %function
 1489              	PWM_SetReloadMode:
 1490              	.LFB29:
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** 
 997:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 998:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
 999:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1000:.\Generated_Source\PSoC4/PWM.c **** *
1001:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1002:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1003:.\Generated_Source\PSoC4/PWM.c **** *  input.
1004:.\Generated_Source\PSoC4/PWM.c **** *
1005:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1006:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1007:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1008:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1009:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1010:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1011:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1012:.\Generated_Source\PSoC4/PWM.c **** *
1013:.\Generated_Source\PSoC4/PWM.c **** * Return:
1014:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 45


1015:.\Generated_Source\PSoC4/PWM.c **** *
1016:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1017:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1018:.\Generated_Source\PSoC4/PWM.c **** {
 1491              		.loc 1 1018 0
 1492              		.cfi_startproc
 1493 0000 80B5     		push	{r7, lr}
 1494              	.LCFI78:
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 84B0     		sub	sp, sp, #16
 1499              	.LCFI79:
 1500              		.cfi_def_cfa_offset 24
 1501 0004 00AF     		add	r7, sp, #0
 1502              	.LCFI80:
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
1019:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1020:.\Generated_Source\PSoC4/PWM.c **** 
1021:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1505              		.loc 1 1021 0
 1506 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1507 000c 031C     		mov	r3, r0
 1508 000e 1A1C     		mov	r2, r3
 1509 0010 3B1C     		mov	r3, r7
 1510 0012 0F33     		add	r3, r3, #15
 1511 0014 1A70     		strb	r2, [r3]
1022:.\Generated_Source\PSoC4/PWM.c **** 
1023:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1512              		.loc 1 1023 0
 1513 0016 0B4B     		ldr	r3, .L120
 1514 0018 0A4A     		ldr	r2, .L120
 1515 001a 1268     		ldr	r2, [r2]
 1516 001c 3021     		mov	r1, #48
 1517 001e 8A43     		bic	r2, r2, r1
 1518 0020 1A60     		str	r2, [r3]
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1519              		.loc 1 1024 0
 1520 0022 084B     		ldr	r3, .L120
 1521 0024 074A     		ldr	r2, .L120
 1522 0026 1168     		ldr	r1, [r2]
 1523 0028 7A68     		ldr	r2, [r7, #4]
 1524 002a 1201     		lsl	r2, r2, #4
 1525 002c 0A43     		orr	r2, r2, r1
 1526 002e 1A60     		str	r2, [r3]
1025:.\Generated_Source\PSoC4/PWM.c **** 
1026:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1527              		.loc 1 1026 0
 1528 0030 3B1C     		mov	r3, r7
 1529 0032 0F33     		add	r3, r3, #15
 1530 0034 1B78     		ldrb	r3, [r3]
 1531 0036 181C     		mov	r0, r3
 1532 0038 FFF7FEFF 		bl	CyExitCriticalSection
1027:.\Generated_Source\PSoC4/PWM.c **** }
 1533              		.loc 1 1027 0
 1534 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 46


 1535 003e 04B0     		add	sp, sp, #16
 1536              		@ sp needed for prologue
 1537 0040 80BD     		pop	{r7, pc}
 1538              	.L121:
 1539 0042 C046     		.align	2
 1540              	.L120:
 1541 0044 24010540 		.word	1074069796
 1542              		.cfi_endproc
 1543              	.LFE29:
 1544              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1545              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1546              		.align	2
 1547              		.global	PWM_SetStartMode
 1548              		.code	16
 1549              		.thumb_func
 1550              		.type	PWM_SetStartMode, %function
 1551              	PWM_SetStartMode:
 1552              	.LFB30:
1028:.\Generated_Source\PSoC4/PWM.c **** 
1029:.\Generated_Source\PSoC4/PWM.c **** 
1030:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1031:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1032:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1033:.\Generated_Source\PSoC4/PWM.c **** *
1034:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1035:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1036:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1037:.\Generated_Source\PSoC4/PWM.c **** *
1038:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1039:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1040:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1041:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1042:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1043:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1044:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1045:.\Generated_Source\PSoC4/PWM.c **** *
1046:.\Generated_Source\PSoC4/PWM.c **** * Return:
1047:.\Generated_Source\PSoC4/PWM.c **** *  None
1048:.\Generated_Source\PSoC4/PWM.c **** *
1049:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1050:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1051:.\Generated_Source\PSoC4/PWM.c **** {
 1553              		.loc 1 1051 0
 1554              		.cfi_startproc
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI81:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 84B0     		sub	sp, sp, #16
 1561              	.LCFI82:
 1562              		.cfi_def_cfa_offset 24
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI83:
 1565              		.cfi_def_cfa_register 7
 1566 0006 7860     		str	r0, [r7, #4]
1052:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 47


1053:.\Generated_Source\PSoC4/PWM.c **** 
1054:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1567              		.loc 1 1054 0
 1568 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1569 000c 031C     		mov	r3, r0
 1570 000e 1A1C     		mov	r2, r3
 1571 0010 3B1C     		mov	r3, r7
 1572 0012 0F33     		add	r3, r3, #15
 1573 0014 1A70     		strb	r2, [r3]
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1574              		.loc 1 1056 0
 1575 0016 0B4B     		ldr	r3, .L124
 1576 0018 0A4A     		ldr	r2, .L124
 1577 001a 1168     		ldr	r1, [r2]
 1578 001c 0A4A     		ldr	r2, .L124+4
 1579 001e 0A40     		and	r2, r2, r1
 1580 0020 1A60     		str	r2, [r3]
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1581              		.loc 1 1057 0
 1582 0022 084B     		ldr	r3, .L124
 1583 0024 074A     		ldr	r2, .L124
 1584 0026 1168     		ldr	r1, [r2]
 1585 0028 7A68     		ldr	r2, [r7, #4]
 1586 002a 1202     		lsl	r2, r2, #8
 1587 002c 0A43     		orr	r2, r2, r1
 1588 002e 1A60     		str	r2, [r3]
1058:.\Generated_Source\PSoC4/PWM.c **** 
1059:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1589              		.loc 1 1059 0
 1590 0030 3B1C     		mov	r3, r7
 1591 0032 0F33     		add	r3, r3, #15
 1592 0034 1B78     		ldrb	r3, [r3]
 1593 0036 181C     		mov	r0, r3
 1594 0038 FFF7FEFF 		bl	CyExitCriticalSection
1060:.\Generated_Source\PSoC4/PWM.c **** }
 1595              		.loc 1 1060 0
 1596 003c BD46     		mov	sp, r7
 1597 003e 04B0     		add	sp, sp, #16
 1598              		@ sp needed for prologue
 1599 0040 80BD     		pop	{r7, pc}
 1600              	.L125:
 1601 0042 C046     		.align	2
 1602              	.L124:
 1603 0044 24010540 		.word	1074069796
 1604 0048 FFFCFFFF 		.word	-769
 1605              		.cfi_endproc
 1606              	.LFE30:
 1607              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1608              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1609              		.align	2
 1610              		.global	PWM_SetStopMode
 1611              		.code	16
 1612              		.thumb_func
 1613              		.type	PWM_SetStopMode, %function
 1614              	PWM_SetStopMode:
 1615              	.LFB31:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 48


1061:.\Generated_Source\PSoC4/PWM.c **** 
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1064:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1065:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1066:.\Generated_Source\PSoC4/PWM.c **** *
1067:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1068:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1069:.\Generated_Source\PSoC4/PWM.c **** *
1070:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1071:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1072:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1073:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1074:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1075:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1076:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1077:.\Generated_Source\PSoC4/PWM.c **** *
1078:.\Generated_Source\PSoC4/PWM.c **** * Return:
1079:.\Generated_Source\PSoC4/PWM.c **** *  None
1080:.\Generated_Source\PSoC4/PWM.c **** *
1081:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1082:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1083:.\Generated_Source\PSoC4/PWM.c **** {
 1616              		.loc 1 1083 0
 1617              		.cfi_startproc
 1618 0000 80B5     		push	{r7, lr}
 1619              	.LCFI84:
 1620              		.cfi_def_cfa_offset 8
 1621              		.cfi_offset 7, -8
 1622              		.cfi_offset 14, -4
 1623 0002 84B0     		sub	sp, sp, #16
 1624              	.LCFI85:
 1625              		.cfi_def_cfa_offset 24
 1626 0004 00AF     		add	r7, sp, #0
 1627              	.LCFI86:
 1628              		.cfi_def_cfa_register 7
 1629 0006 7860     		str	r0, [r7, #4]
1084:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1085:.\Generated_Source\PSoC4/PWM.c **** 
1086:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1630              		.loc 1 1086 0
 1631 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1632 000c 031C     		mov	r3, r0
 1633 000e 1A1C     		mov	r2, r3
 1634 0010 3B1C     		mov	r3, r7
 1635 0012 0F33     		add	r3, r3, #15
 1636 0014 1A70     		strb	r2, [r3]
1087:.\Generated_Source\PSoC4/PWM.c **** 
1088:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1637              		.loc 1 1088 0
 1638 0016 0B4B     		ldr	r3, .L128
 1639 0018 0A4A     		ldr	r2, .L128
 1640 001a 1268     		ldr	r2, [r2]
 1641 001c C021     		mov	r1, #192
 1642 001e 8A43     		bic	r2, r2, r1
 1643 0020 1A60     		str	r2, [r3]
1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 49


 1644              		.loc 1 1089 0
 1645 0022 084B     		ldr	r3, .L128
 1646 0024 074A     		ldr	r2, .L128
 1647 0026 1168     		ldr	r1, [r2]
 1648 0028 7A68     		ldr	r2, [r7, #4]
 1649 002a 9201     		lsl	r2, r2, #6
 1650 002c 0A43     		orr	r2, r2, r1
 1651 002e 1A60     		str	r2, [r3]
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1652              		.loc 1 1091 0
 1653 0030 3B1C     		mov	r3, r7
 1654 0032 0F33     		add	r3, r3, #15
 1655 0034 1B78     		ldrb	r3, [r3]
 1656 0036 181C     		mov	r0, r3
 1657 0038 FFF7FEFF 		bl	CyExitCriticalSection
1092:.\Generated_Source\PSoC4/PWM.c **** }
 1658              		.loc 1 1092 0
 1659 003c BD46     		mov	sp, r7
 1660 003e 04B0     		add	sp, sp, #16
 1661              		@ sp needed for prologue
 1662 0040 80BD     		pop	{r7, pc}
 1663              	.L129:
 1664 0042 C046     		.align	2
 1665              	.L128:
 1666 0044 24010540 		.word	1074069796
 1667              		.cfi_endproc
 1668              	.LFE31:
 1669              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1670              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1671              		.align	2
 1672              		.global	PWM_SetCountMode
 1673              		.code	16
 1674              		.thumb_func
 1675              		.type	PWM_SetCountMode, %function
 1676              	PWM_SetCountMode:
 1677              	.LFB32:
1093:.\Generated_Source\PSoC4/PWM.c **** 
1094:.\Generated_Source\PSoC4/PWM.c **** 
1095:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1096:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1097:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1100:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1101:.\Generated_Source\PSoC4/PWM.c **** *  input.
1102:.\Generated_Source\PSoC4/PWM.c **** *
1103:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1104:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1105:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1106:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1107:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1108:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1109:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1110:.\Generated_Source\PSoC4/PWM.c **** *
1111:.\Generated_Source\PSoC4/PWM.c **** * Return:
1112:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 50


1113:.\Generated_Source\PSoC4/PWM.c **** *
1114:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1116:.\Generated_Source\PSoC4/PWM.c **** {
 1678              		.loc 1 1116 0
 1679              		.cfi_startproc
 1680 0000 80B5     		push	{r7, lr}
 1681              	.LCFI87:
 1682              		.cfi_def_cfa_offset 8
 1683              		.cfi_offset 7, -8
 1684              		.cfi_offset 14, -4
 1685 0002 84B0     		sub	sp, sp, #16
 1686              	.LCFI88:
 1687              		.cfi_def_cfa_offset 24
 1688 0004 00AF     		add	r7, sp, #0
 1689              	.LCFI89:
 1690              		.cfi_def_cfa_register 7
 1691 0006 7860     		str	r0, [r7, #4]
1117:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1118:.\Generated_Source\PSoC4/PWM.c **** 
1119:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1692              		.loc 1 1119 0
 1693 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1694 000c 031C     		mov	r3, r0
 1695 000e 1A1C     		mov	r2, r3
 1696 0010 3B1C     		mov	r3, r7
 1697 0012 0F33     		add	r3, r3, #15
 1698 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/PWM.c **** 
1121:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1699              		.loc 1 1121 0
 1700 0016 0B4B     		ldr	r3, .L132
 1701 0018 0A4A     		ldr	r2, .L132
 1702 001a 1268     		ldr	r2, [r2]
 1703 001c 0C21     		mov	r1, #12
 1704 001e 8A43     		bic	r2, r2, r1
 1705 0020 1A60     		str	r2, [r3]
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1706              		.loc 1 1122 0
 1707 0022 084B     		ldr	r3, .L132
 1708 0024 074A     		ldr	r2, .L132
 1709 0026 1168     		ldr	r1, [r2]
 1710 0028 7A68     		ldr	r2, [r7, #4]
 1711 002a 9200     		lsl	r2, r2, #2
 1712 002c 0A43     		orr	r2, r2, r1
 1713 002e 1A60     		str	r2, [r3]
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1714              		.loc 1 1124 0
 1715 0030 3B1C     		mov	r3, r7
 1716 0032 0F33     		add	r3, r3, #15
 1717 0034 1B78     		ldrb	r3, [r3]
 1718 0036 181C     		mov	r0, r3
 1719 0038 FFF7FEFF 		bl	CyExitCriticalSection
1125:.\Generated_Source\PSoC4/PWM.c **** }
 1720              		.loc 1 1125 0
 1721 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 51


 1722 003e 04B0     		add	sp, sp, #16
 1723              		@ sp needed for prologue
 1724 0040 80BD     		pop	{r7, pc}
 1725              	.L133:
 1726 0042 C046     		.align	2
 1727              	.L132:
 1728 0044 24010540 		.word	1074069796
 1729              		.cfi_endproc
 1730              	.LFE32:
 1731              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1732              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1733              		.align	2
 1734              		.global	PWM_TriggerCommand
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	PWM_TriggerCommand, %function
 1738              	PWM_TriggerCommand:
 1739              	.LFB33:
1126:.\Generated_Source\PSoC4/PWM.c **** 
1127:.\Generated_Source\PSoC4/PWM.c **** 
1128:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1129:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1130:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1131:.\Generated_Source\PSoC4/PWM.c **** *
1132:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1133:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1134:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1135:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1136:.\Generated_Source\PSoC4/PWM.c **** *
1137:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1138:.\Generated_Source\PSoC4/PWM.c **** *  mask: Combination of mask bits for each instance of the TCPWM that the
1139:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1140:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1141:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1142:.\Generated_Source\PSoC4/PWM.c **** *        define.
1143:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1144:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1145:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1146:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1147:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1150:.\Generated_Source\PSoC4/PWM.c **** *
1151:.\Generated_Source\PSoC4/PWM.c **** * Return:
1152:.\Generated_Source\PSoC4/PWM.c **** *  None
1153:.\Generated_Source\PSoC4/PWM.c **** *
1154:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1156:.\Generated_Source\PSoC4/PWM.c **** {
 1740              		.loc 1 1156 0
 1741              		.cfi_startproc
 1742 0000 80B5     		push	{r7, lr}
 1743              	.LCFI90:
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 7, -8
 1746              		.cfi_offset 14, -4
 1747 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 52


 1748              	.LCFI91:
 1749              		.cfi_def_cfa_offset 24
 1750 0004 00AF     		add	r7, sp, #0
 1751              	.LCFI92:
 1752              		.cfi_def_cfa_register 7
 1753 0006 7860     		str	r0, [r7, #4]
 1754 0008 3960     		str	r1, [r7]
1157:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1158:.\Generated_Source\PSoC4/PWM.c **** 
1159:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1755              		.loc 1 1159 0
 1756 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1757 000e 031C     		mov	r3, r0
 1758 0010 1A1C     		mov	r2, r3
 1759 0012 3B1C     		mov	r3, r7
 1760 0014 0F33     		add	r3, r3, #15
 1761 0016 1A70     		strb	r2, [r3]
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1762              		.loc 1 1161 0
 1763 0018 074B     		ldr	r3, .L136
 1764 001a 3A68     		ldr	r2, [r7]
 1765 001c 7968     		ldr	r1, [r7, #4]
 1766 001e 081C     		mov	r0, r1
 1767 0020 9040     		lsl	r0, r0, r2
 1768 0022 021C     		mov	r2, r0
 1769 0024 1A60     		str	r2, [r3]
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1770              		.loc 1 1163 0
 1771 0026 3B1C     		mov	r3, r7
 1772 0028 0F33     		add	r3, r3, #15
 1773 002a 1B78     		ldrb	r3, [r3]
 1774 002c 181C     		mov	r0, r3
 1775 002e FFF7FEFF 		bl	CyExitCriticalSection
1164:.\Generated_Source\PSoC4/PWM.c **** }
 1776              		.loc 1 1164 0
 1777 0032 BD46     		mov	sp, r7
 1778 0034 04B0     		add	sp, sp, #16
 1779              		@ sp needed for prologue
 1780 0036 80BD     		pop	{r7, pc}
 1781              	.L137:
 1782              		.align	2
 1783              	.L136:
 1784 0038 08000540 		.word	1074069512
 1785              		.cfi_endproc
 1786              	.LFE33:
 1787              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1788              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1789              		.align	2
 1790              		.global	PWM_ReadStatus
 1791              		.code	16
 1792              		.thumb_func
 1793              		.type	PWM_ReadStatus, %function
 1794              	PWM_ReadStatus:
 1795              	.LFB34:
1165:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 53


1166:.\Generated_Source\PSoC4/PWM.c **** 
1167:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1168:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1169:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1170:.\Generated_Source\PSoC4/PWM.c **** *
1171:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1172:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1175:.\Generated_Source\PSoC4/PWM.c **** *  None
1176:.\Generated_Source\PSoC4/PWM.c **** *
1177:.\Generated_Source\PSoC4/PWM.c **** * Return:
1178:.\Generated_Source\PSoC4/PWM.c **** *  Status
1179:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1180:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1182:.\Generated_Source\PSoC4/PWM.c **** *
1183:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1184:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1185:.\Generated_Source\PSoC4/PWM.c **** {
 1796              		.loc 1 1185 0
 1797              		.cfi_startproc
 1798 0000 80B5     		push	{r7, lr}
 1799              	.LCFI93:
 1800              		.cfi_def_cfa_offset 8
 1801              		.cfi_offset 7, -8
 1802              		.cfi_offset 14, -4
 1803 0002 00AF     		add	r7, sp, #0
 1804              	.LCFI94:
 1805              		.cfi_def_cfa_register 7
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1806              		.loc 1 1186 0
 1807 0004 054B     		ldr	r3, .L140
 1808 0006 1B68     		ldr	r3, [r3]
 1809 0008 9A0F     		lsr	r2, r3, #30
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1810              		.loc 1 1187 0
 1811 000a 044B     		ldr	r3, .L140
 1812 000c 1968     		ldr	r1, [r3]
 1813 000e 0123     		mov	r3, #1
 1814 0010 0B40     		and	r3, r3, r1
 1815              		.loc 1 1186 0
 1816 0012 1343     		orr	r3, r3, r2
1188:.\Generated_Source\PSoC4/PWM.c **** }
 1817              		.loc 1 1188 0
 1818 0014 181C     		mov	r0, r3
 1819 0016 BD46     		mov	sp, r7
 1820              		@ sp needed for prologue
 1821 0018 80BD     		pop	{r7, pc}
 1822              	.L141:
 1823 001a C046     		.align	2
 1824              	.L140:
 1825 001c 04010540 		.word	1074069764
 1826              		.cfi_endproc
 1827              	.LFE34:
 1828              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1829              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 54


 1830              		.align	2
 1831              		.global	PWM_SetInterruptMode
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	PWM_SetInterruptMode, %function
 1835              	PWM_SetInterruptMode:
 1836              	.LFB35:
1189:.\Generated_Source\PSoC4/PWM.c **** 
1190:.\Generated_Source\PSoC4/PWM.c **** 
1191:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1193:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1194:.\Generated_Source\PSoC4/PWM.c **** *
1195:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1196:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1197:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1198:.\Generated_Source\PSoC4/PWM.c **** *
1199:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1200:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1201:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1210:.\Generated_Source\PSoC4/PWM.c **** {
 1837              		.loc 1 1210 0
 1838              		.cfi_startproc
 1839 0000 80B5     		push	{r7, lr}
 1840              	.LCFI95:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              	.LCFI96:
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              	.LCFI97:
 1849              		.cfi_def_cfa_register 7
 1850 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1851              		.loc 1 1211 0
 1852 0008 024B     		ldr	r3, .L144
 1853 000a 7A68     		ldr	r2, [r7, #4]
 1854 000c 1A60     		str	r2, [r3]
1212:.\Generated_Source\PSoC4/PWM.c **** }
 1855              		.loc 1 1212 0
 1856 000e BD46     		mov	sp, r7
 1857 0010 02B0     		add	sp, sp, #8
 1858              		@ sp needed for prologue
 1859 0012 80BD     		pop	{r7, pc}
 1860              	.L145:
 1861              		.align	2
 1862              	.L144:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 55


 1863 0014 38010540 		.word	1074069816
 1864              		.cfi_endproc
 1865              	.LFE35:
 1866              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1867              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1868              		.align	2
 1869              		.global	PWM_GetInterruptSourceMasked
 1870              		.code	16
 1871              		.thumb_func
 1872              		.type	PWM_GetInterruptSourceMasked, %function
 1873              	PWM_GetInterruptSourceMasked:
 1874              	.LFB36:
1213:.\Generated_Source\PSoC4/PWM.c **** 
1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1217:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/PWM.c **** *
1219:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1220:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1221:.\Generated_Source\PSoC4/PWM.c **** *
1222:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1223:.\Generated_Source\PSoC4/PWM.c **** *   None
1224:.\Generated_Source\PSoC4/PWM.c **** *
1225:.\Generated_Source\PSoC4/PWM.c **** * Return:
1226:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1227:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1228:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1229:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1232:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1233:.\Generated_Source\PSoC4/PWM.c **** {
 1875              		.loc 1 1233 0
 1876              		.cfi_startproc
 1877 0000 80B5     		push	{r7, lr}
 1878              	.LCFI98:
 1879              		.cfi_def_cfa_offset 8
 1880              		.cfi_offset 7, -8
 1881              		.cfi_offset 14, -4
 1882 0002 00AF     		add	r7, sp, #0
 1883              	.LCFI99:
 1884              		.cfi_def_cfa_register 7
1234:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1885              		.loc 1 1234 0
 1886 0004 024B     		ldr	r3, .L148
 1887 0006 1B68     		ldr	r3, [r3]
1235:.\Generated_Source\PSoC4/PWM.c **** }
 1888              		.loc 1 1235 0
 1889 0008 181C     		mov	r0, r3
 1890 000a BD46     		mov	sp, r7
 1891              		@ sp needed for prologue
 1892 000c 80BD     		pop	{r7, pc}
 1893              	.L149:
 1894 000e C046     		.align	2
 1895              	.L148:
 1896 0010 3C010540 		.word	1074069820
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 56


 1897              		.cfi_endproc
 1898              	.LFE36:
 1899              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1900              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1901              		.align	2
 1902              		.global	PWM_GetInterruptSource
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	PWM_GetInterruptSource, %function
 1906              	PWM_GetInterruptSource:
 1907              	.LFB37:
1236:.\Generated_Source\PSoC4/PWM.c **** 
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1240:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM.c **** *
1242:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** * Return:
1249:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1250:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1251:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1252:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1253:.\Generated_Source\PSoC4/PWM.c **** *
1254:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1255:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1256:.\Generated_Source\PSoC4/PWM.c **** {
 1908              		.loc 1 1256 0
 1909              		.cfi_startproc
 1910 0000 80B5     		push	{r7, lr}
 1911              	.LCFI100:
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 00AF     		add	r7, sp, #0
 1916              	.LCFI101:
 1917              		.cfi_def_cfa_register 7
1257:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1918              		.loc 1 1257 0
 1919 0004 024B     		ldr	r3, .L152
 1920 0006 1B68     		ldr	r3, [r3]
1258:.\Generated_Source\PSoC4/PWM.c **** }
 1921              		.loc 1 1258 0
 1922 0008 181C     		mov	r0, r3
 1923 000a BD46     		mov	sp, r7
 1924              		@ sp needed for prologue
 1925 000c 80BD     		pop	{r7, pc}
 1926              	.L153:
 1927 000e C046     		.align	2
 1928              	.L152:
 1929 0010 30010540 		.word	1074069808
 1930              		.cfi_endproc
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 57


 1931              	.LFE37:
 1932              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1933              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1934              		.align	2
 1935              		.global	PWM_ClearInterrupt
 1936              		.code	16
 1937              		.thumb_func
 1938              		.type	PWM_ClearInterrupt, %function
 1939              	PWM_ClearInterrupt:
 1940              	.LFB38:
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1270:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1271:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1272:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Return:
1275:.\Generated_Source\PSoC4/PWM.c **** *  None
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1279:.\Generated_Source\PSoC4/PWM.c **** {
 1941              		.loc 1 1279 0
 1942              		.cfi_startproc
 1943 0000 80B5     		push	{r7, lr}
 1944              	.LCFI102:
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 7, -8
 1947              		.cfi_offset 14, -4
 1948 0002 82B0     		sub	sp, sp, #8
 1949              	.LCFI103:
 1950              		.cfi_def_cfa_offset 16
 1951 0004 00AF     		add	r7, sp, #0
 1952              	.LCFI104:
 1953              		.cfi_def_cfa_register 7
 1954 0006 7860     		str	r0, [r7, #4]
1280:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1955              		.loc 1 1280 0
 1956 0008 024B     		ldr	r3, .L156
 1957 000a 7A68     		ldr	r2, [r7, #4]
 1958 000c 1A60     		str	r2, [r3]
1281:.\Generated_Source\PSoC4/PWM.c **** }
 1959              		.loc 1 1281 0
 1960 000e BD46     		mov	sp, r7
 1961 0010 02B0     		add	sp, sp, #8
 1962              		@ sp needed for prologue
 1963 0012 80BD     		pop	{r7, pc}
 1964              	.L157:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 58


 1965              		.align	2
 1966              	.L156:
 1967 0014 30010540 		.word	1074069808
 1968              		.cfi_endproc
 1969              	.LFE38:
 1970              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1971              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1972              		.align	2
 1973              		.global	PWM_SetInterrupt
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	PWM_SetInterrupt, %function
 1977              	PWM_SetInterrupt:
 1978              	.LFB39:
1282:.\Generated_Source\PSoC4/PWM.c **** 
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1285:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1286:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1287:.\Generated_Source\PSoC4/PWM.c **** *
1288:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1289:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1290:.\Generated_Source\PSoC4/PWM.c **** *
1291:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1292:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1293:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1294:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1295:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Return:
1298:.\Generated_Source\PSoC4/PWM.c **** *  None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1301:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1302:.\Generated_Source\PSoC4/PWM.c **** {
 1979              		.loc 1 1302 0
 1980              		.cfi_startproc
 1981 0000 80B5     		push	{r7, lr}
 1982              	.LCFI105:
 1983              		.cfi_def_cfa_offset 8
 1984              		.cfi_offset 7, -8
 1985              		.cfi_offset 14, -4
 1986 0002 82B0     		sub	sp, sp, #8
 1987              	.LCFI106:
 1988              		.cfi_def_cfa_offset 16
 1989 0004 00AF     		add	r7, sp, #0
 1990              	.LCFI107:
 1991              		.cfi_def_cfa_register 7
 1992 0006 7860     		str	r0, [r7, #4]
1303:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1993              		.loc 1 1303 0
 1994 0008 024B     		ldr	r3, .L160
 1995 000a 7A68     		ldr	r2, [r7, #4]
 1996 000c 1A60     		str	r2, [r3]
1304:.\Generated_Source\PSoC4/PWM.c **** }
 1997              		.loc 1 1304 0
 1998 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 59


 1999 0010 02B0     		add	sp, sp, #8
 2000              		@ sp needed for prologue
 2001 0012 80BD     		pop	{r7, pc}
 2002              	.L161:
 2003              		.align	2
 2004              	.L160:
 2005 0014 34010540 		.word	1074069812
 2006              		.cfi_endproc
 2007              	.LFE39:
 2008              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2009              		.text
 2010              	.Letext0:
 2011              		.section	.debug_loc,"",%progbits
 2012              	.Ldebug_loc0:
 2013              	.LLST0:
 2014 0000 00000000 		.4byte	.LFB0
 2015 0004 02000000 		.4byte	.LCFI0
 2016 0008 0100     		.2byte	0x1
 2017 000a 5D       		.byte	0x5d
 2018 000b 02000000 		.4byte	.LCFI0
 2019 000f 04000000 		.4byte	.LCFI1
 2020 0013 0200     		.2byte	0x2
 2021 0015 7D       		.byte	0x7d
 2022 0016 08       		.sleb128 8
 2023 0017 04000000 		.4byte	.LCFI1
 2024 001b 58000000 		.4byte	.LFE0
 2025 001f 0200     		.2byte	0x2
 2026 0021 77       		.byte	0x77
 2027 0022 08       		.sleb128 8
 2028 0023 00000000 		.4byte	0x0
 2029 0027 00000000 		.4byte	0x0
 2030              	.LLST1:
 2031 002b 00000000 		.4byte	.LFB1
 2032 002f 02000000 		.4byte	.LCFI2
 2033 0033 0100     		.2byte	0x1
 2034 0035 5D       		.byte	0x5d
 2035 0036 02000000 		.4byte	.LCFI2
 2036 003a 04000000 		.4byte	.LCFI3
 2037 003e 0200     		.2byte	0x2
 2038 0040 7D       		.byte	0x7d
 2039 0041 08       		.sleb128 8
 2040 0042 04000000 		.4byte	.LCFI3
 2041 0046 06000000 		.4byte	.LCFI4
 2042 004a 0200     		.2byte	0x2
 2043 004c 7D       		.byte	0x7d
 2044 004d 10       		.sleb128 16
 2045 004e 06000000 		.4byte	.LCFI4
 2046 0052 34000000 		.4byte	.LFE1
 2047 0056 0200     		.2byte	0x2
 2048 0058 77       		.byte	0x77
 2049 0059 10       		.sleb128 16
 2050 005a 00000000 		.4byte	0x0
 2051 005e 00000000 		.4byte	0x0
 2052              	.LLST2:
 2053 0062 00000000 		.4byte	.LFB2
 2054 0066 02000000 		.4byte	.LCFI5
 2055 006a 0100     		.2byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 60


 2056 006c 5D       		.byte	0x5d
 2057 006d 02000000 		.4byte	.LCFI5
 2058 0071 04000000 		.4byte	.LCFI6
 2059 0075 0200     		.2byte	0x2
 2060 0077 7D       		.byte	0x7d
 2061 0078 08       		.sleb128 8
 2062 0079 04000000 		.4byte	.LCFI6
 2063 007d 24000000 		.4byte	.LFE2
 2064 0081 0200     		.2byte	0x2
 2065 0083 77       		.byte	0x77
 2066 0084 08       		.sleb128 8
 2067 0085 00000000 		.4byte	0x0
 2068 0089 00000000 		.4byte	0x0
 2069              	.LLST3:
 2070 008d 00000000 		.4byte	.LFB3
 2071 0091 02000000 		.4byte	.LCFI7
 2072 0095 0100     		.2byte	0x1
 2073 0097 5D       		.byte	0x5d
 2074 0098 02000000 		.4byte	.LCFI7
 2075 009c 04000000 		.4byte	.LCFI8
 2076 00a0 0200     		.2byte	0x2
 2077 00a2 7D       		.byte	0x7d
 2078 00a3 08       		.sleb128 8
 2079 00a4 04000000 		.4byte	.LCFI8
 2080 00a8 06000000 		.4byte	.LCFI9
 2081 00ac 0200     		.2byte	0x2
 2082 00ae 7D       		.byte	0x7d
 2083 00af 10       		.sleb128 16
 2084 00b0 06000000 		.4byte	.LCFI9
 2085 00b4 34000000 		.4byte	.LFE3
 2086 00b8 0200     		.2byte	0x2
 2087 00ba 77       		.byte	0x77
 2088 00bb 10       		.sleb128 16
 2089 00bc 00000000 		.4byte	0x0
 2090 00c0 00000000 		.4byte	0x0
 2091              	.LLST4:
 2092 00c4 00000000 		.4byte	.LFB4
 2093 00c8 02000000 		.4byte	.LCFI10
 2094 00cc 0100     		.2byte	0x1
 2095 00ce 5D       		.byte	0x5d
 2096 00cf 02000000 		.4byte	.LCFI10
 2097 00d3 04000000 		.4byte	.LCFI11
 2098 00d7 0200     		.2byte	0x2
 2099 00d9 7D       		.byte	0x7d
 2100 00da 08       		.sleb128 8
 2101 00db 04000000 		.4byte	.LCFI11
 2102 00df 06000000 		.4byte	.LCFI12
 2103 00e3 0200     		.2byte	0x2
 2104 00e5 7D       		.byte	0x7d
 2105 00e6 18       		.sleb128 24
 2106 00e7 06000000 		.4byte	.LCFI12
 2107 00eb 48000000 		.4byte	.LFE4
 2108 00ef 0200     		.2byte	0x2
 2109 00f1 77       		.byte	0x77
 2110 00f2 18       		.sleb128 24
 2111 00f3 00000000 		.4byte	0x0
 2112 00f7 00000000 		.4byte	0x0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 61


 2113              	.LLST5:
 2114 00fb 00000000 		.4byte	.LFB5
 2115 00ff 02000000 		.4byte	.LCFI13
 2116 0103 0100     		.2byte	0x1
 2117 0105 5D       		.byte	0x5d
 2118 0106 02000000 		.4byte	.LCFI13
 2119 010a 04000000 		.4byte	.LCFI14
 2120 010e 0200     		.2byte	0x2
 2121 0110 7D       		.byte	0x7d
 2122 0111 08       		.sleb128 8
 2123 0112 04000000 		.4byte	.LCFI14
 2124 0116 06000000 		.4byte	.LCFI15
 2125 011a 0200     		.2byte	0x2
 2126 011c 7D       		.byte	0x7d
 2127 011d 18       		.sleb128 24
 2128 011e 06000000 		.4byte	.LCFI15
 2129 0122 48000000 		.4byte	.LFE5
 2130 0126 0200     		.2byte	0x2
 2131 0128 77       		.byte	0x77
 2132 0129 18       		.sleb128 24
 2133 012a 00000000 		.4byte	0x0
 2134 012e 00000000 		.4byte	0x0
 2135              	.LLST6:
 2136 0132 00000000 		.4byte	.LFB6
 2137 0136 02000000 		.4byte	.LCFI16
 2138 013a 0100     		.2byte	0x1
 2139 013c 5D       		.byte	0x5d
 2140 013d 02000000 		.4byte	.LCFI16
 2141 0141 04000000 		.4byte	.LCFI17
 2142 0145 0200     		.2byte	0x2
 2143 0147 7D       		.byte	0x7d
 2144 0148 08       		.sleb128 8
 2145 0149 04000000 		.4byte	.LCFI17
 2146 014d 06000000 		.4byte	.LCFI18
 2147 0151 0200     		.2byte	0x2
 2148 0153 7D       		.byte	0x7d
 2149 0154 18       		.sleb128 24
 2150 0155 06000000 		.4byte	.LCFI18
 2151 0159 48000000 		.4byte	.LFE6
 2152 015d 0200     		.2byte	0x2
 2153 015f 77       		.byte	0x77
 2154 0160 18       		.sleb128 24
 2155 0161 00000000 		.4byte	0x0
 2156 0165 00000000 		.4byte	0x0
 2157              	.LLST7:
 2158 0169 00000000 		.4byte	.LFB7
 2159 016d 02000000 		.4byte	.LCFI19
 2160 0171 0100     		.2byte	0x1
 2161 0173 5D       		.byte	0x5d
 2162 0174 02000000 		.4byte	.LCFI19
 2163 0178 04000000 		.4byte	.LCFI20
 2164 017c 0200     		.2byte	0x2
 2165 017e 7D       		.byte	0x7d
 2166 017f 08       		.sleb128 8
 2167 0180 04000000 		.4byte	.LCFI20
 2168 0184 06000000 		.4byte	.LCFI21
 2169 0188 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 62


 2170 018a 7D       		.byte	0x7d
 2171 018b 18       		.sleb128 24
 2172 018c 06000000 		.4byte	.LCFI21
 2173 0190 50000000 		.4byte	.LFE7
 2174 0194 0200     		.2byte	0x2
 2175 0196 77       		.byte	0x77
 2176 0197 18       		.sleb128 24
 2177 0198 00000000 		.4byte	0x0
 2178 019c 00000000 		.4byte	0x0
 2179              	.LLST8:
 2180 01a0 00000000 		.4byte	.LFB8
 2181 01a4 02000000 		.4byte	.LCFI22
 2182 01a8 0100     		.2byte	0x1
 2183 01aa 5D       		.byte	0x5d
 2184 01ab 02000000 		.4byte	.LCFI22
 2185 01af 04000000 		.4byte	.LCFI23
 2186 01b3 0200     		.2byte	0x2
 2187 01b5 7D       		.byte	0x7d
 2188 01b6 08       		.sleb128 8
 2189 01b7 04000000 		.4byte	.LCFI23
 2190 01bb 06000000 		.4byte	.LCFI24
 2191 01bf 0200     		.2byte	0x2
 2192 01c1 7D       		.byte	0x7d
 2193 01c2 10       		.sleb128 16
 2194 01c3 06000000 		.4byte	.LCFI24
 2195 01c7 1C000000 		.4byte	.LFE8
 2196 01cb 0200     		.2byte	0x2
 2197 01cd 77       		.byte	0x77
 2198 01ce 10       		.sleb128 16
 2199 01cf 00000000 		.4byte	0x0
 2200 01d3 00000000 		.4byte	0x0
 2201              	.LLST9:
 2202 01d7 00000000 		.4byte	.LFB9
 2203 01db 02000000 		.4byte	.LCFI25
 2204 01df 0100     		.2byte	0x1
 2205 01e1 5D       		.byte	0x5d
 2206 01e2 02000000 		.4byte	.LCFI25
 2207 01e6 04000000 		.4byte	.LCFI26
 2208 01ea 0200     		.2byte	0x2
 2209 01ec 7D       		.byte	0x7d
 2210 01ed 08       		.sleb128 8
 2211 01ee 04000000 		.4byte	.LCFI26
 2212 01f2 06000000 		.4byte	.LCFI27
 2213 01f6 0200     		.2byte	0x2
 2214 01f8 7D       		.byte	0x7d
 2215 01f9 18       		.sleb128 24
 2216 01fa 06000000 		.4byte	.LCFI27
 2217 01fe 4C000000 		.4byte	.LFE9
 2218 0202 0200     		.2byte	0x2
 2219 0204 77       		.byte	0x77
 2220 0205 18       		.sleb128 24
 2221 0206 00000000 		.4byte	0x0
 2222 020a 00000000 		.4byte	0x0
 2223              	.LLST10:
 2224 020e 00000000 		.4byte	.LFB10
 2225 0212 02000000 		.4byte	.LCFI28
 2226 0216 0100     		.2byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 63


 2227 0218 5D       		.byte	0x5d
 2228 0219 02000000 		.4byte	.LCFI28
 2229 021d 04000000 		.4byte	.LCFI29
 2230 0221 0200     		.2byte	0x2
 2231 0223 7D       		.byte	0x7d
 2232 0224 08       		.sleb128 8
 2233 0225 04000000 		.4byte	.LCFI29
 2234 0229 06000000 		.4byte	.LCFI30
 2235 022d 0200     		.2byte	0x2
 2236 022f 7D       		.byte	0x7d
 2237 0230 18       		.sleb128 24
 2238 0231 06000000 		.4byte	.LCFI30
 2239 0235 4C000000 		.4byte	.LFE10
 2240 0239 0200     		.2byte	0x2
 2241 023b 77       		.byte	0x77
 2242 023c 18       		.sleb128 24
 2243 023d 00000000 		.4byte	0x0
 2244 0241 00000000 		.4byte	0x0
 2245              	.LLST11:
 2246 0245 00000000 		.4byte	.LFB11
 2247 0249 02000000 		.4byte	.LCFI31
 2248 024d 0100     		.2byte	0x1
 2249 024f 5D       		.byte	0x5d
 2250 0250 02000000 		.4byte	.LCFI31
 2251 0254 04000000 		.4byte	.LCFI32
 2252 0258 0200     		.2byte	0x2
 2253 025a 7D       		.byte	0x7d
 2254 025b 08       		.sleb128 8
 2255 025c 04000000 		.4byte	.LCFI32
 2256 0260 06000000 		.4byte	.LCFI33
 2257 0264 0200     		.2byte	0x2
 2258 0266 7D       		.byte	0x7d
 2259 0267 18       		.sleb128 24
 2260 0268 06000000 		.4byte	.LCFI33
 2261 026c 50000000 		.4byte	.LFE11
 2262 0270 0200     		.2byte	0x2
 2263 0272 77       		.byte	0x77
 2264 0273 18       		.sleb128 24
 2265 0274 00000000 		.4byte	0x0
 2266 0278 00000000 		.4byte	0x0
 2267              	.LLST12:
 2268 027c 00000000 		.4byte	.LFB12
 2269 0280 02000000 		.4byte	.LCFI34
 2270 0284 0100     		.2byte	0x1
 2271 0286 5D       		.byte	0x5d
 2272 0287 02000000 		.4byte	.LCFI34
 2273 028b 04000000 		.4byte	.LCFI35
 2274 028f 0200     		.2byte	0x2
 2275 0291 7D       		.byte	0x7d
 2276 0292 08       		.sleb128 8
 2277 0293 04000000 		.4byte	.LCFI35
 2278 0297 06000000 		.4byte	.LCFI36
 2279 029b 0200     		.2byte	0x2
 2280 029d 7D       		.byte	0x7d
 2281 029e 18       		.sleb128 24
 2282 029f 06000000 		.4byte	.LCFI36
 2283 02a3 48000000 		.4byte	.LFE12
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 64


 2284 02a7 0200     		.2byte	0x2
 2285 02a9 77       		.byte	0x77
 2286 02aa 18       		.sleb128 24
 2287 02ab 00000000 		.4byte	0x0
 2288 02af 00000000 		.4byte	0x0
 2289              	.LLST13:
 2290 02b3 00000000 		.4byte	.LFB13
 2291 02b7 02000000 		.4byte	.LCFI37
 2292 02bb 0100     		.2byte	0x1
 2293 02bd 5D       		.byte	0x5d
 2294 02be 02000000 		.4byte	.LCFI37
 2295 02c2 04000000 		.4byte	.LCFI38
 2296 02c6 0200     		.2byte	0x2
 2297 02c8 7D       		.byte	0x7d
 2298 02c9 08       		.sleb128 8
 2299 02ca 04000000 		.4byte	.LCFI38
 2300 02ce 06000000 		.4byte	.LCFI39
 2301 02d2 0200     		.2byte	0x2
 2302 02d4 7D       		.byte	0x7d
 2303 02d5 10       		.sleb128 16
 2304 02d6 06000000 		.4byte	.LCFI39
 2305 02da 1C000000 		.4byte	.LFE13
 2306 02de 0200     		.2byte	0x2
 2307 02e0 77       		.byte	0x77
 2308 02e1 10       		.sleb128 16
 2309 02e2 00000000 		.4byte	0x0
 2310 02e6 00000000 		.4byte	0x0
 2311              	.LLST14:
 2312 02ea 00000000 		.4byte	.LFB14
 2313 02ee 02000000 		.4byte	.LCFI40
 2314 02f2 0100     		.2byte	0x1
 2315 02f4 5D       		.byte	0x5d
 2316 02f5 02000000 		.4byte	.LCFI40
 2317 02f9 04000000 		.4byte	.LCFI41
 2318 02fd 0200     		.2byte	0x2
 2319 02ff 7D       		.byte	0x7d
 2320 0300 08       		.sleb128 8
 2321 0301 04000000 		.4byte	.LCFI41
 2322 0305 18000000 		.4byte	.LFE14
 2323 0309 0200     		.2byte	0x2
 2324 030b 77       		.byte	0x77
 2325 030c 08       		.sleb128 8
 2326 030d 00000000 		.4byte	0x0
 2327 0311 00000000 		.4byte	0x0
 2328              	.LLST15:
 2329 0315 00000000 		.4byte	.LFB15
 2330 0319 02000000 		.4byte	.LCFI42
 2331 031d 0100     		.2byte	0x1
 2332 031f 5D       		.byte	0x5d
 2333 0320 02000000 		.4byte	.LCFI42
 2334 0324 04000000 		.4byte	.LCFI43
 2335 0328 0200     		.2byte	0x2
 2336 032a 7D       		.byte	0x7d
 2337 032b 08       		.sleb128 8
 2338 032c 04000000 		.4byte	.LCFI43
 2339 0330 06000000 		.4byte	.LCFI44
 2340 0334 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 65


 2341 0336 7D       		.byte	0x7d
 2342 0337 18       		.sleb128 24
 2343 0338 06000000 		.4byte	.LCFI44
 2344 033c 48000000 		.4byte	.LFE15
 2345 0340 0200     		.2byte	0x2
 2346 0342 77       		.byte	0x77
 2347 0343 18       		.sleb128 24
 2348 0344 00000000 		.4byte	0x0
 2349 0348 00000000 		.4byte	0x0
 2350              	.LLST16:
 2351 034c 00000000 		.4byte	.LFB16
 2352 0350 02000000 		.4byte	.LCFI45
 2353 0354 0100     		.2byte	0x1
 2354 0356 5D       		.byte	0x5d
 2355 0357 02000000 		.4byte	.LCFI45
 2356 035b 04000000 		.4byte	.LCFI46
 2357 035f 0200     		.2byte	0x2
 2358 0361 7D       		.byte	0x7d
 2359 0362 08       		.sleb128 8
 2360 0363 04000000 		.4byte	.LCFI46
 2361 0367 06000000 		.4byte	.LCFI47
 2362 036b 0200     		.2byte	0x2
 2363 036d 7D       		.byte	0x7d
 2364 036e 10       		.sleb128 16
 2365 036f 06000000 		.4byte	.LCFI47
 2366 0373 1C000000 		.4byte	.LFE16
 2367 0377 0200     		.2byte	0x2
 2368 0379 77       		.byte	0x77
 2369 037a 10       		.sleb128 16
 2370 037b 00000000 		.4byte	0x0
 2371 037f 00000000 		.4byte	0x0
 2372              	.LLST17:
 2373 0383 00000000 		.4byte	.LFB17
 2374 0387 02000000 		.4byte	.LCFI48
 2375 038b 0100     		.2byte	0x1
 2376 038d 5D       		.byte	0x5d
 2377 038e 02000000 		.4byte	.LCFI48
 2378 0392 04000000 		.4byte	.LCFI49
 2379 0396 0200     		.2byte	0x2
 2380 0398 7D       		.byte	0x7d
 2381 0399 08       		.sleb128 8
 2382 039a 04000000 		.4byte	.LCFI49
 2383 039e 18000000 		.4byte	.LFE17
 2384 03a2 0200     		.2byte	0x2
 2385 03a4 77       		.byte	0x77
 2386 03a5 08       		.sleb128 8
 2387 03a6 00000000 		.4byte	0x0
 2388 03aa 00000000 		.4byte	0x0
 2389              	.LLST18:
 2390 03ae 00000000 		.4byte	.LFB18
 2391 03b2 02000000 		.4byte	.LCFI50
 2392 03b6 0100     		.2byte	0x1
 2393 03b8 5D       		.byte	0x5d
 2394 03b9 02000000 		.4byte	.LCFI50
 2395 03bd 04000000 		.4byte	.LCFI51
 2396 03c1 0200     		.2byte	0x2
 2397 03c3 7D       		.byte	0x7d
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 66


 2398 03c4 08       		.sleb128 8
 2399 03c5 04000000 		.4byte	.LCFI51
 2400 03c9 06000000 		.4byte	.LCFI52
 2401 03cd 0200     		.2byte	0x2
 2402 03cf 7D       		.byte	0x7d
 2403 03d0 18       		.sleb128 24
 2404 03d1 06000000 		.4byte	.LCFI52
 2405 03d5 48000000 		.4byte	.LFE18
 2406 03d9 0200     		.2byte	0x2
 2407 03db 77       		.byte	0x77
 2408 03dc 18       		.sleb128 24
 2409 03dd 00000000 		.4byte	0x0
 2410 03e1 00000000 		.4byte	0x0
 2411              	.LLST19:
 2412 03e5 00000000 		.4byte	.LFB19
 2413 03e9 02000000 		.4byte	.LCFI53
 2414 03ed 0100     		.2byte	0x1
 2415 03ef 5D       		.byte	0x5d
 2416 03f0 02000000 		.4byte	.LCFI53
 2417 03f4 04000000 		.4byte	.LCFI54
 2418 03f8 0200     		.2byte	0x2
 2419 03fa 7D       		.byte	0x7d
 2420 03fb 08       		.sleb128 8
 2421 03fc 04000000 		.4byte	.LCFI54
 2422 0400 06000000 		.4byte	.LCFI55
 2423 0404 0200     		.2byte	0x2
 2424 0406 7D       		.byte	0x7d
 2425 0407 10       		.sleb128 16
 2426 0408 06000000 		.4byte	.LCFI55
 2427 040c 1C000000 		.4byte	.LFE19
 2428 0410 0200     		.2byte	0x2
 2429 0412 77       		.byte	0x77
 2430 0413 10       		.sleb128 16
 2431 0414 00000000 		.4byte	0x0
 2432 0418 00000000 		.4byte	0x0
 2433              	.LLST20:
 2434 041c 00000000 		.4byte	.LFB20
 2435 0420 02000000 		.4byte	.LCFI56
 2436 0424 0100     		.2byte	0x1
 2437 0426 5D       		.byte	0x5d
 2438 0427 02000000 		.4byte	.LCFI56
 2439 042b 04000000 		.4byte	.LCFI57
 2440 042f 0200     		.2byte	0x2
 2441 0431 7D       		.byte	0x7d
 2442 0432 08       		.sleb128 8
 2443 0433 04000000 		.4byte	.LCFI57
 2444 0437 18000000 		.4byte	.LFE20
 2445 043b 0200     		.2byte	0x2
 2446 043d 77       		.byte	0x77
 2447 043e 08       		.sleb128 8
 2448 043f 00000000 		.4byte	0x0
 2449 0443 00000000 		.4byte	0x0
 2450              	.LLST21:
 2451 0447 00000000 		.4byte	.LFB21
 2452 044b 02000000 		.4byte	.LCFI58
 2453 044f 0100     		.2byte	0x1
 2454 0451 5D       		.byte	0x5d
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 67


 2455 0452 02000000 		.4byte	.LCFI58
 2456 0456 04000000 		.4byte	.LCFI59
 2457 045a 0200     		.2byte	0x2
 2458 045c 7D       		.byte	0x7d
 2459 045d 08       		.sleb128 8
 2460 045e 04000000 		.4byte	.LCFI59
 2461 0462 06000000 		.4byte	.LCFI60
 2462 0466 0200     		.2byte	0x2
 2463 0468 7D       		.byte	0x7d
 2464 0469 18       		.sleb128 24
 2465 046a 06000000 		.4byte	.LCFI60
 2466 046e 4C000000 		.4byte	.LFE21
 2467 0472 0200     		.2byte	0x2
 2468 0474 77       		.byte	0x77
 2469 0475 18       		.sleb128 24
 2470 0476 00000000 		.4byte	0x0
 2471 047a 00000000 		.4byte	0x0
 2472              	.LLST22:
 2473 047e 00000000 		.4byte	.LFB22
 2474 0482 02000000 		.4byte	.LCFI61
 2475 0486 0100     		.2byte	0x1
 2476 0488 5D       		.byte	0x5d
 2477 0489 02000000 		.4byte	.LCFI61
 2478 048d 04000000 		.4byte	.LCFI62
 2479 0491 0200     		.2byte	0x2
 2480 0493 7D       		.byte	0x7d
 2481 0494 08       		.sleb128 8
 2482 0495 04000000 		.4byte	.LCFI62
 2483 0499 06000000 		.4byte	.LCFI63
 2484 049d 0200     		.2byte	0x2
 2485 049f 7D       		.byte	0x7d
 2486 04a0 10       		.sleb128 16
 2487 04a1 06000000 		.4byte	.LCFI63
 2488 04a5 1C000000 		.4byte	.LFE22
 2489 04a9 0200     		.2byte	0x2
 2490 04ab 77       		.byte	0x77
 2491 04ac 10       		.sleb128 16
 2492 04ad 00000000 		.4byte	0x0
 2493 04b1 00000000 		.4byte	0x0
 2494              	.LLST23:
 2495 04b5 00000000 		.4byte	.LFB23
 2496 04b9 02000000 		.4byte	.LCFI64
 2497 04bd 0100     		.2byte	0x1
 2498 04bf 5D       		.byte	0x5d
 2499 04c0 02000000 		.4byte	.LCFI64
 2500 04c4 04000000 		.4byte	.LCFI65
 2501 04c8 0200     		.2byte	0x2
 2502 04ca 7D       		.byte	0x7d
 2503 04cb 08       		.sleb128 8
 2504 04cc 04000000 		.4byte	.LCFI65
 2505 04d0 18000000 		.4byte	.LFE23
 2506 04d4 0200     		.2byte	0x2
 2507 04d6 77       		.byte	0x77
 2508 04d7 08       		.sleb128 8
 2509 04d8 00000000 		.4byte	0x0
 2510 04dc 00000000 		.4byte	0x0
 2511              	.LLST24:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 68


 2512 04e0 00000000 		.4byte	.LFB24
 2513 04e4 02000000 		.4byte	.LCFI66
 2514 04e8 0100     		.2byte	0x1
 2515 04ea 5D       		.byte	0x5d
 2516 04eb 02000000 		.4byte	.LCFI66
 2517 04ef 04000000 		.4byte	.LCFI67
 2518 04f3 0200     		.2byte	0x2
 2519 04f5 7D       		.byte	0x7d
 2520 04f6 08       		.sleb128 8
 2521 04f7 04000000 		.4byte	.LCFI67
 2522 04fb 06000000 		.4byte	.LCFI68
 2523 04ff 0200     		.2byte	0x2
 2524 0501 7D       		.byte	0x7d
 2525 0502 10       		.sleb128 16
 2526 0503 06000000 		.4byte	.LCFI68
 2527 0507 1C000000 		.4byte	.LFE24
 2528 050b 0200     		.2byte	0x2
 2529 050d 77       		.byte	0x77
 2530 050e 10       		.sleb128 16
 2531 050f 00000000 		.4byte	0x0
 2532 0513 00000000 		.4byte	0x0
 2533              	.LLST25:
 2534 0517 00000000 		.4byte	.LFB25
 2535 051b 02000000 		.4byte	.LCFI69
 2536 051f 0100     		.2byte	0x1
 2537 0521 5D       		.byte	0x5d
 2538 0522 02000000 		.4byte	.LCFI69
 2539 0526 04000000 		.4byte	.LCFI70
 2540 052a 0200     		.2byte	0x2
 2541 052c 7D       		.byte	0x7d
 2542 052d 08       		.sleb128 8
 2543 052e 04000000 		.4byte	.LCFI70
 2544 0532 18000000 		.4byte	.LFE25
 2545 0536 0200     		.2byte	0x2
 2546 0538 77       		.byte	0x77
 2547 0539 08       		.sleb128 8
 2548 053a 00000000 		.4byte	0x0
 2549 053e 00000000 		.4byte	0x0
 2550              	.LLST26:
 2551 0542 00000000 		.4byte	.LFB26
 2552 0546 02000000 		.4byte	.LCFI71
 2553 054a 0100     		.2byte	0x1
 2554 054c 5D       		.byte	0x5d
 2555 054d 02000000 		.4byte	.LCFI71
 2556 0551 04000000 		.4byte	.LCFI72
 2557 0555 0200     		.2byte	0x2
 2558 0557 7D       		.byte	0x7d
 2559 0558 08       		.sleb128 8
 2560 0559 04000000 		.4byte	.LCFI72
 2561 055d 18000000 		.4byte	.LFE26
 2562 0561 0200     		.2byte	0x2
 2563 0563 77       		.byte	0x77
 2564 0564 08       		.sleb128 8
 2565 0565 00000000 		.4byte	0x0
 2566 0569 00000000 		.4byte	0x0
 2567              	.LLST27:
 2568 056d 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 69


 2569 0571 02000000 		.4byte	.LCFI73
 2570 0575 0100     		.2byte	0x1
 2571 0577 5D       		.byte	0x5d
 2572 0578 02000000 		.4byte	.LCFI73
 2573 057c 04000000 		.4byte	.LCFI74
 2574 0580 0200     		.2byte	0x2
 2575 0582 7D       		.byte	0x7d
 2576 0583 08       		.sleb128 8
 2577 0584 04000000 		.4byte	.LCFI74
 2578 0588 18000000 		.4byte	.LFE27
 2579 058c 0200     		.2byte	0x2
 2580 058e 77       		.byte	0x77
 2581 058f 08       		.sleb128 8
 2582 0590 00000000 		.4byte	0x0
 2583 0594 00000000 		.4byte	0x0
 2584              	.LLST28:
 2585 0598 00000000 		.4byte	.LFB28
 2586 059c 02000000 		.4byte	.LCFI75
 2587 05a0 0100     		.2byte	0x1
 2588 05a2 5D       		.byte	0x5d
 2589 05a3 02000000 		.4byte	.LCFI75
 2590 05a7 04000000 		.4byte	.LCFI76
 2591 05ab 0200     		.2byte	0x2
 2592 05ad 7D       		.byte	0x7d
 2593 05ae 08       		.sleb128 8
 2594 05af 04000000 		.4byte	.LCFI76
 2595 05b3 06000000 		.4byte	.LCFI77
 2596 05b7 0200     		.2byte	0x2
 2597 05b9 7D       		.byte	0x7d
 2598 05ba 18       		.sleb128 24
 2599 05bb 06000000 		.4byte	.LCFI77
 2600 05bf 44000000 		.4byte	.LFE28
 2601 05c3 0200     		.2byte	0x2
 2602 05c5 77       		.byte	0x77
 2603 05c6 18       		.sleb128 24
 2604 05c7 00000000 		.4byte	0x0
 2605 05cb 00000000 		.4byte	0x0
 2606              	.LLST29:
 2607 05cf 00000000 		.4byte	.LFB29
 2608 05d3 02000000 		.4byte	.LCFI78
 2609 05d7 0100     		.2byte	0x1
 2610 05d9 5D       		.byte	0x5d
 2611 05da 02000000 		.4byte	.LCFI78
 2612 05de 04000000 		.4byte	.LCFI79
 2613 05e2 0200     		.2byte	0x2
 2614 05e4 7D       		.byte	0x7d
 2615 05e5 08       		.sleb128 8
 2616 05e6 04000000 		.4byte	.LCFI79
 2617 05ea 06000000 		.4byte	.LCFI80
 2618 05ee 0200     		.2byte	0x2
 2619 05f0 7D       		.byte	0x7d
 2620 05f1 18       		.sleb128 24
 2621 05f2 06000000 		.4byte	.LCFI80
 2622 05f6 48000000 		.4byte	.LFE29
 2623 05fa 0200     		.2byte	0x2
 2624 05fc 77       		.byte	0x77
 2625 05fd 18       		.sleb128 24
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 70


 2626 05fe 00000000 		.4byte	0x0
 2627 0602 00000000 		.4byte	0x0
 2628              	.LLST30:
 2629 0606 00000000 		.4byte	.LFB30
 2630 060a 02000000 		.4byte	.LCFI81
 2631 060e 0100     		.2byte	0x1
 2632 0610 5D       		.byte	0x5d
 2633 0611 02000000 		.4byte	.LCFI81
 2634 0615 04000000 		.4byte	.LCFI82
 2635 0619 0200     		.2byte	0x2
 2636 061b 7D       		.byte	0x7d
 2637 061c 08       		.sleb128 8
 2638 061d 04000000 		.4byte	.LCFI82
 2639 0621 06000000 		.4byte	.LCFI83
 2640 0625 0200     		.2byte	0x2
 2641 0627 7D       		.byte	0x7d
 2642 0628 18       		.sleb128 24
 2643 0629 06000000 		.4byte	.LCFI83
 2644 062d 4C000000 		.4byte	.LFE30
 2645 0631 0200     		.2byte	0x2
 2646 0633 77       		.byte	0x77
 2647 0634 18       		.sleb128 24
 2648 0635 00000000 		.4byte	0x0
 2649 0639 00000000 		.4byte	0x0
 2650              	.LLST31:
 2651 063d 00000000 		.4byte	.LFB31
 2652 0641 02000000 		.4byte	.LCFI84
 2653 0645 0100     		.2byte	0x1
 2654 0647 5D       		.byte	0x5d
 2655 0648 02000000 		.4byte	.LCFI84
 2656 064c 04000000 		.4byte	.LCFI85
 2657 0650 0200     		.2byte	0x2
 2658 0652 7D       		.byte	0x7d
 2659 0653 08       		.sleb128 8
 2660 0654 04000000 		.4byte	.LCFI85
 2661 0658 06000000 		.4byte	.LCFI86
 2662 065c 0200     		.2byte	0x2
 2663 065e 7D       		.byte	0x7d
 2664 065f 18       		.sleb128 24
 2665 0660 06000000 		.4byte	.LCFI86
 2666 0664 48000000 		.4byte	.LFE31
 2667 0668 0200     		.2byte	0x2
 2668 066a 77       		.byte	0x77
 2669 066b 18       		.sleb128 24
 2670 066c 00000000 		.4byte	0x0
 2671 0670 00000000 		.4byte	0x0
 2672              	.LLST32:
 2673 0674 00000000 		.4byte	.LFB32
 2674 0678 02000000 		.4byte	.LCFI87
 2675 067c 0100     		.2byte	0x1
 2676 067e 5D       		.byte	0x5d
 2677 067f 02000000 		.4byte	.LCFI87
 2678 0683 04000000 		.4byte	.LCFI88
 2679 0687 0200     		.2byte	0x2
 2680 0689 7D       		.byte	0x7d
 2681 068a 08       		.sleb128 8
 2682 068b 04000000 		.4byte	.LCFI88
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 71


 2683 068f 06000000 		.4byte	.LCFI89
 2684 0693 0200     		.2byte	0x2
 2685 0695 7D       		.byte	0x7d
 2686 0696 18       		.sleb128 24
 2687 0697 06000000 		.4byte	.LCFI89
 2688 069b 48000000 		.4byte	.LFE32
 2689 069f 0200     		.2byte	0x2
 2690 06a1 77       		.byte	0x77
 2691 06a2 18       		.sleb128 24
 2692 06a3 00000000 		.4byte	0x0
 2693 06a7 00000000 		.4byte	0x0
 2694              	.LLST33:
 2695 06ab 00000000 		.4byte	.LFB33
 2696 06af 02000000 		.4byte	.LCFI90
 2697 06b3 0100     		.2byte	0x1
 2698 06b5 5D       		.byte	0x5d
 2699 06b6 02000000 		.4byte	.LCFI90
 2700 06ba 04000000 		.4byte	.LCFI91
 2701 06be 0200     		.2byte	0x2
 2702 06c0 7D       		.byte	0x7d
 2703 06c1 08       		.sleb128 8
 2704 06c2 04000000 		.4byte	.LCFI91
 2705 06c6 06000000 		.4byte	.LCFI92
 2706 06ca 0200     		.2byte	0x2
 2707 06cc 7D       		.byte	0x7d
 2708 06cd 18       		.sleb128 24
 2709 06ce 06000000 		.4byte	.LCFI92
 2710 06d2 3C000000 		.4byte	.LFE33
 2711 06d6 0200     		.2byte	0x2
 2712 06d8 77       		.byte	0x77
 2713 06d9 18       		.sleb128 24
 2714 06da 00000000 		.4byte	0x0
 2715 06de 00000000 		.4byte	0x0
 2716              	.LLST34:
 2717 06e2 00000000 		.4byte	.LFB34
 2718 06e6 02000000 		.4byte	.LCFI93
 2719 06ea 0100     		.2byte	0x1
 2720 06ec 5D       		.byte	0x5d
 2721 06ed 02000000 		.4byte	.LCFI93
 2722 06f1 04000000 		.4byte	.LCFI94
 2723 06f5 0200     		.2byte	0x2
 2724 06f7 7D       		.byte	0x7d
 2725 06f8 08       		.sleb128 8
 2726 06f9 04000000 		.4byte	.LCFI94
 2727 06fd 20000000 		.4byte	.LFE34
 2728 0701 0200     		.2byte	0x2
 2729 0703 77       		.byte	0x77
 2730 0704 08       		.sleb128 8
 2731 0705 00000000 		.4byte	0x0
 2732 0709 00000000 		.4byte	0x0
 2733              	.LLST35:
 2734 070d 00000000 		.4byte	.LFB35
 2735 0711 02000000 		.4byte	.LCFI95
 2736 0715 0100     		.2byte	0x1
 2737 0717 5D       		.byte	0x5d
 2738 0718 02000000 		.4byte	.LCFI95
 2739 071c 04000000 		.4byte	.LCFI96
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 72


 2740 0720 0200     		.2byte	0x2
 2741 0722 7D       		.byte	0x7d
 2742 0723 08       		.sleb128 8
 2743 0724 04000000 		.4byte	.LCFI96
 2744 0728 06000000 		.4byte	.LCFI97
 2745 072c 0200     		.2byte	0x2
 2746 072e 7D       		.byte	0x7d
 2747 072f 10       		.sleb128 16
 2748 0730 06000000 		.4byte	.LCFI97
 2749 0734 18000000 		.4byte	.LFE35
 2750 0738 0200     		.2byte	0x2
 2751 073a 77       		.byte	0x77
 2752 073b 10       		.sleb128 16
 2753 073c 00000000 		.4byte	0x0
 2754 0740 00000000 		.4byte	0x0
 2755              	.LLST36:
 2756 0744 00000000 		.4byte	.LFB36
 2757 0748 02000000 		.4byte	.LCFI98
 2758 074c 0100     		.2byte	0x1
 2759 074e 5D       		.byte	0x5d
 2760 074f 02000000 		.4byte	.LCFI98
 2761 0753 04000000 		.4byte	.LCFI99
 2762 0757 0200     		.2byte	0x2
 2763 0759 7D       		.byte	0x7d
 2764 075a 08       		.sleb128 8
 2765 075b 04000000 		.4byte	.LCFI99
 2766 075f 14000000 		.4byte	.LFE36
 2767 0763 0200     		.2byte	0x2
 2768 0765 77       		.byte	0x77
 2769 0766 08       		.sleb128 8
 2770 0767 00000000 		.4byte	0x0
 2771 076b 00000000 		.4byte	0x0
 2772              	.LLST37:
 2773 076f 00000000 		.4byte	.LFB37
 2774 0773 02000000 		.4byte	.LCFI100
 2775 0777 0100     		.2byte	0x1
 2776 0779 5D       		.byte	0x5d
 2777 077a 02000000 		.4byte	.LCFI100
 2778 077e 04000000 		.4byte	.LCFI101
 2779 0782 0200     		.2byte	0x2
 2780 0784 7D       		.byte	0x7d
 2781 0785 08       		.sleb128 8
 2782 0786 04000000 		.4byte	.LCFI101
 2783 078a 14000000 		.4byte	.LFE37
 2784 078e 0200     		.2byte	0x2
 2785 0790 77       		.byte	0x77
 2786 0791 08       		.sleb128 8
 2787 0792 00000000 		.4byte	0x0
 2788 0796 00000000 		.4byte	0x0
 2789              	.LLST38:
 2790 079a 00000000 		.4byte	.LFB38
 2791 079e 02000000 		.4byte	.LCFI102
 2792 07a2 0100     		.2byte	0x1
 2793 07a4 5D       		.byte	0x5d
 2794 07a5 02000000 		.4byte	.LCFI102
 2795 07a9 04000000 		.4byte	.LCFI103
 2796 07ad 0200     		.2byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 73


 2797 07af 7D       		.byte	0x7d
 2798 07b0 08       		.sleb128 8
 2799 07b1 04000000 		.4byte	.LCFI103
 2800 07b5 06000000 		.4byte	.LCFI104
 2801 07b9 0200     		.2byte	0x2
 2802 07bb 7D       		.byte	0x7d
 2803 07bc 10       		.sleb128 16
 2804 07bd 06000000 		.4byte	.LCFI104
 2805 07c1 18000000 		.4byte	.LFE38
 2806 07c5 0200     		.2byte	0x2
 2807 07c7 77       		.byte	0x77
 2808 07c8 10       		.sleb128 16
 2809 07c9 00000000 		.4byte	0x0
 2810 07cd 00000000 		.4byte	0x0
 2811              	.LLST39:
 2812 07d1 00000000 		.4byte	.LFB39
 2813 07d5 02000000 		.4byte	.LCFI105
 2814 07d9 0100     		.2byte	0x1
 2815 07db 5D       		.byte	0x5d
 2816 07dc 02000000 		.4byte	.LCFI105
 2817 07e0 04000000 		.4byte	.LCFI106
 2818 07e4 0200     		.2byte	0x2
 2819 07e6 7D       		.byte	0x7d
 2820 07e7 08       		.sleb128 8
 2821 07e8 04000000 		.4byte	.LCFI106
 2822 07ec 06000000 		.4byte	.LCFI107
 2823 07f0 0200     		.2byte	0x2
 2824 07f2 7D       		.byte	0x7d
 2825 07f3 10       		.sleb128 16
 2826 07f4 06000000 		.4byte	.LCFI107
 2827 07f8 18000000 		.4byte	.LFE39
 2828 07fc 0200     		.2byte	0x2
 2829 07fe 77       		.byte	0x77
 2830 07ff 10       		.sleb128 16
 2831 0800 00000000 		.4byte	0x0
 2832 0804 00000000 		.4byte	0x0
 2833              		.file 2 ".\\Generated_Source\\PSoC4\\/cytypes.h"
 2834              		.section	.debug_info
 2835 0000 7E070000 		.4byte	0x77e
 2836 0004 0200     		.2byte	0x2
 2837 0006 00000000 		.4byte	.Ldebug_abbrev0
 2838 000a 04       		.byte	0x4
 2839 000b 01       		.uleb128 0x1
 2840 000c 42000000 		.4byte	.LASF74
 2841 0010 01       		.byte	0x1
 2842 0011 CC000000 		.4byte	.LASF75
 2843 0015 56020000 		.4byte	.LASF76
 2844 0019 00000000 		.4byte	0x0
 2845 001d 00000000 		.4byte	0x0
 2846 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2847 0025 00000000 		.4byte	.Ldebug_line0
 2848 0029 02       		.uleb128 0x2
 2849 002a 01       		.byte	0x1
 2850 002b 06       		.byte	0x6
 2851 002c 84000000 		.4byte	.LASF0
 2852 0030 02       		.uleb128 0x2
 2853 0031 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 74


 2854 0032 08       		.byte	0x8
 2855 0033 13030000 		.4byte	.LASF1
 2856 0037 02       		.uleb128 0x2
 2857 0038 02       		.byte	0x2
 2858 0039 05       		.byte	0x5
 2859 003a 4A030000 		.4byte	.LASF2
 2860 003e 02       		.uleb128 0x2
 2861 003f 02       		.byte	0x2
 2862 0040 07       		.byte	0x7
 2863 0041 E8010000 		.4byte	.LASF3
 2864 0045 02       		.uleb128 0x2
 2865 0046 04       		.byte	0x4
 2866 0047 05       		.byte	0x5
 2867 0048 EB000000 		.4byte	.LASF4
 2868 004c 02       		.uleb128 0x2
 2869 004d 04       		.byte	0x4
 2870 004e 07       		.byte	0x7
 2871 004f CD010000 		.4byte	.LASF5
 2872 0053 02       		.uleb128 0x2
 2873 0054 08       		.byte	0x8
 2874 0055 05       		.byte	0x5
 2875 0056 76000000 		.4byte	.LASF6
 2876 005a 02       		.uleb128 0x2
 2877 005b 08       		.byte	0x8
 2878 005c 07       		.byte	0x7
 2879 005d 2B000000 		.4byte	.LASF7
 2880 0061 03       		.uleb128 0x3
 2881 0062 04       		.byte	0x4
 2882 0063 05       		.byte	0x5
 2883 0064 696E7400 		.ascii	"int\000"
 2884 0068 02       		.uleb128 0x2
 2885 0069 04       		.byte	0x4
 2886 006a 07       		.byte	0x7
 2887 006b A5010000 		.4byte	.LASF8
 2888 006f 04       		.uleb128 0x4
 2889 0070 F4000000 		.4byte	.LASF9
 2890 0074 02       		.byte	0x2
 2891 0075 4C       		.byte	0x4c
 2892 0076 30000000 		.4byte	0x30
 2893 007a 04       		.uleb128 0x4
 2894 007b 41010000 		.4byte	.LASF10
 2895 007f 02       		.byte	0x2
 2896 0080 4E       		.byte	0x4e
 2897 0081 4C000000 		.4byte	0x4c
 2898 0085 02       		.uleb128 0x2
 2899 0086 04       		.byte	0x4
 2900 0087 04       		.byte	0x4
 2901 0088 E1020000 		.4byte	.LASF11
 2902 008c 02       		.uleb128 0x2
 2903 008d 08       		.byte	0x8
 2904 008e 04       		.byte	0x4
 2905 008f FA000000 		.4byte	.LASF12
 2906 0093 02       		.uleb128 0x2
 2907 0094 01       		.byte	0x1
 2908 0095 08       		.byte	0x8
 2909 0096 A0030000 		.4byte	.LASF13
 2910 009a 05       		.uleb128 0x5
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 75


 2911 009b 04       		.byte	0x4
 2912 009c 07       		.byte	0x7
 2913 009d 06       		.uleb128 0x6
 2914 009e 01       		.byte	0x1
 2915 009f 21030000 		.4byte	.LASF14
 2916 00a3 01       		.byte	0x1
 2917 00a4 27       		.byte	0x27
 2918 00a5 01       		.byte	0x1
 2919 00a6 00000000 		.4byte	.LFB0
 2920 00aa 58000000 		.4byte	.LFE0
 2921 00ae 00000000 		.4byte	.LLST0
 2922 00b2 07       		.uleb128 0x7
 2923 00b3 01       		.byte	0x1
 2924 00b4 06000000 		.4byte	.LASF16
 2925 00b8 01       		.byte	0x1
 2926 00b9 C2       		.byte	0xc2
 2927 00ba 01       		.byte	0x1
 2928 00bb 00000000 		.4byte	.LFB1
 2929 00bf 34000000 		.4byte	.LFE1
 2930 00c3 2B000000 		.4byte	.LLST1
 2931 00c7 DA000000 		.4byte	0xda
 2932 00cb 08       		.uleb128 0x8
 2933 00cc 01040000 		.4byte	.LASF18
 2934 00d0 01       		.byte	0x1
 2935 00d1 C4       		.byte	0xc4
 2936 00d2 6F000000 		.4byte	0x6f
 2937 00d6 02       		.byte	0x2
 2938 00d7 91       		.byte	0x91
 2939 00d8 77       		.sleb128 -9
 2940 00d9 00       		.byte	0x0
 2941 00da 06       		.uleb128 0x6
 2942 00db 01       		.byte	0x1
 2943 00dc 0C020000 		.4byte	.LASF15
 2944 00e0 01       		.byte	0x1
 2945 00e1 F1       		.byte	0xf1
 2946 00e2 01       		.byte	0x1
 2947 00e3 00000000 		.4byte	.LFB2
 2948 00e7 24000000 		.4byte	.LFE2
 2949 00eb 62000000 		.4byte	.LLST2
 2950 00ef 09       		.uleb128 0x9
 2951 00f0 01       		.byte	0x1
 2952 00f1 27010000 		.4byte	.LASF17
 2953 00f5 01       		.byte	0x1
 2954 00f6 0B01     		.2byte	0x10b
 2955 00f8 01       		.byte	0x1
 2956 00f9 00000000 		.4byte	.LFB3
 2957 00fd 34000000 		.4byte	.LFE3
 2958 0101 8D000000 		.4byte	.LLST3
 2959 0105 19010000 		.4byte	0x119
 2960 0109 0A       		.uleb128 0xa
 2961 010a 01040000 		.4byte	.LASF18
 2962 010e 01       		.byte	0x1
 2963 010f 0D01     		.2byte	0x10d
 2964 0111 6F000000 		.4byte	0x6f
 2965 0115 02       		.byte	0x2
 2966 0116 91       		.byte	0x91
 2967 0117 77       		.sleb128 -9
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 76


 2968 0118 00       		.byte	0x0
 2969 0119 09       		.uleb128 0x9
 2970 011a 01       		.byte	0x1
 2971 011b 31040000 		.4byte	.LASF19
 2972 011f 01       		.byte	0x1
 2973 0120 3001     		.2byte	0x130
 2974 0122 01       		.byte	0x1
 2975 0123 00000000 		.4byte	.LFB4
 2976 0127 48000000 		.4byte	.LFE4
 2977 012b C4000000 		.4byte	.LLST4
 2978 012f 52010000 		.4byte	0x152
 2979 0133 0B       		.uleb128 0xb
 2980 0134 A5030000 		.4byte	.LASF21
 2981 0138 01       		.byte	0x1
 2982 0139 3001     		.2byte	0x130
 2983 013b 7A000000 		.4byte	0x7a
 2984 013f 02       		.byte	0x2
 2985 0140 91       		.byte	0x91
 2986 0141 6C       		.sleb128 -20
 2987 0142 0A       		.uleb128 0xa
 2988 0143 01040000 		.4byte	.LASF18
 2989 0147 01       		.byte	0x1
 2990 0148 3201     		.2byte	0x132
 2991 014a 6F000000 		.4byte	0x6f
 2992 014e 02       		.byte	0x2
 2993 014f 91       		.byte	0x91
 2994 0150 77       		.sleb128 -9
 2995 0151 00       		.byte	0x0
 2996 0152 09       		.uleb128 0x9
 2997 0153 01       		.byte	0x1
 2998 0154 92030000 		.4byte	.LASF20
 2999 0158 01       		.byte	0x1
 3000 0159 5101     		.2byte	0x151
 3001 015b 01       		.byte	0x1
 3002 015c 00000000 		.4byte	.LFB5
 3003 0160 48000000 		.4byte	.LFE5
 3004 0164 FB000000 		.4byte	.LLST5
 3005 0168 8B010000 		.4byte	0x18b
 3006 016c 0B       		.uleb128 0xb
 3007 016d 4E000000 		.4byte	.LASF22
 3008 0171 01       		.byte	0x1
 3009 0172 5101     		.2byte	0x151
 3010 0174 7A000000 		.4byte	0x7a
 3011 0178 02       		.byte	0x2
 3012 0179 91       		.byte	0x91
 3013 017a 6C       		.sleb128 -20
 3014 017b 0A       		.uleb128 0xa
 3015 017c 01040000 		.4byte	.LASF18
 3016 0180 01       		.byte	0x1
 3017 0181 5301     		.2byte	0x153
 3018 0183 6F000000 		.4byte	0x6f
 3019 0187 02       		.byte	0x2
 3020 0188 91       		.byte	0x91
 3021 0189 77       		.sleb128 -9
 3022 018a 00       		.byte	0x0
 3023 018b 09       		.uleb128 0x9
 3024 018c 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 77


 3025 018d FB010000 		.4byte	.LASF23
 3026 0191 01       		.byte	0x1
 3027 0192 7601     		.2byte	0x176
 3028 0194 01       		.byte	0x1
 3029 0195 00000000 		.4byte	.LFB6
 3030 0199 48000000 		.4byte	.LFE6
 3031 019d 32010000 		.4byte	.LLST6
 3032 01a1 C4010000 		.4byte	0x1c4
 3033 01a5 0B       		.uleb128 0xb
 3034 01a6 E7020000 		.4byte	.LASF24
 3035 01aa 01       		.byte	0x1
 3036 01ab 7601     		.2byte	0x176
 3037 01ad 7A000000 		.4byte	0x7a
 3038 01b1 02       		.byte	0x2
 3039 01b2 91       		.byte	0x91
 3040 01b3 6C       		.sleb128 -20
 3041 01b4 0A       		.uleb128 0xa
 3042 01b5 01040000 		.4byte	.LASF18
 3043 01b9 01       		.byte	0x1
 3044 01ba 7801     		.2byte	0x178
 3045 01bc 6F000000 		.4byte	0x6f
 3046 01c0 02       		.byte	0x2
 3047 01c1 91       		.byte	0x91
 3048 01c2 77       		.sleb128 -9
 3049 01c3 00       		.byte	0x0
 3050 01c4 09       		.uleb128 0x9
 3051 01c5 01       		.byte	0x1
 3052 01c6 B1020000 		.4byte	.LASF25
 3053 01ca 01       		.byte	0x1
 3054 01cb 9601     		.2byte	0x196
 3055 01cd 01       		.byte	0x1
 3056 01ce 00000000 		.4byte	.LFB7
 3057 01d2 50000000 		.4byte	.LFE7
 3058 01d6 69010000 		.4byte	.LLST7
 3059 01da FD010000 		.4byte	0x1fd
 3060 01de 0B       		.uleb128 0xb
 3061 01df 23040000 		.4byte	.LASF26
 3062 01e3 01       		.byte	0x1
 3063 01e4 9601     		.2byte	0x196
 3064 01e6 7A000000 		.4byte	0x7a
 3065 01ea 02       		.byte	0x2
 3066 01eb 91       		.byte	0x91
 3067 01ec 6C       		.sleb128 -20
 3068 01ed 0A       		.uleb128 0xa
 3069 01ee 01040000 		.4byte	.LASF18
 3070 01f2 01       		.byte	0x1
 3071 01f3 9801     		.2byte	0x198
 3072 01f5 6F000000 		.4byte	0x6f
 3073 01f9 02       		.byte	0x2
 3074 01fa 91       		.byte	0x91
 3075 01fb 77       		.sleb128 -9
 3076 01fc 00       		.byte	0x0
 3077 01fd 09       		.uleb128 0x9
 3078 01fe 01       		.byte	0x1
 3079 01ff 3B030000 		.4byte	.LASF27
 3080 0203 01       		.byte	0x1
 3081 0204 CC01     		.2byte	0x1cc
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 78


 3082 0206 01       		.byte	0x1
 3083 0207 00000000 		.4byte	.LFB8
 3084 020b 1C000000 		.4byte	.LFE8
 3085 020f A0010000 		.4byte	.LLST8
 3086 0213 27020000 		.4byte	0x227
 3087 0217 0B       		.uleb128 0xb
 3088 0218 DF010000 		.4byte	.LASF28
 3089 021c 01       		.byte	0x1
 3090 021d CC01     		.2byte	0x1cc
 3091 021f 7A000000 		.4byte	0x7a
 3092 0223 02       		.byte	0x2
 3093 0224 91       		.byte	0x91
 3094 0225 74       		.sleb128 -12
 3095 0226 00       		.byte	0x0
 3096 0227 09       		.uleb128 0x9
 3097 0228 01       		.byte	0x1
 3098 0229 11000000 		.4byte	.LASF29
 3099 022d 01       		.byte	0x1
 3100 022e F001     		.2byte	0x1f0
 3101 0230 01       		.byte	0x1
 3102 0231 00000000 		.4byte	.LFB9
 3103 0235 4C000000 		.4byte	.LFE9
 3104 0239 D7010000 		.4byte	.LLST9
 3105 023d 60020000 		.4byte	0x260
 3106 0241 0B       		.uleb128 0xb
 3107 0242 9A020000 		.4byte	.LASF30
 3108 0246 01       		.byte	0x1
 3109 0247 F001     		.2byte	0x1f0
 3110 0249 7A000000 		.4byte	0x7a
 3111 024d 02       		.byte	0x2
 3112 024e 91       		.byte	0x91
 3113 024f 6C       		.sleb128 -20
 3114 0250 0A       		.uleb128 0xa
 3115 0251 01040000 		.4byte	.LASF18
 3116 0255 01       		.byte	0x1
 3117 0256 F201     		.2byte	0x1f2
 3118 0258 6F000000 		.4byte	0x6f
 3119 025c 02       		.byte	0x2
 3120 025d 91       		.byte	0x91
 3121 025e 77       		.sleb128 -9
 3122 025f 00       		.byte	0x0
 3123 0260 09       		.uleb128 0x9
 3124 0261 01       		.byte	0x1
 3125 0262 3D040000 		.4byte	.LASF31
 3126 0266 01       		.byte	0x1
 3127 0267 1202     		.2byte	0x212
 3128 0269 01       		.byte	0x1
 3129 026a 00000000 		.4byte	.LFB10
 3130 026e 4C000000 		.4byte	.LFE10
 3131 0272 0E020000 		.4byte	.LLST10
 3132 0276 99020000 		.4byte	0x299
 3133 027a 0B       		.uleb128 0xb
 3134 027b 2A030000 		.4byte	.LASF32
 3135 027f 01       		.byte	0x1
 3136 0280 1202     		.2byte	0x212
 3137 0282 7A000000 		.4byte	0x7a
 3138 0286 02       		.byte	0x2
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 79


 3139 0287 91       		.byte	0x91
 3140 0288 6C       		.sleb128 -20
 3141 0289 0A       		.uleb128 0xa
 3142 028a 01040000 		.4byte	.LASF18
 3143 028e 01       		.byte	0x1
 3144 028f 1402     		.2byte	0x214
 3145 0291 6F000000 		.4byte	0x6f
 3146 0295 02       		.byte	0x2
 3147 0296 91       		.byte	0x91
 3148 0297 77       		.sleb128 -9
 3149 0298 00       		.byte	0x0
 3150 0299 09       		.uleb128 0x9
 3151 029a 01       		.byte	0x1
 3152 029b B2010000 		.4byte	.LASF33
 3153 029f 01       		.byte	0x1
 3154 02a0 3302     		.2byte	0x233
 3155 02a2 01       		.byte	0x1
 3156 02a3 00000000 		.4byte	.LFB11
 3157 02a7 50000000 		.4byte	.LFE11
 3158 02ab 45020000 		.4byte	.LLST11
 3159 02af D2020000 		.4byte	0x2d2
 3160 02b3 0B       		.uleb128 0xb
 3161 02b4 8C010000 		.4byte	.LASF34
 3162 02b8 01       		.byte	0x1
 3163 02b9 3302     		.2byte	0x233
 3164 02bb 7A000000 		.4byte	0x7a
 3165 02bf 02       		.byte	0x2
 3166 02c0 91       		.byte	0x91
 3167 02c1 6C       		.sleb128 -20
 3168 02c2 0A       		.uleb128 0xa
 3169 02c3 01040000 		.4byte	.LASF18
 3170 02c7 01       		.byte	0x1
 3171 02c8 3502     		.2byte	0x235
 3172 02ca 6F000000 		.4byte	0x6f
 3173 02ce 02       		.byte	0x2
 3174 02cf 91       		.byte	0x91
 3175 02d0 77       		.sleb128 -9
 3176 02d1 00       		.byte	0x0
 3177 02d2 09       		.uleb128 0x9
 3178 02d3 01       		.byte	0x1
 3179 02d4 30010000 		.4byte	.LASF35
 3180 02d8 01       		.byte	0x1
 3181 02d9 5402     		.2byte	0x254
 3182 02db 01       		.byte	0x1
 3183 02dc 00000000 		.4byte	.LFB12
 3184 02e0 48000000 		.4byte	.LFE12
 3185 02e4 7C020000 		.4byte	.LLST12
 3186 02e8 0B030000 		.4byte	0x30b
 3187 02ec 0B       		.uleb128 0xb
 3188 02ed 65010000 		.4byte	.LASF36
 3189 02f1 01       		.byte	0x1
 3190 02f2 5402     		.2byte	0x254
 3191 02f4 7A000000 		.4byte	0x7a
 3192 02f8 02       		.byte	0x2
 3193 02f9 91       		.byte	0x91
 3194 02fa 6C       		.sleb128 -20
 3195 02fb 0A       		.uleb128 0xa
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 80


 3196 02fc 01040000 		.4byte	.LASF18
 3197 0300 01       		.byte	0x1
 3198 0301 5602     		.2byte	0x256
 3199 0303 6F000000 		.4byte	0x6f
 3200 0307 02       		.byte	0x2
 3201 0308 91       		.byte	0x91
 3202 0309 77       		.sleb128 -9
 3203 030a 00       		.byte	0x0
 3204 030b 09       		.uleb128 0x9
 3205 030c 01       		.byte	0x1
 3206 030d 55000000 		.4byte	.LASF37
 3207 0311 01       		.byte	0x1
 3208 0312 7202     		.2byte	0x272
 3209 0314 01       		.byte	0x1
 3210 0315 00000000 		.4byte	.LFB13
 3211 0319 1C000000 		.4byte	.LFE13
 3212 031d B3020000 		.4byte	.LLST13
 3213 0321 35030000 		.4byte	0x335
 3214 0325 0B       		.uleb128 0xb
 3215 0326 00000000 		.4byte	.LASF38
 3216 032a 01       		.byte	0x1
 3217 032b 7202     		.2byte	0x272
 3218 032d 7A000000 		.4byte	0x7a
 3219 0331 02       		.byte	0x2
 3220 0332 91       		.byte	0x91
 3221 0333 74       		.sleb128 -12
 3222 0334 00       		.byte	0x0
 3223 0335 0C       		.uleb128 0xc
 3224 0336 01       		.byte	0x1
 3225 0337 66000000 		.4byte	.LASF43
 3226 033b 01       		.byte	0x1
 3227 033c 8602     		.2byte	0x286
 3228 033e 01       		.byte	0x1
 3229 033f 7A000000 		.4byte	0x7a
 3230 0343 00000000 		.4byte	.LFB14
 3231 0347 18000000 		.4byte	.LFE14
 3232 034b EA020000 		.4byte	.LLST14
 3233 034f 09       		.uleb128 0x9
 3234 0350 01       		.byte	0x1
 3235 0351 74040000 		.4byte	.LASF39
 3236 0355 01       		.byte	0x1
 3237 0356 A302     		.2byte	0x2a3
 3238 0358 01       		.byte	0x1
 3239 0359 00000000 		.4byte	.LFB15
 3240 035d 48000000 		.4byte	.LFE15
 3241 0361 15030000 		.4byte	.LLST15
 3242 0365 88030000 		.4byte	0x388
 3243 0369 0B       		.uleb128 0xb
 3244 036a CD030000 		.4byte	.LASF40
 3245 036e 01       		.byte	0x1
 3246 036f A302     		.2byte	0x2a3
 3247 0371 7A000000 		.4byte	0x7a
 3248 0375 02       		.byte	0x2
 3249 0376 91       		.byte	0x91
 3250 0377 6C       		.sleb128 -20
 3251 0378 0A       		.uleb128 0xa
 3252 0379 01040000 		.4byte	.LASF18
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 81


 3253 037d 01       		.byte	0x1
 3254 037e A502     		.2byte	0x2a5
 3255 0380 6F000000 		.4byte	0x6f
 3256 0384 02       		.byte	0x2
 3257 0385 91       		.byte	0x91
 3258 0386 77       		.sleb128 -9
 3259 0387 00       		.byte	0x0
 3260 0388 09       		.uleb128 0x9
 3261 0389 01       		.byte	0x1
 3262 038a 3A020000 		.4byte	.LASF41
 3263 038e 01       		.byte	0x1
 3264 038f C002     		.2byte	0x2c0
 3265 0391 01       		.byte	0x1
 3266 0392 00000000 		.4byte	.LFB16
 3267 0396 1C000000 		.4byte	.LFE16
 3268 039a 4C030000 		.4byte	.LLST16
 3269 039e B2030000 		.4byte	0x3b2
 3270 03a2 0B       		.uleb128 0xb
 3271 03a3 24000000 		.4byte	.LASF42
 3272 03a7 01       		.byte	0x1
 3273 03a8 C002     		.2byte	0x2c0
 3274 03aa 7A000000 		.4byte	0x7a
 3275 03ae 02       		.byte	0x2
 3276 03af 91       		.byte	0x91
 3277 03b0 74       		.sleb128 -12
 3278 03b1 00       		.byte	0x0
 3279 03b2 0C       		.uleb128 0xc
 3280 03b3 01       		.byte	0x1
 3281 03b4 C0020000 		.4byte	.LASF44
 3282 03b8 01       		.byte	0x1
 3283 03b9 D402     		.2byte	0x2d4
 3284 03bb 01       		.byte	0x1
 3285 03bc 7A000000 		.4byte	0x7a
 3286 03c0 00000000 		.4byte	.LFB17
 3287 03c4 18000000 		.4byte	.LFE17
 3288 03c8 83030000 		.4byte	.LLST17
 3289 03cc 09       		.uleb128 0x9
 3290 03cd 01       		.byte	0x1
 3291 03ce 14010000 		.4byte	.LASF45
 3292 03d2 01       		.byte	0x1
 3293 03d3 EE02     		.2byte	0x2ee
 3294 03d5 01       		.byte	0x1
 3295 03d6 00000000 		.4byte	.LFB18
 3296 03da 48000000 		.4byte	.LFE18
 3297 03de AE030000 		.4byte	.LLST18
 3298 03e2 05040000 		.4byte	0x405
 3299 03e6 0B       		.uleb128 0xb
 3300 03e7 52040000 		.4byte	.LASF46
 3301 03eb 01       		.byte	0x1
 3302 03ec EE02     		.2byte	0x2ee
 3303 03ee 7A000000 		.4byte	0x7a
 3304 03f2 02       		.byte	0x2
 3305 03f3 91       		.byte	0x91
 3306 03f4 6C       		.sleb128 -20
 3307 03f5 0A       		.uleb128 0xa
 3308 03f6 01040000 		.4byte	.LASF18
 3309 03fa 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 82


 3310 03fb F002     		.2byte	0x2f0
 3311 03fd 6F000000 		.4byte	0x6f
 3312 0401 02       		.byte	0x2
 3313 0402 91       		.byte	0x91
 3314 0403 77       		.sleb128 -9
 3315 0404 00       		.byte	0x0
 3316 0405 09       		.uleb128 0x9
 3317 0406 01       		.byte	0x1
 3318 0407 7F030000 		.4byte	.LASF47
 3319 040b 01       		.byte	0x1
 3320 040c 0903     		.2byte	0x309
 3321 040e 01       		.byte	0x1
 3322 040f 00000000 		.4byte	.LFB19
 3323 0413 1C000000 		.4byte	.LFE19
 3324 0417 E5030000 		.4byte	.LLST19
 3325 041b 2F040000 		.4byte	0x42f
 3326 041f 0B       		.uleb128 0xb
 3327 0420 E4030000 		.4byte	.LASF48
 3328 0424 01       		.byte	0x1
 3329 0425 0903     		.2byte	0x309
 3330 0427 7A000000 		.4byte	0x7a
 3331 042b 02       		.byte	0x2
 3332 042c 91       		.byte	0x91
 3333 042d 74       		.sleb128 -12
 3334 042e 00       		.byte	0x0
 3335 042f 0C       		.uleb128 0xc
 3336 0430 01       		.byte	0x1
 3337 0431 CF020000 		.4byte	.LASF49
 3338 0435 01       		.byte	0x1
 3339 0436 1D03     		.2byte	0x31d
 3340 0438 01       		.byte	0x1
 3341 0439 7A000000 		.4byte	0x7a
 3342 043d 00000000 		.4byte	.LFB20
 3343 0441 18000000 		.4byte	.LFE20
 3344 0445 1C040000 		.4byte	.LLST20
 3345 0449 09       		.uleb128 0x9
 3346 044a 01       		.byte	0x1
 3347 044b 01030000 		.4byte	.LASF50
 3348 044f 01       		.byte	0x1
 3349 0450 3703     		.2byte	0x337
 3350 0452 01       		.byte	0x1
 3351 0453 00000000 		.4byte	.LFB21
 3352 0457 4C000000 		.4byte	.LFE21
 3353 045b 47040000 		.4byte	.LLST21
 3354 045f 82040000 		.4byte	0x482
 3355 0463 0B       		.uleb128 0xb
 3356 0464 52040000 		.4byte	.LASF46
 3357 0468 01       		.byte	0x1
 3358 0469 3703     		.2byte	0x337
 3359 046b 7A000000 		.4byte	0x7a
 3360 046f 02       		.byte	0x2
 3361 0470 91       		.byte	0x91
 3362 0471 6C       		.sleb128 -20
 3363 0472 0A       		.uleb128 0xa
 3364 0473 01040000 		.4byte	.LASF18
 3365 0477 01       		.byte	0x1
 3366 0478 3903     		.2byte	0x339
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 83


 3367 047a 6F000000 		.4byte	0x6f
 3368 047e 02       		.byte	0x2
 3369 047f 91       		.byte	0x91
 3370 0480 77       		.sleb128 -9
 3371 0481 00       		.byte	0x0
 3372 0482 09       		.uleb128 0x9
 3373 0483 01       		.byte	0x1
 3374 0484 29020000 		.4byte	.LASF51
 3375 0488 01       		.byte	0x1
 3376 0489 5403     		.2byte	0x354
 3377 048b 01       		.byte	0x1
 3378 048c 00000000 		.4byte	.LFB22
 3379 0490 1C000000 		.4byte	.LFE22
 3380 0494 7E040000 		.4byte	.LLST22
 3381 0498 AC040000 		.4byte	0x4ac
 3382 049c 0B       		.uleb128 0xb
 3383 049d A9020000 		.4byte	.LASF52
 3384 04a1 01       		.byte	0x1
 3385 04a2 5403     		.2byte	0x354
 3386 04a4 7A000000 		.4byte	0x7a
 3387 04a8 02       		.byte	0x2
 3388 04a9 91       		.byte	0x91
 3389 04aa 74       		.sleb128 -12
 3390 04ab 00       		.byte	0x0
 3391 04ac 0C       		.uleb128 0xc
 3392 04ad 01       		.byte	0x1
 3393 04ae 87040000 		.4byte	.LASF53
 3394 04b2 01       		.byte	0x1
 3395 04b3 6903     		.2byte	0x369
 3396 04b5 01       		.byte	0x1
 3397 04b6 7A000000 		.4byte	0x7a
 3398 04ba 00000000 		.4byte	.LFB23
 3399 04be 18000000 		.4byte	.LFE23
 3400 04c2 B5040000 		.4byte	.LLST23
 3401 04c6 09       		.uleb128 0x9
 3402 04c7 01       		.byte	0x1
 3403 04c8 90000000 		.4byte	.LASF54
 3404 04cc 01       		.byte	0x1
 3405 04cd 7E03     		.2byte	0x37e
 3406 04cf 01       		.byte	0x1
 3407 04d0 00000000 		.4byte	.LFB24
 3408 04d4 1C000000 		.4byte	.LFE24
 3409 04d8 E0040000 		.4byte	.LLST24
 3410 04dc F0040000 		.4byte	0x4f0
 3411 04e0 0B       		.uleb128 0xb
 3412 04e1 D9030000 		.4byte	.LASF55
 3413 04e5 01       		.byte	0x1
 3414 04e6 7E03     		.2byte	0x37e
 3415 04e8 7A000000 		.4byte	0x7a
 3416 04ec 02       		.byte	0x2
 3417 04ed 91       		.byte	0x91
 3418 04ee 74       		.sleb128 -12
 3419 04ef 00       		.byte	0x0
 3420 04f0 0C       		.uleb128 0xc
 3421 04f1 01       		.byte	0x1
 3422 04f2 01010000 		.4byte	.LASF56
 3423 04f6 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 84


 3424 04f7 9303     		.2byte	0x393
 3425 04f9 01       		.byte	0x1
 3426 04fa 7A000000 		.4byte	0x7a
 3427 04fe 00000000 		.4byte	.LFB25
 3428 0502 18000000 		.4byte	.LFE25
 3429 0506 17050000 		.4byte	.LLST25
 3430 050a 0C       		.uleb128 0xc
 3431 050b 01       		.byte	0x1
 3432 050c F1020000 		.4byte	.LASF57
 3433 0510 01       		.byte	0x1
 3434 0511 A803     		.2byte	0x3a8
 3435 0513 01       		.byte	0x1
 3436 0514 7A000000 		.4byte	0x7a
 3437 0518 00000000 		.4byte	.LFB26
 3438 051c 18000000 		.4byte	.LFE26
 3439 0520 42050000 		.4byte	.LLST26
 3440 0524 0C       		.uleb128 0xc
 3441 0525 01       		.byte	0x1
 3442 0526 EE030000 		.4byte	.LASF58
 3443 052a 01       		.byte	0x1
 3444 052b BD03     		.2byte	0x3bd
 3445 052d 01       		.byte	0x1
 3446 052e 7A000000 		.4byte	0x7a
 3447 0532 00000000 		.4byte	.LFB27
 3448 0536 18000000 		.4byte	.LFE27
 3449 053a 6D050000 		.4byte	.LLST27
 3450 053e 09       		.uleb128 0x9
 3451 053f 01       		.byte	0x1
 3452 0540 6A010000 		.4byte	.LASF59
 3453 0544 01       		.byte	0x1
 3454 0545 D803     		.2byte	0x3d8
 3455 0547 01       		.byte	0x1
 3456 0548 00000000 		.4byte	.LFB28
 3457 054c 44000000 		.4byte	.LFE28
 3458 0550 98050000 		.4byte	.LLST28
 3459 0554 77050000 		.4byte	0x577
 3460 0558 0B       		.uleb128 0xb
 3461 0559 59010000 		.4byte	.LASF60
 3462 055d 01       		.byte	0x1
 3463 055e D803     		.2byte	0x3d8
 3464 0560 7A000000 		.4byte	0x7a
 3465 0564 02       		.byte	0x2
 3466 0565 91       		.byte	0x91
 3467 0566 6C       		.sleb128 -20
 3468 0567 0A       		.uleb128 0xa
 3469 0568 01040000 		.4byte	.LASF18
 3470 056c 01       		.byte	0x1
 3471 056d DA03     		.2byte	0x3da
 3472 056f 6F000000 		.4byte	0x6f
 3473 0573 02       		.byte	0x2
 3474 0574 91       		.byte	0x91
 3475 0575 77       		.sleb128 -9
 3476 0576 00       		.byte	0x0
 3477 0577 09       		.uleb128 0x9
 3478 0578 01       		.byte	0x1
 3479 0579 BB030000 		.4byte	.LASF61
 3480 057d 01       		.byte	0x1
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 85


 3481 057e F903     		.2byte	0x3f9
 3482 0580 01       		.byte	0x1
 3483 0581 00000000 		.4byte	.LFB29
 3484 0585 48000000 		.4byte	.LFE29
 3485 0589 CF050000 		.4byte	.LLST29
 3486 058d B0050000 		.4byte	0x5b0
 3487 0591 0B       		.uleb128 0xb
 3488 0592 59010000 		.4byte	.LASF60
 3489 0596 01       		.byte	0x1
 3490 0597 F903     		.2byte	0x3f9
 3491 0599 7A000000 		.4byte	0x7a
 3492 059d 02       		.byte	0x2
 3493 059e 91       		.byte	0x91
 3494 059f 6C       		.sleb128 -20
 3495 05a0 0A       		.uleb128 0xa
 3496 05a1 01040000 		.4byte	.LASF18
 3497 05a5 01       		.byte	0x1
 3498 05a6 FB03     		.2byte	0x3fb
 3499 05a8 6F000000 		.4byte	0x6f
 3500 05ac 02       		.byte	0x2
 3501 05ad 91       		.byte	0x91
 3502 05ae 77       		.sleb128 -9
 3503 05af 00       		.byte	0x0
 3504 05b0 09       		.uleb128 0x9
 3505 05b1 01       		.byte	0x1
 3506 05b2 48010000 		.4byte	.LASF62
 3507 05b6 01       		.byte	0x1
 3508 05b7 1A04     		.2byte	0x41a
 3509 05b9 01       		.byte	0x1
 3510 05ba 00000000 		.4byte	.LFB30
 3511 05be 4C000000 		.4byte	.LFE30
 3512 05c2 06060000 		.4byte	.LLST30
 3513 05c6 E9050000 		.4byte	0x5e9
 3514 05ca 0B       		.uleb128 0xb
 3515 05cb 59010000 		.4byte	.LASF60
 3516 05cf 01       		.byte	0x1
 3517 05d0 1A04     		.2byte	0x41a
 3518 05d2 7A000000 		.4byte	0x7a
 3519 05d6 02       		.byte	0x2
 3520 05d7 91       		.byte	0x91
 3521 05d8 6C       		.sleb128 -20
 3522 05d9 0A       		.uleb128 0xa
 3523 05da 01040000 		.4byte	.LASF18
 3524 05de 01       		.byte	0x1
 3525 05df 1C04     		.2byte	0x41c
 3526 05e1 6F000000 		.4byte	0x6f
 3527 05e5 02       		.byte	0x2
 3528 05e6 91       		.byte	0x91
 3529 05e7 77       		.sleb128 -9
 3530 05e8 00       		.byte	0x0
 3531 05e9 09       		.uleb128 0x9
 3532 05ea 01       		.byte	0x1
 3533 05eb 95010000 		.4byte	.LASF63
 3534 05ef 01       		.byte	0x1
 3535 05f0 3A04     		.2byte	0x43a
 3536 05f2 01       		.byte	0x1
 3537 05f3 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 86


 3538 05f7 48000000 		.4byte	.LFE31
 3539 05fb 3D060000 		.4byte	.LLST31
 3540 05ff 22060000 		.4byte	0x622
 3541 0603 0B       		.uleb128 0xb
 3542 0604 59010000 		.4byte	.LASF60
 3543 0608 01       		.byte	0x1
 3544 0609 3A04     		.2byte	0x43a
 3545 060b 7A000000 		.4byte	0x7a
 3546 060f 02       		.byte	0x2
 3547 0610 91       		.byte	0x91
 3548 0611 6C       		.sleb128 -20
 3549 0612 0A       		.uleb128 0xa
 3550 0613 01040000 		.4byte	.LASF18
 3551 0617 01       		.byte	0x1
 3552 0618 3C04     		.2byte	0x43c
 3553 061a 6F000000 		.4byte	0x6f
 3554 061e 02       		.byte	0x2
 3555 061f 91       		.byte	0x91
 3556 0620 77       		.sleb128 -9
 3557 0621 00       		.byte	0x0
 3558 0622 09       		.uleb128 0x9
 3559 0623 01       		.byte	0x1
 3560 0624 12040000 		.4byte	.LASF64
 3561 0628 01       		.byte	0x1
 3562 0629 5B04     		.2byte	0x45b
 3563 062b 01       		.byte	0x1
 3564 062c 00000000 		.4byte	.LFB32
 3565 0630 48000000 		.4byte	.LFE32
 3566 0634 74060000 		.4byte	.LLST32
 3567 0638 5B060000 		.4byte	0x65b
 3568 063c 0B       		.uleb128 0xb
 3569 063d 59010000 		.4byte	.LASF60
 3570 0641 01       		.byte	0x1
 3571 0642 5B04     		.2byte	0x45b
 3572 0644 7A000000 		.4byte	0x7a
 3573 0648 02       		.byte	0x2
 3574 0649 91       		.byte	0x91
 3575 064a 6C       		.sleb128 -20
 3576 064b 0A       		.uleb128 0xa
 3577 064c 01040000 		.4byte	.LASF18
 3578 0650 01       		.byte	0x1
 3579 0651 5D04     		.2byte	0x45d
 3580 0653 6F000000 		.4byte	0x6f
 3581 0657 02       		.byte	0x2
 3582 0658 91       		.byte	0x91
 3583 0659 77       		.sleb128 -9
 3584 065a 00       		.byte	0x0
 3585 065b 09       		.uleb128 0x9
 3586 065c 01       		.byte	0x1
 3587 065d 16020000 		.4byte	.LASF65
 3588 0661 01       		.byte	0x1
 3589 0662 8304     		.2byte	0x483
 3590 0664 01       		.byte	0x1
 3591 0665 00000000 		.4byte	.LFB33
 3592 0669 3C000000 		.4byte	.LFE33
 3593 066d AB060000 		.4byte	.LLST33
 3594 0671 A3060000 		.4byte	0x6a3
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 87


 3595 0675 0B       		.uleb128 0xb
 3596 0676 65010000 		.4byte	.LASF36
 3597 067a 01       		.byte	0x1
 3598 067b 8304     		.2byte	0x483
 3599 067d 7A000000 		.4byte	0x7a
 3600 0681 02       		.byte	0x2
 3601 0682 91       		.byte	0x91
 3602 0683 6C       		.sleb128 -20
 3603 0684 0B       		.uleb128 0xb
 3604 0685 C5010000 		.4byte	.LASF66
 3605 0689 01       		.byte	0x1
 3606 068a 8304     		.2byte	0x483
 3607 068c 7A000000 		.4byte	0x7a
 3608 0690 02       		.byte	0x2
 3609 0691 91       		.byte	0x91
 3610 0692 68       		.sleb128 -24
 3611 0693 0A       		.uleb128 0xa
 3612 0694 01040000 		.4byte	.LASF18
 3613 0698 01       		.byte	0x1
 3614 0699 8504     		.2byte	0x485
 3615 069b 6F000000 		.4byte	0x6f
 3616 069f 02       		.byte	0x2
 3617 06a0 91       		.byte	0x91
 3618 06a1 77       		.sleb128 -9
 3619 06a2 00       		.byte	0x0
 3620 06a3 0C       		.uleb128 0xc
 3621 06a4 01       		.byte	0x1
 3622 06a5 7D010000 		.4byte	.LASF67
 3623 06a9 01       		.byte	0x1
 3624 06aa A004     		.2byte	0x4a0
 3625 06ac 01       		.byte	0x1
 3626 06ad 7A000000 		.4byte	0x7a
 3627 06b1 00000000 		.4byte	.LFB34
 3628 06b5 20000000 		.4byte	.LFE34
 3629 06b9 E2060000 		.4byte	.LLST34
 3630 06bd 09       		.uleb128 0x9
 3631 06be 01       		.byte	0x1
 3632 06bf A4000000 		.4byte	.LASF68
 3633 06c3 01       		.byte	0x1
 3634 06c4 B904     		.2byte	0x4b9
 3635 06c6 01       		.byte	0x1
 3636 06c7 00000000 		.4byte	.LFB35
 3637 06cb 18000000 		.4byte	.LFE35
 3638 06cf 0D070000 		.4byte	.LLST35
 3639 06d3 E7060000 		.4byte	0x6e7
 3640 06d7 0B       		.uleb128 0xb
 3641 06d8 71030000 		.4byte	.LASF69
 3642 06dc 01       		.byte	0x1
 3643 06dd B904     		.2byte	0x4b9
 3644 06df 7A000000 		.4byte	0x7a
 3645 06e3 02       		.byte	0x2
 3646 06e4 91       		.byte	0x91
 3647 06e5 74       		.sleb128 -12
 3648 06e6 00       		.byte	0x0
 3649 06e7 0C       		.uleb128 0xc
 3650 06e8 01       		.byte	0x1
 3651 06e9 54030000 		.4byte	.LASF70
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 88


 3652 06ed 01       		.byte	0x1
 3653 06ee D004     		.2byte	0x4d0
 3654 06f0 01       		.byte	0x1
 3655 06f1 7A000000 		.4byte	0x7a
 3656 06f5 00000000 		.4byte	.LFB36
 3657 06f9 14000000 		.4byte	.LFE36
 3658 06fd 44070000 		.4byte	.LLST36
 3659 0701 0C       		.uleb128 0xc
 3660 0702 01       		.byte	0x1
 3661 0703 5D040000 		.4byte	.LASF71
 3662 0707 01       		.byte	0x1
 3663 0708 E704     		.2byte	0x4e7
 3664 070a 01       		.byte	0x1
 3665 070b 7A000000 		.4byte	0x7a
 3666 070f 00000000 		.4byte	.LFB37
 3667 0713 14000000 		.4byte	.LFE37
 3668 0717 6F070000 		.4byte	.LLST37
 3669 071b 09       		.uleb128 0x9
 3670 071c 01       		.byte	0x1
 3671 071d B9000000 		.4byte	.LASF72
 3672 0721 01       		.byte	0x1
 3673 0722 FE04     		.2byte	0x4fe
 3674 0724 01       		.byte	0x1
 3675 0725 00000000 		.4byte	.LFB38
 3676 0729 18000000 		.4byte	.LFE38
 3677 072d 9A070000 		.4byte	.LLST38
 3678 0731 45070000 		.4byte	0x745
 3679 0735 0B       		.uleb128 0xb
 3680 0736 71030000 		.4byte	.LASF69
 3681 073a 01       		.byte	0x1
 3682 073b FE04     		.2byte	0x4fe
 3683 073d 7A000000 		.4byte	0x7a
 3684 0741 02       		.byte	0x2
 3685 0742 91       		.byte	0x91
 3686 0743 74       		.sleb128 -12
 3687 0744 00       		.byte	0x0
 3688 0745 09       		.uleb128 0x9
 3689 0746 01       		.byte	0x1
 3690 0747 AA030000 		.4byte	.LASF73
 3691 074b 01       		.byte	0x1
 3692 074c 1505     		.2byte	0x515
 3693 074e 01       		.byte	0x1
 3694 074f 00000000 		.4byte	.LFB39
 3695 0753 18000000 		.4byte	.LFE39
 3696 0757 D1070000 		.4byte	.LLST39
 3697 075b 6F070000 		.4byte	0x76f
 3698 075f 0B       		.uleb128 0xb
 3699 0760 71030000 		.4byte	.LASF69
 3700 0764 01       		.byte	0x1
 3701 0765 1505     		.2byte	0x515
 3702 0767 7A000000 		.4byte	0x7a
 3703 076b 02       		.byte	0x2
 3704 076c 91       		.byte	0x91
 3705 076d 74       		.sleb128 -12
 3706 076e 00       		.byte	0x0
 3707 076f 0D       		.uleb128 0xd
 3708 0770 4A020000 		.4byte	.LASF77
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 89


 3709 0774 01       		.byte	0x1
 3710 0775 16       		.byte	0x16
 3711 0776 6F000000 		.4byte	0x6f
 3712 077a 01       		.byte	0x1
 3713 077b 05       		.byte	0x5
 3714 077c 03       		.byte	0x3
 3715 077d 00000000 		.4byte	PWM_initVar
 3716 0781 00       		.byte	0x0
 3717              		.section	.debug_abbrev
 3718 0000 01       		.uleb128 0x1
 3719 0001 11       		.uleb128 0x11
 3720 0002 01       		.byte	0x1
 3721 0003 25       		.uleb128 0x25
 3722 0004 0E       		.uleb128 0xe
 3723 0005 13       		.uleb128 0x13
 3724 0006 0B       		.uleb128 0xb
 3725 0007 03       		.uleb128 0x3
 3726 0008 0E       		.uleb128 0xe
 3727 0009 1B       		.uleb128 0x1b
 3728 000a 0E       		.uleb128 0xe
 3729 000b 11       		.uleb128 0x11
 3730 000c 01       		.uleb128 0x1
 3731 000d 52       		.uleb128 0x52
 3732 000e 01       		.uleb128 0x1
 3733 000f 55       		.uleb128 0x55
 3734 0010 06       		.uleb128 0x6
 3735 0011 10       		.uleb128 0x10
 3736 0012 06       		.uleb128 0x6
 3737 0013 00       		.byte	0x0
 3738 0014 00       		.byte	0x0
 3739 0015 02       		.uleb128 0x2
 3740 0016 24       		.uleb128 0x24
 3741 0017 00       		.byte	0x0
 3742 0018 0B       		.uleb128 0xb
 3743 0019 0B       		.uleb128 0xb
 3744 001a 3E       		.uleb128 0x3e
 3745 001b 0B       		.uleb128 0xb
 3746 001c 03       		.uleb128 0x3
 3747 001d 0E       		.uleb128 0xe
 3748 001e 00       		.byte	0x0
 3749 001f 00       		.byte	0x0
 3750 0020 03       		.uleb128 0x3
 3751 0021 24       		.uleb128 0x24
 3752 0022 00       		.byte	0x0
 3753 0023 0B       		.uleb128 0xb
 3754 0024 0B       		.uleb128 0xb
 3755 0025 3E       		.uleb128 0x3e
 3756 0026 0B       		.uleb128 0xb
 3757 0027 03       		.uleb128 0x3
 3758 0028 08       		.uleb128 0x8
 3759 0029 00       		.byte	0x0
 3760 002a 00       		.byte	0x0
 3761 002b 04       		.uleb128 0x4
 3762 002c 16       		.uleb128 0x16
 3763 002d 00       		.byte	0x0
 3764 002e 03       		.uleb128 0x3
 3765 002f 0E       		.uleb128 0xe
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 90


 3766 0030 3A       		.uleb128 0x3a
 3767 0031 0B       		.uleb128 0xb
 3768 0032 3B       		.uleb128 0x3b
 3769 0033 0B       		.uleb128 0xb
 3770 0034 49       		.uleb128 0x49
 3771 0035 13       		.uleb128 0x13
 3772 0036 00       		.byte	0x0
 3773 0037 00       		.byte	0x0
 3774 0038 05       		.uleb128 0x5
 3775 0039 24       		.uleb128 0x24
 3776 003a 00       		.byte	0x0
 3777 003b 0B       		.uleb128 0xb
 3778 003c 0B       		.uleb128 0xb
 3779 003d 3E       		.uleb128 0x3e
 3780 003e 0B       		.uleb128 0xb
 3781 003f 00       		.byte	0x0
 3782 0040 00       		.byte	0x0
 3783 0041 06       		.uleb128 0x6
 3784 0042 2E       		.uleb128 0x2e
 3785 0043 00       		.byte	0x0
 3786 0044 3F       		.uleb128 0x3f
 3787 0045 0C       		.uleb128 0xc
 3788 0046 03       		.uleb128 0x3
 3789 0047 0E       		.uleb128 0xe
 3790 0048 3A       		.uleb128 0x3a
 3791 0049 0B       		.uleb128 0xb
 3792 004a 3B       		.uleb128 0x3b
 3793 004b 0B       		.uleb128 0xb
 3794 004c 27       		.uleb128 0x27
 3795 004d 0C       		.uleb128 0xc
 3796 004e 11       		.uleb128 0x11
 3797 004f 01       		.uleb128 0x1
 3798 0050 12       		.uleb128 0x12
 3799 0051 01       		.uleb128 0x1
 3800 0052 40       		.uleb128 0x40
 3801 0053 06       		.uleb128 0x6
 3802 0054 00       		.byte	0x0
 3803 0055 00       		.byte	0x0
 3804 0056 07       		.uleb128 0x7
 3805 0057 2E       		.uleb128 0x2e
 3806 0058 01       		.byte	0x1
 3807 0059 3F       		.uleb128 0x3f
 3808 005a 0C       		.uleb128 0xc
 3809 005b 03       		.uleb128 0x3
 3810 005c 0E       		.uleb128 0xe
 3811 005d 3A       		.uleb128 0x3a
 3812 005e 0B       		.uleb128 0xb
 3813 005f 3B       		.uleb128 0x3b
 3814 0060 0B       		.uleb128 0xb
 3815 0061 27       		.uleb128 0x27
 3816 0062 0C       		.uleb128 0xc
 3817 0063 11       		.uleb128 0x11
 3818 0064 01       		.uleb128 0x1
 3819 0065 12       		.uleb128 0x12
 3820 0066 01       		.uleb128 0x1
 3821 0067 40       		.uleb128 0x40
 3822 0068 06       		.uleb128 0x6
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 91


 3823 0069 01       		.uleb128 0x1
 3824 006a 13       		.uleb128 0x13
 3825 006b 00       		.byte	0x0
 3826 006c 00       		.byte	0x0
 3827 006d 08       		.uleb128 0x8
 3828 006e 34       		.uleb128 0x34
 3829 006f 00       		.byte	0x0
 3830 0070 03       		.uleb128 0x3
 3831 0071 0E       		.uleb128 0xe
 3832 0072 3A       		.uleb128 0x3a
 3833 0073 0B       		.uleb128 0xb
 3834 0074 3B       		.uleb128 0x3b
 3835 0075 0B       		.uleb128 0xb
 3836 0076 49       		.uleb128 0x49
 3837 0077 13       		.uleb128 0x13
 3838 0078 02       		.uleb128 0x2
 3839 0079 0A       		.uleb128 0xa
 3840 007a 00       		.byte	0x0
 3841 007b 00       		.byte	0x0
 3842 007c 09       		.uleb128 0x9
 3843 007d 2E       		.uleb128 0x2e
 3844 007e 01       		.byte	0x1
 3845 007f 3F       		.uleb128 0x3f
 3846 0080 0C       		.uleb128 0xc
 3847 0081 03       		.uleb128 0x3
 3848 0082 0E       		.uleb128 0xe
 3849 0083 3A       		.uleb128 0x3a
 3850 0084 0B       		.uleb128 0xb
 3851 0085 3B       		.uleb128 0x3b
 3852 0086 05       		.uleb128 0x5
 3853 0087 27       		.uleb128 0x27
 3854 0088 0C       		.uleb128 0xc
 3855 0089 11       		.uleb128 0x11
 3856 008a 01       		.uleb128 0x1
 3857 008b 12       		.uleb128 0x12
 3858 008c 01       		.uleb128 0x1
 3859 008d 40       		.uleb128 0x40
 3860 008e 06       		.uleb128 0x6
 3861 008f 01       		.uleb128 0x1
 3862 0090 13       		.uleb128 0x13
 3863 0091 00       		.byte	0x0
 3864 0092 00       		.byte	0x0
 3865 0093 0A       		.uleb128 0xa
 3866 0094 34       		.uleb128 0x34
 3867 0095 00       		.byte	0x0
 3868 0096 03       		.uleb128 0x3
 3869 0097 0E       		.uleb128 0xe
 3870 0098 3A       		.uleb128 0x3a
 3871 0099 0B       		.uleb128 0xb
 3872 009a 3B       		.uleb128 0x3b
 3873 009b 05       		.uleb128 0x5
 3874 009c 49       		.uleb128 0x49
 3875 009d 13       		.uleb128 0x13
 3876 009e 02       		.uleb128 0x2
 3877 009f 0A       		.uleb128 0xa
 3878 00a0 00       		.byte	0x0
 3879 00a1 00       		.byte	0x0
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 92


 3880 00a2 0B       		.uleb128 0xb
 3881 00a3 05       		.uleb128 0x5
 3882 00a4 00       		.byte	0x0
 3883 00a5 03       		.uleb128 0x3
 3884 00a6 0E       		.uleb128 0xe
 3885 00a7 3A       		.uleb128 0x3a
 3886 00a8 0B       		.uleb128 0xb
 3887 00a9 3B       		.uleb128 0x3b
 3888 00aa 05       		.uleb128 0x5
 3889 00ab 49       		.uleb128 0x49
 3890 00ac 13       		.uleb128 0x13
 3891 00ad 02       		.uleb128 0x2
 3892 00ae 0A       		.uleb128 0xa
 3893 00af 00       		.byte	0x0
 3894 00b0 00       		.byte	0x0
 3895 00b1 0C       		.uleb128 0xc
 3896 00b2 2E       		.uleb128 0x2e
 3897 00b3 00       		.byte	0x0
 3898 00b4 3F       		.uleb128 0x3f
 3899 00b5 0C       		.uleb128 0xc
 3900 00b6 03       		.uleb128 0x3
 3901 00b7 0E       		.uleb128 0xe
 3902 00b8 3A       		.uleb128 0x3a
 3903 00b9 0B       		.uleb128 0xb
 3904 00ba 3B       		.uleb128 0x3b
 3905 00bb 05       		.uleb128 0x5
 3906 00bc 27       		.uleb128 0x27
 3907 00bd 0C       		.uleb128 0xc
 3908 00be 49       		.uleb128 0x49
 3909 00bf 13       		.uleb128 0x13
 3910 00c0 11       		.uleb128 0x11
 3911 00c1 01       		.uleb128 0x1
 3912 00c2 12       		.uleb128 0x12
 3913 00c3 01       		.uleb128 0x1
 3914 00c4 40       		.uleb128 0x40
 3915 00c5 06       		.uleb128 0x6
 3916 00c6 00       		.byte	0x0
 3917 00c7 00       		.byte	0x0
 3918 00c8 0D       		.uleb128 0xd
 3919 00c9 34       		.uleb128 0x34
 3920 00ca 00       		.byte	0x0
 3921 00cb 03       		.uleb128 0x3
 3922 00cc 0E       		.uleb128 0xe
 3923 00cd 3A       		.uleb128 0x3a
 3924 00ce 0B       		.uleb128 0xb
 3925 00cf 3B       		.uleb128 0x3b
 3926 00d0 0B       		.uleb128 0xb
 3927 00d1 49       		.uleb128 0x49
 3928 00d2 13       		.uleb128 0x13
 3929 00d3 3F       		.uleb128 0x3f
 3930 00d4 0C       		.uleb128 0xc
 3931 00d5 02       		.uleb128 0x2
 3932 00d6 0A       		.uleb128 0xa
 3933 00d7 00       		.byte	0x0
 3934 00d8 00       		.byte	0x0
 3935 00d9 00       		.byte	0x0
 3936              		.section	.debug_pubnames,"",%progbits
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 93


 3937 0000 68030000 		.4byte	0x368
 3938 0004 0200     		.2byte	0x2
 3939 0006 00000000 		.4byte	.Ldebug_info0
 3940 000a 82070000 		.4byte	0x782
 3941 000e 9D000000 		.4byte	0x9d
 3942 0012 50574D5F 		.ascii	"PWM_Init\000"
 3942      496E6974 
 3942      00
 3943 001b B2000000 		.4byte	0xb2
 3944 001f 50574D5F 		.ascii	"PWM_Enable\000"
 3944      456E6162 
 3944      6C6500
 3945 002a DA000000 		.4byte	0xda
 3946 002e 50574D5F 		.ascii	"PWM_Start\000"
 3946      53746172 
 3946      7400
 3947 0038 EF000000 		.4byte	0xef
 3948 003c 50574D5F 		.ascii	"PWM_Stop\000"
 3948      53746F70 
 3948      00
 3949 0045 19010000 		.4byte	0x119
 3950 0049 50574D5F 		.ascii	"PWM_SetMode\000"
 3950      5365744D 
 3950      6F646500 
 3951 0055 52010000 		.4byte	0x152
 3952 0059 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3952      53657451 
 3952      444D6F64 
 3952      6500
 3953 0067 8B010000 		.4byte	0x18b
 3954 006b 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3954      53657450 
 3954      72657363 
 3954      616C6572 
 3954      00
 3955 007c C4010000 		.4byte	0x1c4
 3956 0080 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3956      5365744F 
 3956      6E655368 
 3956      6F7400
 3957 008f FD010000 		.4byte	0x1fd
 3958 0093 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3958      53657450 
 3958      574D4D6F 
 3958      646500
 3959 00a2 27020000 		.4byte	0x227
 3960 00a6 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3960      53657450 
 3960      574D5379 
 3960      6E634B69 
 3960      6C6C00
 3961 00b9 60020000 		.4byte	0x260
 3962 00bd 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3962      53657450 
 3962      574D5374 
 3962      6F704F6E 
 3962      4B696C6C 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 94


 3963 00d2 99020000 		.4byte	0x299
 3964 00d6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3964      53657450 
 3964      574D4465 
 3964      61645469 
 3964      6D6500
 3965 00e9 D2020000 		.4byte	0x2d2
 3966 00ed 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3966      53657450 
 3966      574D496E 
 3966      76657274 
 3966      00
 3967 00fe 0B030000 		.4byte	0x30b
 3968 0102 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3968      57726974 
 3968      65436F75 
 3968      6E746572 
 3968      00
 3969 0113 35030000 		.4byte	0x335
 3970 0117 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3970      52656164 
 3970      436F756E 
 3970      74657200 
 3971 0127 4F030000 		.4byte	0x34f
 3972 012b 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3972      53657443 
 3972      6F756E74 
 3972      65724D6F 
 3972      646500
 3973 013e 88030000 		.4byte	0x388
 3974 0142 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3974      57726974 
 3974      65506572 
 3974      696F6400 
 3975 0152 B2030000 		.4byte	0x3b2
 3976 0156 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3976      52656164 
 3976      50657269 
 3976      6F6400
 3977 0165 CC030000 		.4byte	0x3cc
 3978 0169 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3978      53657443 
 3978      6F6D7061 
 3978      72655377 
 3978      617000
 3979 017c 05040000 		.4byte	0x405
 3980 0180 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3980      57726974 
 3980      65506572 
 3980      696F6442 
 3980      756600
 3981 0193 2F040000 		.4byte	0x42f
 3982 0197 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3982      52656164 
 3982      50657269 
 3982      6F644275 
 3982      6600
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 95


 3983 01a9 49040000 		.4byte	0x449
 3984 01ad 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3984      53657450 
 3984      6572696F 
 3984      64537761 
 3984      7000
 3985 01bf 82040000 		.4byte	0x482
 3986 01c3 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3986      57726974 
 3986      65436F6D 
 3986      70617265 
 3986      00
 3987 01d4 AC040000 		.4byte	0x4ac
 3988 01d8 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3988      52656164 
 3988      436F6D70 
 3988      61726500 
 3989 01e8 C6040000 		.4byte	0x4c6
 3990 01ec 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3990      57726974 
 3990      65436F6D 
 3990      70617265 
 3990      42756600 
 3991 0200 F0040000 		.4byte	0x4f0
 3992 0204 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3992      52656164 
 3992      436F6D70 
 3992      61726542 
 3992      756600
 3993 0217 0A050000 		.4byte	0x50a
 3994 021b 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3994      52656164 
 3994      43617074 
 3994      75726500 
 3995 022b 24050000 		.4byte	0x524
 3996 022f 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3996      52656164 
 3996      43617074 
 3996      75726542 
 3996      756600
 3997 0242 3E050000 		.4byte	0x53e
 3998 0246 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3998      53657443 
 3998      61707475 
 3998      72654D6F 
 3998      646500
 3999 0259 77050000 		.4byte	0x577
 4000 025d 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4000      53657452 
 4000      656C6F61 
 4000      644D6F64 
 4000      6500
 4001 026f B0050000 		.4byte	0x5b0
 4002 0273 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4002      53657453 
 4002      74617274 
 4002      4D6F6465 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 96


 4002      00
 4003 0284 E9050000 		.4byte	0x5e9
 4004 0288 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4004      53657453 
 4004      746F704D 
 4004      6F646500 
 4005 0298 22060000 		.4byte	0x622
 4006 029c 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4006      53657443 
 4006      6F756E74 
 4006      4D6F6465 
 4006      00
 4007 02ad 5B060000 		.4byte	0x65b
 4008 02b1 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4008      54726967 
 4008      67657243 
 4008      6F6D6D61 
 4008      6E6400
 4009 02c4 A3060000 		.4byte	0x6a3
 4010 02c8 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4010      52656164 
 4010      53746174 
 4010      757300
 4011 02d7 BD060000 		.4byte	0x6bd
 4012 02db 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4012      53657449 
 4012      6E746572 
 4012      72757074 
 4012      4D6F6465 
 4013 02f0 E7060000 		.4byte	0x6e7
 4014 02f4 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4014      47657449 
 4014      6E746572 
 4014      72757074 
 4014      536F7572 
 4015 0311 01070000 		.4byte	0x701
 4016 0315 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4016      47657449 
 4016      6E746572 
 4016      72757074 
 4016      536F7572 
 4017 032c 1B070000 		.4byte	0x71b
 4018 0330 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4018      436C6561 
 4018      72496E74 
 4018      65727275 
 4018      707400
 4019 0343 45070000 		.4byte	0x745
 4020 0347 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4020      53657449 
 4020      6E746572 
 4020      72757074 
 4020      00
 4021 0358 6F070000 		.4byte	0x76f
 4022 035c 50574D5F 		.ascii	"PWM_initVar\000"
 4022      696E6974 
 4022      56617200 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 97


 4023 0368 00000000 		.4byte	0x0
 4024              		.section	.debug_aranges,"",%progbits
 4025 0000 54010000 		.4byte	0x154
 4026 0004 0200     		.2byte	0x2
 4027 0006 00000000 		.4byte	.Ldebug_info0
 4028 000a 04       		.byte	0x4
 4029 000b 00       		.byte	0x0
 4030 000c 0000     		.2byte	0x0
 4031 000e 0000     		.2byte	0x0
 4032 0010 00000000 		.4byte	.LFB0
 4033 0014 58000000 		.4byte	.LFE0-.LFB0
 4034 0018 00000000 		.4byte	.LFB1
 4035 001c 34000000 		.4byte	.LFE1-.LFB1
 4036 0020 00000000 		.4byte	.LFB2
 4037 0024 24000000 		.4byte	.LFE2-.LFB2
 4038 0028 00000000 		.4byte	.LFB3
 4039 002c 34000000 		.4byte	.LFE3-.LFB3
 4040 0030 00000000 		.4byte	.LFB4
 4041 0034 48000000 		.4byte	.LFE4-.LFB4
 4042 0038 00000000 		.4byte	.LFB5
 4043 003c 48000000 		.4byte	.LFE5-.LFB5
 4044 0040 00000000 		.4byte	.LFB6
 4045 0044 48000000 		.4byte	.LFE6-.LFB6
 4046 0048 00000000 		.4byte	.LFB7
 4047 004c 50000000 		.4byte	.LFE7-.LFB7
 4048 0050 00000000 		.4byte	.LFB8
 4049 0054 1C000000 		.4byte	.LFE8-.LFB8
 4050 0058 00000000 		.4byte	.LFB9
 4051 005c 4C000000 		.4byte	.LFE9-.LFB9
 4052 0060 00000000 		.4byte	.LFB10
 4053 0064 4C000000 		.4byte	.LFE10-.LFB10
 4054 0068 00000000 		.4byte	.LFB11
 4055 006c 50000000 		.4byte	.LFE11-.LFB11
 4056 0070 00000000 		.4byte	.LFB12
 4057 0074 48000000 		.4byte	.LFE12-.LFB12
 4058 0078 00000000 		.4byte	.LFB13
 4059 007c 1C000000 		.4byte	.LFE13-.LFB13
 4060 0080 00000000 		.4byte	.LFB14
 4061 0084 18000000 		.4byte	.LFE14-.LFB14
 4062 0088 00000000 		.4byte	.LFB15
 4063 008c 48000000 		.4byte	.LFE15-.LFB15
 4064 0090 00000000 		.4byte	.LFB16
 4065 0094 1C000000 		.4byte	.LFE16-.LFB16
 4066 0098 00000000 		.4byte	.LFB17
 4067 009c 18000000 		.4byte	.LFE17-.LFB17
 4068 00a0 00000000 		.4byte	.LFB18
 4069 00a4 48000000 		.4byte	.LFE18-.LFB18
 4070 00a8 00000000 		.4byte	.LFB19
 4071 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4072 00b0 00000000 		.4byte	.LFB20
 4073 00b4 18000000 		.4byte	.LFE20-.LFB20
 4074 00b8 00000000 		.4byte	.LFB21
 4075 00bc 4C000000 		.4byte	.LFE21-.LFB21
 4076 00c0 00000000 		.4byte	.LFB22
 4077 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4078 00c8 00000000 		.4byte	.LFB23
 4079 00cc 18000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 98


 4080 00d0 00000000 		.4byte	.LFB24
 4081 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4082 00d8 00000000 		.4byte	.LFB25
 4083 00dc 18000000 		.4byte	.LFE25-.LFB25
 4084 00e0 00000000 		.4byte	.LFB26
 4085 00e4 18000000 		.4byte	.LFE26-.LFB26
 4086 00e8 00000000 		.4byte	.LFB27
 4087 00ec 18000000 		.4byte	.LFE27-.LFB27
 4088 00f0 00000000 		.4byte	.LFB28
 4089 00f4 44000000 		.4byte	.LFE28-.LFB28
 4090 00f8 00000000 		.4byte	.LFB29
 4091 00fc 48000000 		.4byte	.LFE29-.LFB29
 4092 0100 00000000 		.4byte	.LFB30
 4093 0104 4C000000 		.4byte	.LFE30-.LFB30
 4094 0108 00000000 		.4byte	.LFB31
 4095 010c 48000000 		.4byte	.LFE31-.LFB31
 4096 0110 00000000 		.4byte	.LFB32
 4097 0114 48000000 		.4byte	.LFE32-.LFB32
 4098 0118 00000000 		.4byte	.LFB33
 4099 011c 3C000000 		.4byte	.LFE33-.LFB33
 4100 0120 00000000 		.4byte	.LFB34
 4101 0124 20000000 		.4byte	.LFE34-.LFB34
 4102 0128 00000000 		.4byte	.LFB35
 4103 012c 18000000 		.4byte	.LFE35-.LFB35
 4104 0130 00000000 		.4byte	.LFB36
 4105 0134 14000000 		.4byte	.LFE36-.LFB36
 4106 0138 00000000 		.4byte	.LFB37
 4107 013c 14000000 		.4byte	.LFE37-.LFB37
 4108 0140 00000000 		.4byte	.LFB38
 4109 0144 18000000 		.4byte	.LFE38-.LFB38
 4110 0148 00000000 		.4byte	.LFB39
 4111 014c 18000000 		.4byte	.LFE39-.LFB39
 4112 0150 00000000 		.4byte	0x0
 4113 0154 00000000 		.4byte	0x0
 4114              		.section	.debug_ranges,"",%progbits
 4115              	.Ldebug_ranges0:
 4116 0000 00000000 		.4byte	.Ltext0
 4117 0004 00000000 		.4byte	.Letext0
 4118 0008 00000000 		.4byte	.LFB0
 4119 000c 58000000 		.4byte	.LFE0
 4120 0010 00000000 		.4byte	.LFB1
 4121 0014 34000000 		.4byte	.LFE1
 4122 0018 00000000 		.4byte	.LFB2
 4123 001c 24000000 		.4byte	.LFE2
 4124 0020 00000000 		.4byte	.LFB3
 4125 0024 34000000 		.4byte	.LFE3
 4126 0028 00000000 		.4byte	.LFB4
 4127 002c 48000000 		.4byte	.LFE4
 4128 0030 00000000 		.4byte	.LFB5
 4129 0034 48000000 		.4byte	.LFE5
 4130 0038 00000000 		.4byte	.LFB6
 4131 003c 48000000 		.4byte	.LFE6
 4132 0040 00000000 		.4byte	.LFB7
 4133 0044 50000000 		.4byte	.LFE7
 4134 0048 00000000 		.4byte	.LFB8
 4135 004c 1C000000 		.4byte	.LFE8
 4136 0050 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 99


 4137 0054 4C000000 		.4byte	.LFE9
 4138 0058 00000000 		.4byte	.LFB10
 4139 005c 4C000000 		.4byte	.LFE10
 4140 0060 00000000 		.4byte	.LFB11
 4141 0064 50000000 		.4byte	.LFE11
 4142 0068 00000000 		.4byte	.LFB12
 4143 006c 48000000 		.4byte	.LFE12
 4144 0070 00000000 		.4byte	.LFB13
 4145 0074 1C000000 		.4byte	.LFE13
 4146 0078 00000000 		.4byte	.LFB14
 4147 007c 18000000 		.4byte	.LFE14
 4148 0080 00000000 		.4byte	.LFB15
 4149 0084 48000000 		.4byte	.LFE15
 4150 0088 00000000 		.4byte	.LFB16
 4151 008c 1C000000 		.4byte	.LFE16
 4152 0090 00000000 		.4byte	.LFB17
 4153 0094 18000000 		.4byte	.LFE17
 4154 0098 00000000 		.4byte	.LFB18
 4155 009c 48000000 		.4byte	.LFE18
 4156 00a0 00000000 		.4byte	.LFB19
 4157 00a4 1C000000 		.4byte	.LFE19
 4158 00a8 00000000 		.4byte	.LFB20
 4159 00ac 18000000 		.4byte	.LFE20
 4160 00b0 00000000 		.4byte	.LFB21
 4161 00b4 4C000000 		.4byte	.LFE21
 4162 00b8 00000000 		.4byte	.LFB22
 4163 00bc 1C000000 		.4byte	.LFE22
 4164 00c0 00000000 		.4byte	.LFB23
 4165 00c4 18000000 		.4byte	.LFE23
 4166 00c8 00000000 		.4byte	.LFB24
 4167 00cc 1C000000 		.4byte	.LFE24
 4168 00d0 00000000 		.4byte	.LFB25
 4169 00d4 18000000 		.4byte	.LFE25
 4170 00d8 00000000 		.4byte	.LFB26
 4171 00dc 18000000 		.4byte	.LFE26
 4172 00e0 00000000 		.4byte	.LFB27
 4173 00e4 18000000 		.4byte	.LFE27
 4174 00e8 00000000 		.4byte	.LFB28
 4175 00ec 44000000 		.4byte	.LFE28
 4176 00f0 00000000 		.4byte	.LFB29
 4177 00f4 48000000 		.4byte	.LFE29
 4178 00f8 00000000 		.4byte	.LFB30
 4179 00fc 4C000000 		.4byte	.LFE30
 4180 0100 00000000 		.4byte	.LFB31
 4181 0104 48000000 		.4byte	.LFE31
 4182 0108 00000000 		.4byte	.LFB32
 4183 010c 48000000 		.4byte	.LFE32
 4184 0110 00000000 		.4byte	.LFB33
 4185 0114 3C000000 		.4byte	.LFE33
 4186 0118 00000000 		.4byte	.LFB34
 4187 011c 20000000 		.4byte	.LFE34
 4188 0120 00000000 		.4byte	.LFB35
 4189 0124 18000000 		.4byte	.LFE35
 4190 0128 00000000 		.4byte	.LFB36
 4191 012c 14000000 		.4byte	.LFE36
 4192 0130 00000000 		.4byte	.LFB37
 4193 0134 14000000 		.4byte	.LFE37
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 100


 4194 0138 00000000 		.4byte	.LFB38
 4195 013c 18000000 		.4byte	.LFE38
 4196 0140 00000000 		.4byte	.LFB39
 4197 0144 18000000 		.4byte	.LFE39
 4198 0148 00000000 		.4byte	0x0
 4199 014c 00000000 		.4byte	0x0
 4200              		.section	.debug_str,"MS",%progbits,1
 4201              	.LASF38:
 4202 0000 636F756E 		.ascii	"count\000"
 4202      7400
 4203              	.LASF16:
 4204 0006 50574D5F 		.ascii	"PWM_Enable\000"
 4204      456E6162 
 4204      6C6500
 4205              	.LASF29:
 4206 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 4206      53657450 
 4206      574D5379 
 4206      6E634B69 
 4206      6C6C00
 4207              	.LASF42:
 4208 0024 70657269 		.ascii	"period\000"
 4208      6F6400
 4209              	.LASF7:
 4210 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4210      206C6F6E 
 4210      6720756E 
 4210      7369676E 
 4210      65642069 
 4211              	.LASF74:
 4212 0042 474E5520 		.ascii	"GNU C 4.4.1\000"
 4212      4320342E 
 4212      342E3100 
 4213              	.LASF22:
 4214 004e 71644D6F 		.ascii	"qdMode\000"
 4214      646500
 4215              	.LASF37:
 4216 0055 50574D5F 		.ascii	"PWM_WriteCounter\000"
 4216      57726974 
 4216      65436F75 
 4216      6E746572 
 4216      00
 4217              	.LASF43:
 4218 0066 50574D5F 		.ascii	"PWM_ReadCounter\000"
 4218      52656164 
 4218      436F756E 
 4218      74657200 
 4219              	.LASF6:
 4220 0076 6C6F6E67 		.ascii	"long long int\000"
 4220      206C6F6E 
 4220      6720696E 
 4220      7400
 4221              	.LASF0:
 4222 0084 7369676E 		.ascii	"signed char\000"
 4222      65642063 
 4222      68617200 
 4223              	.LASF54:
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 101


 4224 0090 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 4224      57726974 
 4224      65436F6D 
 4224      70617265 
 4224      42756600 
 4225              	.LASF68:
 4226 00a4 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4226      53657449 
 4226      6E746572 
 4226      72757074 
 4226      4D6F6465 
 4227              	.LASF72:
 4228 00b9 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4228      436C6561 
 4228      72496E74 
 4228      65727275 
 4228      707400
 4229              	.LASF75:
 4230 00cc 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 4230      6E657261 
 4230      7465645F 
 4230      536F7572 
 4230      63655C50 
 4231              	.LASF4:
 4232 00eb 6C6F6E67 		.ascii	"long int\000"
 4232      20696E74 
 4232      00
 4233              	.LASF9:
 4234 00f4 75696E74 		.ascii	"uint8\000"
 4234      3800
 4235              	.LASF12:
 4236 00fa 646F7562 		.ascii	"double\000"
 4236      6C6500
 4237              	.LASF56:
 4238 0101 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 4238      52656164 
 4238      436F6D70 
 4238      61726542 
 4238      756600
 4239              	.LASF45:
 4240 0114 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 4240      53657443 
 4240      6F6D7061 
 4240      72655377 
 4240      617000
 4241              	.LASF17:
 4242 0127 50574D5F 		.ascii	"PWM_Stop\000"
 4242      53746F70 
 4242      00
 4243              	.LASF35:
 4244 0130 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 4244      53657450 
 4244      574D496E 
 4244      76657274 
 4244      00
 4245              	.LASF10:
 4246 0141 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 102


 4246      333200
 4247              	.LASF62:
 4248 0148 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4248      53657453 
 4248      74617274 
 4248      4D6F6465 
 4248      00
 4249              	.LASF60:
 4250 0159 74726967 		.ascii	"triggerMode\000"
 4250      6765724D 
 4250      6F646500 
 4251              	.LASF36:
 4252 0165 6D61736B 		.ascii	"mask\000"
 4252      00
 4253              	.LASF59:
 4254 016a 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 4254      53657443 
 4254      61707475 
 4254      72654D6F 
 4254      646500
 4255              	.LASF67:
 4256 017d 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4256      52656164 
 4256      53746174 
 4256      757300
 4257              	.LASF34:
 4258 018c 64656164 		.ascii	"deadTime\000"
 4258      54696D65 
 4258      00
 4259              	.LASF63:
 4260 0195 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4260      53657453 
 4260      746F704D 
 4260      6F646500 
 4261              	.LASF8:
 4262 01a5 756E7369 		.ascii	"unsigned int\000"
 4262      676E6564 
 4262      20696E74 
 4262      00
 4263              	.LASF33:
 4264 01b2 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 4264      53657450 
 4264      574D4465 
 4264      61645469 
 4264      6D6500
 4265              	.LASF66:
 4266 01c5 636F6D6D 		.ascii	"command\000"
 4266      616E6400 
 4267              	.LASF5:
 4268 01cd 6C6F6E67 		.ascii	"long unsigned int\000"
 4268      20756E73 
 4268      69676E65 
 4268      6420696E 
 4268      7400
 4269              	.LASF28:
 4270 01df 6D6F6465 		.ascii	"modeMask\000"
 4270      4D61736B 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 103


 4270      00
 4271              	.LASF3:
 4272 01e8 73686F72 		.ascii	"short unsigned int\000"
 4272      7420756E 
 4272      7369676E 
 4272      65642069 
 4272      6E7400
 4273              	.LASF23:
 4274 01fb 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 4274      53657450 
 4274      72657363 
 4274      616C6572 
 4274      00
 4275              	.LASF15:
 4276 020c 50574D5F 		.ascii	"PWM_Start\000"
 4276      53746172 
 4276      7400
 4277              	.LASF65:
 4278 0216 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4278      54726967 
 4278      67657243 
 4278      6F6D6D61 
 4278      6E6400
 4279              	.LASF51:
 4280 0229 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4280      57726974 
 4280      65436F6D 
 4280      70617265 
 4280      00
 4281              	.LASF41:
 4282 023a 50574D5F 		.ascii	"PWM_WritePeriod\000"
 4282      57726974 
 4282      65506572 
 4282      696F6400 
 4283              	.LASF77:
 4284 024a 50574D5F 		.ascii	"PWM_initVar\000"
 4284      696E6974 
 4284      56617200 
 4285              	.LASF76:
 4286 0256 433A5C55 		.ascii	"C:\\Users\\gagan\\Pioneer Kit Projects\\Blinking LE"
 4286      73657273 
 4286      5C676167 
 4286      616E5C50 
 4286      696F6E65 
 4287 0285 445C426C 		.ascii	"D\\Blinking LED.cydsn\000"
 4287      696E6B69 
 4287      6E67204C 
 4287      45442E63 
 4287      7964736E 
 4288              	.LASF30:
 4289 029a 73796E63 		.ascii	"syncKillEnable\000"
 4289      4B696C6C 
 4289      456E6162 
 4289      6C6500
 4290              	.LASF52:
 4291 02a9 636F6D70 		.ascii	"compare\000"
 4291      61726500 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 104


 4292              	.LASF25:
 4293 02b1 50574D5F 		.ascii	"PWM_SetOneShot\000"
 4293      5365744F 
 4293      6E655368 
 4293      6F7400
 4294              	.LASF44:
 4295 02c0 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 4295      52656164 
 4295      50657269 
 4295      6F6400
 4296              	.LASF49:
 4297 02cf 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 4297      52656164 
 4297      50657269 
 4297      6F644275 
 4297      6600
 4298              	.LASF11:
 4299 02e1 666C6F61 		.ascii	"float\000"
 4299      7400
 4300              	.LASF24:
 4301 02e7 70726573 		.ascii	"prescaler\000"
 4301      63616C65 
 4301      7200
 4302              	.LASF57:
 4303 02f1 50574D5F 		.ascii	"PWM_ReadCapture\000"
 4303      52656164 
 4303      43617074 
 4303      75726500 
 4304              	.LASF50:
 4305 0301 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 4305      53657450 
 4305      6572696F 
 4305      64537761 
 4305      7000
 4306              	.LASF1:
 4307 0313 756E7369 		.ascii	"unsigned char\000"
 4307      676E6564 
 4307      20636861 
 4307      7200
 4308              	.LASF14:
 4309 0321 50574D5F 		.ascii	"PWM_Init\000"
 4309      496E6974 
 4309      00
 4310              	.LASF32:
 4311 032a 73746F70 		.ascii	"stopOnKillEnable\000"
 4311      4F6E4B69 
 4311      6C6C456E 
 4311      61626C65 
 4311      00
 4312              	.LASF27:
 4313 033b 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 4313      53657450 
 4313      574D4D6F 
 4313      646500
 4314              	.LASF2:
 4315 034a 73686F72 		.ascii	"short int\000"
 4315      7420696E 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 105


 4315      7400
 4316              	.LASF70:
 4317 0354 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4317      47657449 
 4317      6E746572 
 4317      72757074 
 4317      536F7572 
 4318              	.LASF69:
 4319 0371 696E7465 		.ascii	"interruptMask\000"
 4319      72727570 
 4319      744D6173 
 4319      6B00
 4320              	.LASF47:
 4321 037f 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 4321      57726974 
 4321      65506572 
 4321      696F6442 
 4321      756600
 4322              	.LASF20:
 4323 0392 50574D5F 		.ascii	"PWM_SetQDMode\000"
 4323      53657451 
 4323      444D6F64 
 4323      6500
 4324              	.LASF13:
 4325 03a0 63686172 		.ascii	"char\000"
 4325      00
 4326              	.LASF21:
 4327 03a5 6D6F6465 		.ascii	"mode\000"
 4327      00
 4328              	.LASF73:
 4329 03aa 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4329      53657449 
 4329      6E746572 
 4329      72757074 
 4329      00
 4330              	.LASF61:
 4331 03bb 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4331      53657452 
 4331      656C6F61 
 4331      644D6F64 
 4331      6500
 4332              	.LASF40:
 4333 03cd 636F756E 		.ascii	"counterMode\000"
 4333      7465724D 
 4333      6F646500 
 4334              	.LASF55:
 4335 03d9 636F6D70 		.ascii	"compareBuf\000"
 4335      61726542 
 4335      756600
 4336              	.LASF48:
 4337 03e4 70657269 		.ascii	"periodBuf\000"
 4337      6F644275 
 4337      6600
 4338              	.LASF58:
 4339 03ee 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 4339      52656164 
 4339      43617074 
ARM GAS  C:\Users\gagan\AppData\Local\Temp\ccVfL2Av.s 			page 106


 4339      75726542 
 4339      756600
 4340              	.LASF18:
 4341 0401 656E6162 		.ascii	"enableInterrupts\000"
 4341      6C65496E 
 4341      74657272 
 4341      75707473 
 4341      00
 4342              	.LASF64:
 4343 0412 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4343      53657443 
 4343      6F756E74 
 4343      4D6F6465 
 4343      00
 4344              	.LASF26:
 4345 0423 6F6E6553 		.ascii	"oneShotEnable\000"
 4345      686F7445 
 4345      6E61626C 
 4345      6500
 4346              	.LASF19:
 4347 0431 50574D5F 		.ascii	"PWM_SetMode\000"
 4347      5365744D 
 4347      6F646500 
 4348              	.LASF31:
 4349 043d 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 4349      53657450 
 4349      574D5374 
 4349      6F704F6E 
 4349      4B696C6C 
 4350              	.LASF46:
 4351 0452 73776170 		.ascii	"swapEnable\000"
 4351      456E6162 
 4351      6C6500
 4352              	.LASF71:
 4353 045d 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4353      47657449 
 4353      6E746572 
 4353      72757074 
 4353      536F7572 
 4354              	.LASF39:
 4355 0474 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 4355      53657443 
 4355      6F756E74 
 4355      65724D6F 
 4355      646500
 4356              	.LASF53:
 4357 0487 50574D5F 		.ascii	"PWM_ReadCompare\000"
 4357      52656164 
 4357      436F6D70 
 4357      61726500 
 4358              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
